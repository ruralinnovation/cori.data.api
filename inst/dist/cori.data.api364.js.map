{"version":3,"file":"cori.data.api364.js","sources":["../../node_modules/apache-arrow/builder/dictionary.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Dictionary } from '../type.mjs';\nimport { Builder } from '../builder.mjs';\nimport { makeBuilder } from '../factories.mjs';\n/** @ignore */\nexport class DictionaryBuilder extends Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = makeBuilder({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = makeBuilder({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        const keysToIndices = this._keysToIndices;\n        const key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n\n//# sourceMappingURL=dictionary.mjs.map\n"],"names":["DictionaryBuilder","Builder","type","nulls","hashFn","Dictionary","makeBuilder","value","index","valid","indices","keysToIndices","key","idx","prev","curr","data","val"],"mappings":";;;;;;;;;AAoBO,MAAMA,UAA0BC,EAAQ;AAAA,EAC3C,YAAY,EAAE,MAAQC,GAAM,YAAcC,GAAO,wBAA0BC,KAAU;AACjF,UAAM,EAAE,MAAM,IAAIC,EAAWH,EAAK,YAAYA,EAAK,SAASA,EAAK,IAAIA,EAAK,SAAS,EAAG,CAAA,GACtF,KAAK,SAAS,MACd,KAAK,oBAAoB,GACzB,KAAK,iBAAiB,uBAAO,OAAO,IAAI,GACxC,KAAK,UAAUI,EAAY,EAAE,MAAQ,KAAK,KAAK,SAAS,YAAcH,EAAK,CAAE,GAC7E,KAAK,aAAaG,EAAY,EAAE,MAAQ,KAAK,KAAK,YAAY,YAAc,KAAI,CAAE,GAC9E,OAAOF,KAAW,eAClB,KAAK,aAAaA;AAAA,EAEzB;AAAA,EACD,IAAI,SAAS;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAS;AAAA,EAC5C,IAAI,YAAY;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAY;AAAA,EAClD,IAAI,aAAa;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAa;AAAA,EACpD,IAAI,aAAa;AAAE,WAAO,KAAK,QAAQ,aAAa,KAAK,WAAW;AAAA,EAAa;AAAA,EACjF,IAAI,iBAAiB;AAAE,WAAO,KAAK,QAAQ,iBAAiB,KAAK,WAAW;AAAA,EAAiB;AAAA,EAC7F,IAAI,qBAAqB;AAAE,WAAO,KAAK,QAAQ,qBAAqB,KAAK,WAAW;AAAA,EAAqB;AAAA,EACzG,QAAQG,GAAO;AAAE,WAAO,KAAK,QAAQ,QAAQA,CAAK;AAAA,EAAI;AAAA,EACtD,SAASC,GAAOC,GAAO;AACnB,UAAMC,IAAU,KAAK;AACrB,WAAAD,IAAQC,EAAQ,SAASF,GAAOC,CAAK,GACrC,KAAK,SAASC,EAAQ,QACfD;AAAA,EACV;AAAA,EACD,SAASD,GAAOD,GAAO;AACnB,UAAMI,IAAgB,KAAK,gBACrBC,IAAM,KAAK,WAAWL,CAAK;AACjC,QAAIM,IAAMF,EAAcC,CAAG;AAC3B,WAAIC,MAAQ,WACRF,EAAcC,CAAG,IAAIC,IAAM,KAAK,oBAAoB,KAAK,WAAW,OAAON,CAAK,EAAE,SAAS,IAExF,KAAK,QAAQ,SAASC,GAAOK,CAAG;AAAA,EAC1C;AAAA,EACD,QAAQ;AACJ,UAAMX,IAAO,KAAK,MACZY,IAAO,KAAK,aACZC,IAAO,KAAK,WAAW,SAAQ,GAC/BC,IAAO,KAAK,QAAQ,MAAK,EAAG,MAAMd,CAAI;AAC5C,WAAAc,EAAK,aAAaF,IAAOA,EAAK,OAAOC,CAAI,IAAIA,GAC7C,KAAK,aAAa,KAAK,qBAAqBA,EAAK,SACjD,KAAK,cAAcC,EAAK,YACxB,KAAK,MAAK,GACHA;AAAA,EACV;AAAA,EACD,SAAS;AACL,gBAAK,QAAQ,UACb,KAAK,WAAW,UAChB,KAAK,oBAAoB,GACzB,KAAK,iBAAiB,uBAAO,OAAO,IAAI,GACjC,MAAM;EAChB;AAAA,EACD,QAAQ;AACJ,gBAAK,QAAQ,SACb,KAAK,WAAW,SACT,MAAM;EAChB;AAAA,EACD,WAAWC,GAAK;AACZ,WAAO,OAAOA,KAAQ,WAAWA,IAAM,GAAGA,CAAG;AAAA,EAChD;AACL;","x_google_ignoreList":[0]}