{"version":3,"file":"cori.data.api434.js","sources":["../../node_modules/arquero/src/verbs/join-filter.js"],"sourcesContent":["import _join_filter from '../engine/join-filter';\nimport { inferKeys, keyPredicate } from './util/join-keys';\nimport parse from '../expression/parse';\nimport isArray from '../util/is-array';\nimport toArray from '../util/to-array';\n\nexport default function(tableL, tableR, on, options) {\n  on = inferKeys(tableL, tableR, on);\n\n  const predicate = isArray(on)\n    ? keyPredicate(tableL, tableR, ...on.map(toArray))\n    : parse({ on }, { join: [tableL, tableR] }).exprs[0];\n\n  return _join_filter(tableL, tableR, predicate, options);\n}"],"names":["__semijoin","tableL","tableR","on","options","inferKeys","predicate","isArray","keyPredicate","toArray","parse","_join_filter"],"mappings":";;;;;;;;;;;AAMe,SAAQA,EAACC,GAAQC,GAAQC,GAAIC,GAAS;AACnD,EAAAD,IAAKE,EAAUJ,GAAQC,GAAQC,CAAE;AAEjC,QAAMG,IAAYC,EAAQJ,CAAE,IACxBK,EAAaP,GAAQC,GAAQ,GAAGC,EAAG,IAAIM,CAAO,CAAC,IAC/CC,EAAM,EAAE,IAAAP,KAAM,EAAE,MAAM,CAACF,GAAQC,CAAM,EAAG,CAAA,EAAE,MAAM,CAAC;AAErD,SAAOS,EAAaV,GAAQC,GAAQI,GAAWF,CAAO;AACxD;","x_google_ignoreList":[0]}