{"version":3,"file":"cori.data.api583.js","sources":["../../node_modules/apache-arrow/visitor/typeassembler.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { Null } from '../fb/null.mjs';\nimport { Int } from '../fb/int.mjs';\nimport { FloatingPoint } from '../fb/floating-point.mjs';\nimport { Binary } from '../fb/binary.mjs';\nimport { LargeBinary } from '../fb/large-binary.mjs';\nimport { Bool } from '../fb/bool.mjs';\nimport { Utf8 } from '../fb/utf8.mjs';\nimport { LargeUtf8 } from '../fb/large-utf8.mjs';\nimport { Decimal } from '../fb/decimal.mjs';\nimport { Date } from '../fb/date.mjs';\nimport { Time } from '../fb/time.mjs';\nimport { Timestamp } from '../fb/timestamp.mjs';\nimport { Interval } from '../fb/interval.mjs';\nimport { Duration } from '../fb/duration.mjs';\nimport { List } from '../fb/list.mjs';\nimport { Struct_ as Struct } from '../fb/struct-.mjs';\nimport { Union } from '../fb/union.mjs';\nimport { DictionaryEncoding } from '../fb/dictionary-encoding.mjs';\nimport { FixedSizeBinary } from '../fb/fixed-size-binary.mjs';\nimport { FixedSizeList } from '../fb/fixed-size-list.mjs';\nimport { Map as Map_ } from '../fb/map.mjs';\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitLargeBinary(_node, b) {\n        LargeBinary.startLargeBinary(b);\n        return LargeBinary.endLargeBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitLargeUtf8(_node, b) {\n        LargeUtf8.startLargeUtf8(b);\n        return LargeUtf8.endLargeUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        Decimal.addBitWidth(b, node.bitWidth);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitDuration(node, b) {\n        Duration.startDuration(b);\n        Duration.addUnit(b, node.unit);\n        return Duration.endDuration(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, BigInt(node.id));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n"],"names":["TypeAssembler","Visitor","node","builder","_node","b","Null","Int","FloatingPoint","Binary","LargeBinary","Bool","Utf8","LargeUtf8","Decimal","Date","Time","timezone","Timestamp","Interval","Duration","List","Struct","Union","typeIds","indexType","DictionaryEncoding","FixedSizeBinary","FixedSizeList","Map_","instance"],"mappings":"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","x_google_ignoreList":[0]}