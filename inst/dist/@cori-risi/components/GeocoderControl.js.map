{"version":3,"file":"GeocoderControl.js","sources":["../../../../lib/@cori-risi/components/GeocoderControl.tsx"],"sourcesContent":["import * as React from 'react';\nimport {ReactElement, SetStateAction, useState} from 'react';\nimport {useControl, Marker, MarkerProps, ControlPosition} from 'react-map-gl';\nimport MapboxGeocoder, {GeocoderOptions} from '@mapbox/mapbox-gl-geocoder';\n\ntype GeocoderControlProps = Omit<GeocoderOptions, 'accessToken' | 'mapboxgl' | 'marker'> & {\n  mapboxAccessToken: string;\n  marker?: boolean | Omit<MarkerProps, 'longitude' | 'latitude'>;\n\n  position: ControlPosition;\n\n  onLoading?: (e: object) => void;\n  onResults?: (e: object) => void;\n  onResult?: (e: object) => void;\n  onError?: (e: object) => void;\n};\n\n\n/**\n * This is a Geocoder search component that can be added to any `react-map-gl` Map component.\n *\n * ```ts\n * import mapboxgl from 'mapbox-gl';\n * import Map, { Source, Layer } from 'react-map-gl';\n *\n * import { GeocoderControl } from \"@cori-risi/cori.data.api\";\n *\n * import \"mapbox-gl/dist/mapbox-gl.css\";\n *\n * mapboxgl.accessToken = import.meta.env.VITE_MAPBOX_ACCESS_TOKEN;\n *\n * // ...\n *\n * <Map mapboxAccessToken={MAPBOX_TOKEN}\n *      {...} >\n *    <Source {...} >\n *        <Layer {...} /> :\n *    </Source>\n *    <GeocoderControl mapboxAccessToken={MAPBOX_TOKEN} position=\"top-left\" />\n * </Map>\n * ```\n *\n *  @param props.mapboxAccessToken - Mapbox API token\n *  @param props.marker - `true` or `false` to place marker on result once selected (default: `false`)\n *  @param props.position - CSS class to position control in \"top-left\", \"top-right\", \"bottom-left\" or \"bottom-right\" of the map pane\n */\nexport default function GeocoderControl(props: {\n  mapboxAccessToken: string,\n  marker?: boolean | Omit<MarkerProps, 'longitude' | 'latitude'>,\n  position: ControlPosition\n}) {\n// } & GeocoderControlProps) {\n  const [marker, setMarker] = useState(null);\n  \n  const geocoder_props = { ...props } as unknown as GeocoderControlProps;\n\n  const geocoder = useControl<MapboxGeocoder>(\n    () => {\n      const ctrl = new MapboxGeocoder({\n        ...geocoder_props,\n        marker: marker || false,\n        accessToken: geocoder_props.mapboxAccessToken\n      });\n      if (!!geocoder_props.onLoading) ctrl.on('loading', geocoder_props.onLoading);\n      if (!!geocoder_props.onResults) ctrl.on('results', geocoder_props.onResults);\n      if (!!geocoder_props.onResult) ctrl.on('result', evt => {\n        if (geocoder_props.onResult !== undefined) geocoder_props.onResult(evt);\n\n        const {result} = evt;\n        const location =\n            result &&\n            (result.center || (result.geometry?.type === 'Point' && result.geometry.coordinates));\n        if (location && geocoder_props.marker) {\n          const markerProps = typeof geocoder_props.marker === 'object' ? geocoder_props.marker : {};\n          // noinspection TypeScriptValidateTypes\n          setMarker(<Marker {...markerProps} longitude={location[0]} latitude={location[1]}/> as unknown as SetStateAction<null>);\n        } else {\n          setMarker(null);\n        }\n      });\n      if (!!geocoder_props.onError) ctrl.on('error', geocoder_props.onError);\n      return ctrl;\n    },\n    {\n      position: geocoder_props.position\n    }\n  );\n\n  // @ts-ignore (TS2339) private member\n  if (geocoder.hasOwnProperty(\"_map\") && geocoder[\"_map\"]) {\n    if (geocoder.getProximity() !== geocoder_props.proximity && geocoder_props.proximity !== undefined) {\n      geocoder.setProximity(geocoder_props.proximity);\n    }\n    if (geocoder.getRenderFunction() !== geocoder_props.render && geocoder_props.render !== undefined) {\n      geocoder.setRenderFunction(geocoder_props.render);\n    }\n    if (geocoder.getLanguage() !== geocoder_props.language && geocoder_props.language !== undefined) {\n      geocoder.setLanguage(geocoder_props.language);\n    }\n    if (geocoder.getZoom() !== geocoder_props.zoom && geocoder_props.zoom !== undefined) {\n      geocoder.setZoom(geocoder_props.zoom);\n    }\n    if (geocoder.getFlyTo() !== geocoder_props.flyTo && geocoder_props.flyTo !== undefined) {\n      geocoder.setFlyTo(geocoder_props.flyTo);\n    }\n    if (geocoder.getPlaceholder() !== geocoder_props.placeholder && geocoder_props.placeholder !== undefined) {\n      geocoder.setPlaceholder(geocoder_props.placeholder);\n    }\n    if (geocoder.getCountries() !== geocoder_props.countries && geocoder_props.countries !== undefined) {\n      geocoder.setCountries(geocoder_props.countries);\n    }\n    if (geocoder.getTypes() !== geocoder_props.types && geocoder_props.types !== undefined) {\n      geocoder.setTypes(geocoder_props.types);\n    }\n    if (geocoder.getMinLength() !== geocoder_props.minLength && geocoder_props.minLength !== undefined) {\n      geocoder.setMinLength(geocoder_props.minLength);\n    }\n    if (geocoder.getLimit() !== geocoder_props.limit && geocoder_props.limit !== undefined) {\n      geocoder.setLimit(geocoder_props.limit);\n    }\n    if (geocoder.getFilter() !== geocoder_props.filter && geocoder_props.filter !== undefined) {\n      geocoder.setFilter(geocoder_props.filter);\n    }\n    if (geocoder.getOrigin() !== geocoder_props.origin && geocoder_props.origin !== undefined) {\n      geocoder.setOrigin(geocoder_props.origin);\n    }\n    if (geocoder.getAutocomplete() !== geocoder_props.autocomplete && geocoder_props.autocomplete !== undefined) {\n      geocoder.setAutocomplete(geocoder_props.autocomplete);\n    }\n    if (geocoder.getFuzzyMatch() !== geocoder_props.fuzzyMatch && geocoder_props.fuzzyMatch !== undefined) {\n      geocoder.setFuzzyMatch(geocoder_props.fuzzyMatch);\n    }\n    if (geocoder.getRouting() !== geocoder_props.routing && geocoder_props.routing !== undefined) {\n      geocoder.setRouting(geocoder_props.routing);\n    }\n    if (geocoder.getWorldview() !== geocoder_props.worldview && geocoder_props.worldview !== undefined) {\n      geocoder.setWorldview(geocoder_props.worldview);\n    }\n  }\n\n  return marker;\n}\n\nconst noop = () => {};\n"],"names":[],"mappings":";;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;AACqB,SAAA,eAAe,CAAC,KAIvC,EAAA;;IAEC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC;AAE1C,IAAA,MAAM,cAAc,GAAG,MAAK,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CAAqC;AAEtE,IAAA,MAAM,QAAQ,GAAG,UAAU,CACzB,MAAK;AACH,QAAA,MAAM,IAAI,GAAG,IAAI,cAAc,CAC1B,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAc,KACjB,MAAM,EAAE,MAAM,IAAI,KAAK,EACvB,WAAW,EAAE,cAAc,CAAC,iBAAiB,IAC7C;AACF,QAAA,IAAI,CAAC,CAAC,cAAc,CAAC,SAAS;YAAE,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC,SAAS,CAAC;AAC5E,QAAA,IAAI,CAAC,CAAC,cAAc,CAAC,SAAS;YAAE,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC,SAAS,CAAC;AAC5E,QAAA,IAAI,CAAC,CAAC,cAAc,CAAC,QAAQ;AAAE,YAAA,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAG;;AACrD,gBAAA,IAAI,cAAc,CAAC,QAAQ,KAAK,SAAS;AAAE,oBAAA,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC;AAEvE,gBAAA,MAAM,EAAC,MAAM,EAAC,GAAG,GAAG;gBACpB,MAAM,QAAQ,GACV,MAAM;qBACL,MAAM,CAAC,MAAM,KAAK,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,IAAI,MAAK,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACzF,gBAAA,IAAI,QAAQ,IAAI,cAAc,CAAC,MAAM,EAAE;AACrC,oBAAA,MAAM,WAAW,GAAG,OAAO,cAAc,CAAC,MAAM,KAAK,QAAQ,GAAG,cAAc,CAAC,MAAM,GAAG,EAAE;;oBAE1F,SAAS,CAAC,oBAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,WAAW,EAAE,EAAA,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAsC,CAAA,CAAA,CAAC;;qBAClH;oBACL,SAAS,CAAC,IAAI,CAAC;;AAEnB,aAAC,CAAC;AACF,QAAA,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO;YAAE,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC;AACtE,QAAA,OAAO,IAAI;AACb,KAAC,EACD;QACE,QAAQ,EAAE,cAAc,CAAC;AAC1B,KAAA,CACF;;AAGD,IAAA,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;AACvD,QAAA,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,KAAK,SAAS,EAAE;AAClG,YAAA,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC;;AAEjD,QAAA,IAAI,QAAQ,CAAC,iBAAiB,EAAE,KAAK,cAAc,CAAC,MAAM,IAAI,cAAc,CAAC,MAAM,KAAK,SAAS,EAAE;AACjG,YAAA,QAAQ,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,CAAC;;AAEnD,QAAA,IAAI,QAAQ,CAAC,WAAW,EAAE,KAAK,cAAc,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC/F,YAAA,QAAQ,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC;;AAE/C,QAAA,IAAI,QAAQ,CAAC,OAAO,EAAE,KAAK,cAAc,CAAC,IAAI,IAAI,cAAc,CAAC,IAAI,KAAK,SAAS,EAAE;AACnF,YAAA,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;;AAEvC,QAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC,KAAK,IAAI,cAAc,CAAC,KAAK,KAAK,SAAS,EAAE;AACtF,YAAA,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;;AAEzC,QAAA,IAAI,QAAQ,CAAC,cAAc,EAAE,KAAK,cAAc,CAAC,WAAW,IAAI,cAAc,CAAC,WAAW,KAAK,SAAS,EAAE;AACxG,YAAA,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC;;AAErD,QAAA,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,KAAK,SAAS,EAAE;AAClG,YAAA,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC;;AAEjD,QAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC,KAAK,IAAI,cAAc,CAAC,KAAK,KAAK,SAAS,EAAE;AACtF,YAAA,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;;AAEzC,QAAA,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,KAAK,SAAS,EAAE;AAClG,YAAA,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC;;AAEjD,QAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC,KAAK,IAAI,cAAc,CAAC,KAAK,KAAK,SAAS,EAAE;AACtF,YAAA,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;;AAEzC,QAAA,IAAI,QAAQ,CAAC,SAAS,EAAE,KAAK,cAAc,CAAC,MAAM,IAAI,cAAc,CAAC,MAAM,KAAK,SAAS,EAAE;AACzF,YAAA,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC;;AAE3C,QAAA,IAAI,QAAQ,CAAC,SAAS,EAAE,KAAK,cAAc,CAAC,MAAM,IAAI,cAAc,CAAC,MAAM,KAAK,SAAS,EAAE;AACzF,YAAA,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC;;AAE3C,QAAA,IAAI,QAAQ,CAAC,eAAe,EAAE,KAAK,cAAc,CAAC,YAAY,IAAI,cAAc,CAAC,YAAY,KAAK,SAAS,EAAE;AAC3G,YAAA,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,CAAC;;AAEvD,QAAA,IAAI,QAAQ,CAAC,aAAa,EAAE,KAAK,cAAc,CAAC,UAAU,IAAI,cAAc,CAAC,UAAU,KAAK,SAAS,EAAE;AACrG,YAAA,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC;;AAEnD,QAAA,IAAI,QAAQ,CAAC,UAAU,EAAE,KAAK,cAAc,CAAC,OAAO,IAAI,cAAc,CAAC,OAAO,KAAK,SAAS,EAAE;AAC5F,YAAA,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC;;AAE7C,QAAA,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,KAAK,SAAS,EAAE;AAClG,YAAA,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC;;;AAInD,IAAA,OAAO,MAAM;AACf;;;;"}