{"version":3,"file":"cori.data.api298.js","sources":["../../node_modules/arquero/src/arrow/encode/scan.js"],"sourcesContent":["import isArrayType from '../../util/is-array-type';\n\nexport function scanArray(data, limit, offset) {\n  const n = Math.min(data.length, offset + limit);\n  return (name, visit) => {\n    for (let i = offset; i < n; ++i) {\n      visit(data[i][name], i);\n    }\n  };\n}\n\nexport function scanTable(table, limit, offset) {\n  const scanAll = offset === 0 && table.numRows() <= limit\n               && !table.isFiltered() && !table.isOrdered();\n\n  return (column, visit) => {\n    let i = -1;\n    scanAll && isArrayType(column.data)\n      ? column.data.forEach(visit)\n      : table.scan(\n          row => visit(column.get(row), ++i),\n          true, limit, offset\n        );\n  };\n}"],"names":["scanArray","data","limit","offset","n","name","visit","i","scanTable","table","scanAll","column","isArrayType","row"],"mappings":";;;;;;;AAEO,SAASA,EAAUC,GAAMC,GAAOC,GAAQ;AAC7C,QAAMC,IAAI,KAAK,IAAIH,EAAK,QAAQE,IAASD,CAAK;AAC9C,SAAO,CAACG,GAAMC,MAAU;AACtB,aAASC,IAAIJ,GAAQI,IAAIH,GAAG,EAAEG;AAC5B,MAAAD,EAAML,EAAKM,CAAC,EAAEF,CAAI,GAAGE,CAAC;AAAA,EAE5B;AACA;AAEO,SAASC,EAAUC,GAAOP,GAAOC,GAAQ;AAC9C,QAAMO,IAAUP,MAAW,KAAKM,EAAM,QAAS,KAAIP,KACnC,CAACO,EAAM,WAAU,KAAM,CAACA,EAAM,UAAS;AAEvD,SAAO,CAACE,GAAQL,MAAU;AACxB,QAAIC,IAAI;AACR,IAAAG,KAAWE,EAAYD,EAAO,IAAI,IAC9BA,EAAO,KAAK,QAAQL,CAAK,IACzBG,EAAM;AAAA,MACJ,CAAAI,MAAOP,EAAMK,EAAO,IAAIE,CAAG,GAAG,EAAEN,CAAC;AAAA,MACjC;AAAA,MAAML;AAAA,MAAOC;AAAA,IACvB;AAAA,EACA;AACA;","x_google_ignoreList":[0]}