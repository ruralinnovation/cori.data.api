{"version":3,"file":"cori.data.api691.js","sources":["../../node_modules/micromark-factory-destination/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesnâ€™t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n"],"names":["factoryDestination","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","balance","start","code","enclosedBefore","asciiControl","raw","enclosed","markdownLineEnding","enclosedEscape","markdownLineEndingOrSpace","rawEscape"],"mappings":";;;;;;;AAgDO,SAASA,EACdC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA;AACA,QAAMC,IAAQD,KAAO,OAAO;AAC5B,MAAIE,IAAU;AACd,SAAOC;AAcP,WAASA,EAAMC,GAAM;AACnB,WAAIA,MAAS,MACXZ,EAAQ,MAAMG,CAAI,GAClBH,EAAQ,MAAMI,CAAW,GACzBJ,EAAQ,MAAMK,CAAiB,GAC/BL,EAAQ,QAAQY,CAAI,GACpBZ,EAAQ,KAAKK,CAAiB,GACvBQ,KAILD,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAME,EAAaF,CAAI,IAC3DV,EAAIU,CAAI,KAEjBZ,EAAQ,MAAMG,CAAI,GAClBH,EAAQ,MAAMM,CAAO,GACrBN,EAAQ,MAAMO,CAAU,GACxBP,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMe,EAAIH,CAAI;AAAA,EAChB;AAYD,WAASC,EAAeD,GAAM;AAC5B,WAAIA,MAAS,MACXZ,EAAQ,MAAMK,CAAiB,GAC/BL,EAAQ,QAAQY,CAAI,GACpBZ,EAAQ,KAAKK,CAAiB,GAC9BL,EAAQ,KAAKI,CAAW,GACxBJ,EAAQ,KAAKG,CAAI,GACVF,MAETD,EAAQ,MAAMO,CAAU,GACxBP,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMgB,EAASJ,CAAI;AAAA,EACrB;AAYD,WAASI,EAASJ,GAAM;AACtB,WAAIA,MAAS,MACXZ,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAKO,CAAU,GAChBM,EAAeD,CAAI,KAExBA,MAAS,QAAQA,MAAS,MAAMK,EAAmBL,CAAI,IAClDV,EAAIU,CAAI,KAEjBZ,EAAQ,QAAQY,CAAI,GACbA,MAAS,KAAKM,IAAiBF;AAAA,EACvC;AAYD,WAASE,EAAeN,GAAM;AAC5B,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCZ,EAAQ,QAAQY,CAAI,GACbI,KAEFA,EAASJ,CAAI;AAAA,EACrB;AAYD,WAASG,EAAIH,GAAM;AACjB,WACE,CAACF,MACAE,MAAS,QAAQA,MAAS,MAAMO,EAA0BP,CAAI,MAE/DZ,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAKO,CAAU,GACvBP,EAAQ,KAAKM,CAAO,GACpBN,EAAQ,KAAKG,CAAI,GACVF,EAAGW,CAAI,KAEZF,IAAUD,KAASG,MAAS,MAC9BZ,EAAQ,QAAQY,CAAI,GACpBF,KACOK,KAELH,MAAS,MACXZ,EAAQ,QAAQY,CAAI,GACpBF,KACOK,KAMLH,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAME,EAAaF,CAAI,IAC3DV,EAAIU,CAAI,KAEjBZ,EAAQ,QAAQY,CAAI,GACbA,MAAS,KAAKQ,IAAYL;AAAA,EAClC;AAYD,WAASK,EAAUR,GAAM;AACvB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCZ,EAAQ,QAAQY,CAAI,GACbG,KAEFA,EAAIH,CAAI;AAAA,EAChB;AACH;","x_google_ignoreList":[0]}