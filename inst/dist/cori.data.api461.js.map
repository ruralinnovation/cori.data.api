{"version":3,"file":"cori.data.api461.js","sources":["../../node_modules/property-information/lib/util/defined-info.js"],"sourcesContent":["import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n"],"names":["checks","types","DefinedInfo","Info","property","attribute","mask","space","index","mark","check","values","key","value"],"mappings":";;;;;;;;AAKA,MAAMA,IAAS,OAAO,KAAKC,CAAK;AAEzB,MAAMC,UAAoBC,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpC,YAAYC,GAAUC,GAAWC,GAAMC,GAAO;AAC5C,QAAIC,IAAQ;AAMZ,QAJA,MAAMJ,GAAUC,CAAS,GAEzBI,EAAK,MAAM,SAASF,CAAK,GAErB,OAAOD,KAAS;AAClB,aAAO,EAAEE,IAAQR,EAAO,UAAQ;AAC9B,cAAMU,IAAQV,EAAOQ,CAAK;AAC1B,QAAAC,EAAK,MAAMT,EAAOQ,CAAK,IAAIF,IAAOL,EAAMS,CAAK,OAAOT,EAAMS,CAAK,CAAC;AAAA,MACjE;AAAA,EAEJ;AACH;AAEAR,EAAY,UAAU,UAAU;AAOhC,SAASO,EAAKE,GAAQC,GAAKC,GAAO;AAChC,EAAIA,MAEFF,EAAOC,CAAG,IAAIC;AAElB;","x_google_ignoreList":[0]}