{"version":3,"file":"cori.data.api386.js","sources":["../../node_modules/arquero/src/format/value.js"],"sourcesContent":["import { formatDate, formatUTCDate } from '../util/format-date';\nimport isDate from '../util/is-date';\nimport isFunction from '../util/is-function';\nimport isTypedArray from '../util/is-typed-array';\n\n/**\n * Column format object.\n * @typedef {object} ValueFormatObject\n * @property {boolean} [utc=false] If true, format dates in UTC time.\n * @property {number} [digits=0] The number of fractional digits to include\n *  when formatting numbers.\n * @property {number} [maxlen=30] The maximum string length for formatting\n *  nested object or array values.\n */\n\n/**\n * @callback ValueFormatFunction\n * @param {*} value The value to format.\n * @return {*} A string-coercible or JSON-compatible formatted value.\n */\n\n/**\n * Value format options.\n * @typedef {ValueFormatObject|ValueFormatFunction} ValueFormatOptions\n */\n\n/**\n * Format a value as a string.\n * @param {*} v The value to format.\n * @param {ValueFormatOptions} options Formatting options.\n * @return {string} The formatted string.\n */\nexport default function(v, options = {}) {\n  if (isFunction(options)) {\n    return options(v) + '';\n  }\n\n  const type = typeof v;\n\n  if (type === 'object') {\n    if (isDate(v)) {\n      return options.utc ? formatUTCDate(v) : formatDate(v);\n    } else {\n      const s = JSON.stringify(\n        v,\n        (k, v) => isTypedArray(v) ? Array.from(v) : v\n      );\n      const maxlen = options.maxlen || 30;\n      return s.length > maxlen\n        ? s.slice(0, 28) + '\\u2026' + (s[0] === '[' ? ']' : '}')\n        : s;\n    }\n  } else if (type === 'number') {\n    const digits = options.digits || 0;\n    let a;\n    return v !== 0 && ((a = Math.abs(v)) >= 1e18 || a < Math.pow(10, -digits))\n      ? v.toExponential(digits)\n      : v.toFixed(digits);\n  } else {\n    return v + '';\n  }\n}"],"names":["formatValue","v","options","isFunction","type","isDate","formatUTCDate","formatDate","s","k","isTypedArray","maxlen","digits"],"mappings":";;;;;;;;;;AAgCe,SAAAA,EAASC,GAAGC,IAAU,IAAI;AACvC,MAAIC,EAAWD,CAAO;AACpB,WAAOA,EAAQD,CAAC,IAAI;AAGtB,QAAMG,IAAO,OAAOH;AAEpB,MAAIG,MAAS,UAAU;AACrB,QAAIC,EAAOJ,CAAC;AACV,aAAOC,EAAQ,MAAMI,EAAcL,CAAC,IAAIM,EAAWN,CAAC;AAC/C;AACL,YAAMO,IAAI,KAAK;AAAA,QACbP;AAAA,QACA,CAACQ,GAAGR,MAAMS,EAAaT,CAAC,IAAI,MAAM,KAAKA,CAAC,IAAIA;AAAA,MACpD,GACYU,IAAST,EAAQ,UAAU;AACjC,aAAOM,EAAE,SAASG,IACdH,EAAE,MAAM,GAAG,EAAE,IAAI,OAAYA,EAAE,CAAC,MAAM,MAAM,MAAM,OAClDA;AAAA,IACL;AAAA,EACL,WAAaJ,MAAS,UAAU;AAC5B,UAAMQ,IAASV,EAAQ,UAAU;AACjC,QAAI;AACJ,WAAOD,MAAM,OAAO,IAAI,KAAK,IAAIA,CAAC,MAAM,QAAQ,IAAI,KAAK,IAAI,IAAI,CAACW,CAAM,KACpEX,EAAE,cAAcW,CAAM,IACtBX,EAAE,QAAQW,CAAM;AAAA,EACxB;AACI,WAAOX,IAAI;AAEf;","x_google_ignoreList":[0]}