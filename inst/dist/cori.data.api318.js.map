{"version":3,"file":"cori.data.api318.js","sources":["../../node_modules/mdast-util-to-hast/lib/handlers/list.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["list","state","node","properties","results","index","child","result"],"mappings":";;;;;;AAoBO,SAASA,EAAKC,GAAOC,GAAM;AAEhC,QAAMC,IAAa,CAAE,GACfC,IAAUH,EAAM,IAAIC,CAAI;AAC9B,MAAIG,IAAQ;AAOZ,OALI,OAAOH,EAAK,SAAU,YAAYA,EAAK,UAAU,MACnDC,EAAW,QAAQD,EAAK,QAInB,EAAEG,IAAQD,EAAQ,UAAQ;AAC/B,UAAME,IAAQF,EAAQC,CAAK;AAE3B,QACEC,EAAM,SAAS,aACfA,EAAM,YAAY,QAClBA,EAAM,cACN,MAAM,QAAQA,EAAM,WAAW,SAAS,KACxCA,EAAM,WAAW,UAAU,SAAS,gBAAgB,GACpD;AACA,MAAAH,EAAW,YAAY,CAAC,oBAAoB;AAC5C;AAAA,IACD;AAAA,EACF;AAGD,QAAMI,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAASL,EAAK,UAAU,OAAO;AAAA,IAC/B,YAAAC;AAAA,IACA,UAAUF,EAAM,KAAKG,GAAS,EAAI;AAAA,EACnC;AACD,SAAAH,EAAM,MAAMC,GAAMK,CAAM,GACjBN,EAAM,UAAUC,GAAMK,CAAM;AACrC;","x_google_ignoreList":[0]}