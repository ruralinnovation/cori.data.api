{"version":3,"file":"cori.data.api546.js","sources":["../../node_modules/apache-arrow/visitor.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum.mjs';\nimport { DataType } from './type.mjs';\nexport class Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    getVisitFnByTypeId(typeId, throwIfNotFound = true) {\n        return getVisitFnByTypeId(this, typeId, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitLargeUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitLargeBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitDuration(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    if (typeof node === 'number') {\n        return getVisitFnByTypeId(visitor, node, throwIfNotFound);\n    }\n    if (typeof node === 'string' && (node in Type)) {\n        return getVisitFnByTypeId(visitor, Type[node], throwIfNotFound);\n    }\n    if (node && (node instanceof DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node), throwIfNotFound);\n    }\n    if ((node === null || node === void 0 ? void 0 : node.type) && (node.type instanceof DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node.type), throwIfNotFound);\n    }\n    return getVisitFnByTypeId(visitor, Type.NONE, throwIfNotFound);\n}\n/** @ignore */\nfunction getVisitFnByTypeId(visitor, dtype, throwIfNotFound = true) {\n    let fn = null;\n    switch (dtype) {\n        case Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case Type.LargeUtf8:\n            fn = visitor.visitLargeUtf8;\n            break;\n        case Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case Type.LargeBinary:\n            fn = visitor.visitLargeBinary;\n            break;\n        case Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case Type.List:\n            fn = visitor.visitList;\n            break;\n        case Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case Type.Duration:\n            fn = visitor.visitDuration;\n            break;\n        case Type.DurationSecond:\n            fn = visitor.visitDurationSecond || visitor.visitDuration;\n            break;\n        case Type.DurationMillisecond:\n            fn = visitor.visitDurationMillisecond || visitor.visitDuration;\n            break;\n        case Type.DurationMicrosecond:\n            fn = visitor.visitDurationMicrosecond || visitor.visitDuration;\n            break;\n        case Type.DurationNanosecond:\n            fn = visitor.visitDurationNanosecond || visitor.visitDuration;\n            break;\n        case Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int: {\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            // @ts-ignore\n            return Type.Int;\n        }\n        case Type.Float:\n            switch (type.precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            // @ts-ignore\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.LargeBinary: return Type.LargeBinary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.LargeUtf8: return Type.LargeUtf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            // @ts-ignore\n            return Type.Time;\n        case Type.Timestamp:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            // @ts-ignore\n            return Type.Timestamp;\n        case Type.Date:\n            switch (type.unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            // @ts-ignore\n            return Type.Date;\n        case Type.Interval:\n            switch (type.unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            // @ts-ignore\n            return Type.Interval;\n        case Type.Duration:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.DurationSecond;\n                case TimeUnit.MILLISECOND: return Type.DurationMillisecond;\n                case TimeUnit.MICROSECOND: return Type.DurationMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.DurationNanosecond;\n            }\n            // @ts-ignore\n            return Type.Duration;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch (type.mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            // @ts-ignore\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\nVisitor.prototype.visitDuration = null;\nVisitor.prototype.visitDurationSecond = null;\nVisitor.prototype.visitDurationMillisecond = null;\nVisitor.prototype.visitDurationMicrosecond = null;\nVisitor.prototype.visitDurationNanosecond = null;\n\n//# sourceMappingURL=visitor.mjs.map\n"],"names":["Visitor","nodes","args","node","i","x","throwIfNotFound","getVisitFn","typeId","getVisitFnByTypeId","_node","_args","visitor","Type","DataType","inferDType","dtype","fn","type","bitWidth","isSigned","Precision","TimeUnit","DateUnit","IntervalUnit","UnionMode"],"mappings":"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","x_google_ignoreList":[0]}