{"version":3,"file":"typeassembler.js","sources":["../../../../../node_modules/apache-arrow/visitor/typeassembler.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { Null } from '../fb/null.mjs';\nimport { Int } from '../fb/int.mjs';\nimport { FloatingPoint } from '../fb/floating-point.mjs';\nimport { Binary } from '../fb/binary.mjs';\nimport { LargeBinary } from '../fb/large-binary.mjs';\nimport { Bool } from '../fb/bool.mjs';\nimport { Utf8 } from '../fb/utf8.mjs';\nimport { LargeUtf8 } from '../fb/large-utf8.mjs';\nimport { Decimal } from '../fb/decimal.mjs';\nimport { Date } from '../fb/date.mjs';\nimport { Time } from '../fb/time.mjs';\nimport { Timestamp } from '../fb/timestamp.mjs';\nimport { Interval } from '../fb/interval.mjs';\nimport { Duration } from '../fb/duration.mjs';\nimport { List } from '../fb/list.mjs';\nimport { Struct_ as Struct } from '../fb/struct-.mjs';\nimport { Union } from '../fb/union.mjs';\nimport { DictionaryEncoding } from '../fb/dictionary-encoding.mjs';\nimport { FixedSizeBinary } from '../fb/fixed-size-binary.mjs';\nimport { FixedSizeList } from '../fb/fixed-size-list.mjs';\nimport { Map as Map_ } from '../fb/map.mjs';\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitLargeBinary(_node, b) {\n        LargeBinary.startLargeBinary(b);\n        return LargeBinary.endLargeBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitLargeUtf8(_node, b) {\n        LargeUtf8.startLargeUtf8(b);\n        return LargeUtf8.endLargeUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        Decimal.addBitWidth(b, node.bitWidth);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitDuration(node, b) {\n        Duration.startDuration(b);\n        Duration.addUnit(b, node.unit);\n        return Duration.endDuration(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, BigInt(node.id));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n"],"names":["Struct","Map_"],"mappings":"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","x_google_ignoreList":[0]}