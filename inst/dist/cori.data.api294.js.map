{"version":3,"file":"cori.data.api294.js","sources":["../../node_modules/arquero/src/helpers/slice.js"],"sourcesContent":["/**\n * Generate a table expression that filters a table based on ordered row\n * indices from start to end (end not included), where start and end\n * represent per-group ordered row numbers in the table. The resulting\n * string can be used as the input to the filter verb.\n * @param {number} [start] Zero-based index at which to start extraction.\n *  A negative index indicates an offset from the end of the group.\n *  If start is undefined, slice starts from the index 0.\n * @param {number} [end] Zero-based index before which to end extraction.\n *  A negative index indicates an offset from the end of the group.\n *  If end is omitted, slice extracts through the end of the group.\n * @return {string} A table expression string for slicing values.\n * @example slice(1, -1)\n */\nexport default function(start = 0, end = Infinity) {\n  return `${prep(start)} < row_number() && row_number() <= ${prep(end)}`;\n}\n\nfunction prep(index) {\n  return index < 0 ? `count() + ${index}` : index;\n}"],"names":["slice","start","end","prep","index"],"mappings":";;;;;;AAce,SAAQA,EAACC,IAAQ,GAAGC,IAAM,OAAU;AACjD,SAAO,GAAGC,EAAKF,CAAK,CAAC,sCAAsCE,EAAKD,CAAG,CAAC;AACtE;AAEA,SAASC,EAAKC,GAAO;AACnB,SAAOA,IAAQ,IAAI,aAAaA,CAAK,KAAKA;AAC5C;","x_google_ignoreList":[0]}