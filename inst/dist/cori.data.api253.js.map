{"version":3,"file":"cori.data.api253.js","sources":["../../node_modules/unified/lib/callable-instance.js"],"sourcesContent":["export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n"],"names":["CallableInstance","property","proto","value","apply"],"mappings":";;;;;;AAAY,MAACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYP,SAAUC,GAAU;AAGlB,UAAMC;AAAA;AAAA;AAAA;AAAA,MAFO,KACO,YAIX;AAAA,OAEHC,IAAQD,EAAMD,CAAQ,GAEtBG,IAAQ,WAAY;AACxB,aAAOD,EAAM,MAAMC,GAAO,SAAS;AAAA,IACpC;AAED,kBAAO,eAAeA,GAAOF,CAAK,GAc3BE;AAAA,EACR;AAAA;","x_google_ignoreList":[0]}