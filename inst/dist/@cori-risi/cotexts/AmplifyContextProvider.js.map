{"version":3,"file":"AmplifyContextProvider.js","sources":["../../../../lib/@cori-risi/cotexts/AmplifyContextProvider.tsx"],"sourcesContent":["import React, {\n    createContext,\n    ReactElement,\n    useEffect,\n    useState\n} from \"react\";\nimport { Amplify } from \"aws-amplify\";\n\nimport amplifyconfig from './amplifyconfiguration.json';\n\nAmplify.configure(amplifyconfig);\n\ntype  AmplifyContextType = {\n    domain?: string,\n    region?: string,\n    identityPoolId?: string,\n    userPoolId?: string,\n    userPoolClientId?: string,\n};\n\nconst initAmplifyContext: AmplifyContextType = {\n    domain: undefined,\n    region: undefined,\n    identityPoolId: undefined,\n    userPoolId: undefined,\n    userPoolClientId: undefined,\n};\n\nexport const AmplifyContext = createContext<AmplifyContextType | null>(initAmplifyContext);\n\nexport default function AmplifyContextProvider(props: {\n    children?: ReactElement,\n    domain?: string,\n    region?: string,\n    userPoolId?: string,\n    userPoolClientId?: string,\n    identityPoolId?: string,\n\n}) {\n\n    const [ state, setState ] = useState<AmplifyContextType | null>(initAmplifyContext);\n\n    useEffect(() => {\n        if (!!props.domain\n            && !!props.region\n            && !!props.identityPoolId\n            && !!props.userPoolId\n            && !!props.userPoolClientId\n        ) {\n\n            const {\n                domain,\n                region,\n                identityPoolId,\n                userPoolId,\n                userPoolClientId\n            } = props;\n\n            const aws_original_auth_config = {\n                \"Auth\": {\n                    \"domain\": domain,\n                    \"region\": region,\n                    \"identityPoolRegion\": region,\n                    \"identityPoolId\": identityPoolId,\n                    \"userPoolId\": userPoolId,\n                    // \"userPoolClientId\": userPoolClientId,\n                    \"userPoolWebClientId\": userPoolClientId,\n                    \"clientId\": userPoolClientId,\n                    \"oauth\": {\n                        \"domain\": domain,\n                        // \"scope\": [ \"email\", \"profile\", \"openid\", \"aws.cognito.signin.user.admin\" ],\n                        // \"scope\": [ \"email\", \"openid\", \"profile\" ],\n                        // \"scope\": [ \"email\" ],\n                        \"scope\": [\"openid\"],\n                        \"redirectSignIn\": window.location.protocol + \"//\" + window.location.hostname + ((!!window.location.port) ? \":\" + window.location.port : \"\"),\n                        \"redirectSignOut\": window.location.protocol + \"//\" + window.location.hostname + ((!!window.location.port) ? \":\" + window.location.port : \"\") + \"/\",\n                        \"responseType\": (\"code\" as \"code\")  // ... or \"token\", note that REFRESH token will only\n                                                            // be generated when the responseType is \"code\"\n                    }\n                }\n            };\n\n            Amplify.configure({\n                // TODO: Why is this so ridiculous and how can these options be\n                //       specified exclusively in amplifyconfiguration.json ???\n                ...Amplify.getConfig(),\n                Auth: {\n                    ...Amplify.getConfig().Auth!,\n                    Cognito: {\n                        ...Amplify.getConfig().Auth!.Cognito!,\n                        ...aws_original_auth_config.Auth,\n                        loginWith: {\n                            ...Amplify.getConfig().Auth!.Cognito!.loginWith!,\n                            oauth: {\n                                ...Amplify.getConfig().Auth!.Cognito!.loginWith!.oauth!,\n                                ...aws_original_auth_config.Auth.oauth,\n                                redirectSignIn: [\n                                    aws_original_auth_config.Auth.oauth.redirectSignIn\n                                ],\n                                redirectSignOut: [\n                                    aws_original_auth_config.Auth.oauth.redirectSignOut\n                                ],\n                                responseType: (aws_original_auth_config.Auth.oauth.responseType as \"code\"),\n                                scopes: [\n                                    ...aws_original_auth_config.Auth.oauth.scope\n                                ]\n                            },\n                            username: true,\n                        },\n                        userPoolClientId: aws_original_auth_config.Auth.clientId\n                    }\n                }\n            });\n\n            setState({\n                domain,\n                region,\n                identityPoolId,\n                userPoolId,\n                userPoolClientId\n            });\n        }\n\n    }, []);\n\n\n    return (\n        <div className={\"amplify-context\"}>\n            {props.children}\n        </div>\n    )\n\n}\n"],"names":[],"mappings":"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"}