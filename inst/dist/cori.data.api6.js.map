{"version":3,"file":"cori.data.api6.js","sources":["../../lib/@cori-risi/components/GroupedBarChart.tsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from 'react';\nimport * as d3 from 'd3';\nimport { ERCData, MetricMetadata } from '../interfaces';\nimport * as d3textwrap from \"d3-textwrap\";\n\nimport CategoricalLegend from './CategoricalLegend';\n\nimport styles from \"./styles/Chart.module.css\";\n\nimport { renderVariable, getMaxYLabelWidth, applyCORIStyles, saveChartAsPNG, getLabel } from '../utils';\nimport { chartStyle } from '../utils/constants';\n\ninterface GroupedBarChartProps {\n  primary_geoid: string,\n  metric: string,\n  data: ERCData[];\n  metadata: MetricMetadata,\n  width: number;\n  element_name: string;\n}\n\nconst GroupedBarChart: React.FC<GroupedBarChartProps> = ({ primary_geoid, metric, data, metadata, width, element_name }) => {\n  \n  const primary_dta = data.filter(d => d.geoid === primary_geoid && d.metric === metric);\n  const has_valid_data = !primary_dta.every(d => d.value === null);\n  \n  const ref = useRef<HTMLDivElement>(null);\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [colorScaleDomain, setColorScaleDomain] = useState<string[]>([]);\n  const [colorScaleRange, setColorScaleRange] = useState<unknown[]>([]);\n\n  const bar_thickness = 45;\n  const height = data.length * bar_thickness;\n\n  useEffect(() => {\n    \n    if (!svgRef.current) return;\n\n    const margin = {...chartStyle.margin};\n    const tick_number = Math.floor(width / 225);\n\n    const group_var: \"variable\" | \"year\" | \"geoid\" = metadata.groupVar !== undefined? \n      metadata.groupVar as \"variable\" | \"year\" | \"geoid\": \n      \"year\";\n    const groups = [...new Set(data.map(d => d[group_var].toString()))];\n\n    // Ensure always order from older to newer\n    if (group_var === \"year\") {\n      groups.sort((a, b) => a.localeCompare(b));\n    }\n\n    const svg = d3.select(svgRef.current)\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n    const xscale_ratio = width < 500? 1.3: 1.1;\n    const xScale = d3\n      .scaleLinear<number>()\n      .domain([0, d3.max(data, (d) => d.value === null? undefined: (+d.value * xscale_ratio))! ])\n      .nice()\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n    .scaleBand<string>()\n    .domain(data.map((d) => {\n\n        if (metadata.yVar === \"variable\") {\n          const variable_str: string = renderVariable(d.variable);\n          return variable_str;\n        } \n\n        const geoid_str: string = element_name; // renderGEOID(d.geoid);\n        return geoid_str;\n\n      }))\n    .range([margin.top, height - margin.bottom])\n    .padding(0.1);      \n\n    const ySubgroups = d3\n        .scaleBand()\n        .domain(groups)\n        .range([0, yScale.bandwidth()])\n        .padding(0);\n\n    const colorScale = d3.scaleOrdinal<string>()\n      .domain(groups) // Input domain\n      .range([\"#A3E2B5\", \"#00835D\", \"#26535C\"]);\n    \n      setColorScaleDomain(colorScale.domain());\n      setColorScaleRange(colorScale.range());\n\n    let xAxis = d3.axisBottom<number>(xScale)\n      .ticks(tick_number, metadata.xFormat)\n      .tickSize(chartStyle.xTickSize);\n\n    const yAxis = d3.axisLeft<string>(yScale)\n      .tickSize(chartStyle.yTickSize);\n\n    svg\n      .select<SVGGElement>('.x-axis')\n      .attr('transform', `translate(0, ${height - margin.bottom})`)\n      .call(xAxis);\n\n    svg.select<SVGGElement>('.y-axis')\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis)\n      .call(g => g.select(\".domain\").remove());\n\n    // style y-axis text before calculating widths\n    svg.selectAll(\".y-axis text\")\n      .style(\"font-family\", chartStyle.tickFontFamily)\n      .style(\"font-size\", chartStyle.tickFontSize)\n      .style(\"color\", chartStyle.tickFontColor);\n\n    const maxw = getMaxYLabelWidth(svg);\n    if (maxw > 200) {\n\n      margin.left = 200;\n\n      // wrap the text\n      const text_buffer = 2;\n      const y_wrap = d3textwrap.textwrap().bounds({height: yScale.bandwidth(), width: margin.left - chartStyle.yTickSize});\n      svg.selectAll(\".y-axis text\")\n        .call(y_wrap);\n      svg.selectAll(\"foreignObject\")\n        .style(\n          \"transform\", \n          'translate(-' + (margin.left - chartStyle.yTickSize - text_buffer) + 'px, -' + yScale.bandwidth()/2 + 'px)'\n        )\n        .select(\"div\")\n        .style(\"margin\", 0)\n        .style(\"display\", \"flex\")\n        .style(\"align-items\", \"center\")\n        .style(\"justify-content\", \"end\")\n        .style(\"height\", \"inherit\");\n\n      xScale.range([margin.left, width - margin.right]);\n      xAxis = d3\n        .axisBottom<number>(xScale)\n        .tickSize(chartStyle.xTickSize)\n        .ticks(tick_number, metadata.xFormat);\n\n      svg\n        .select<SVGGElement>('.x-axis')\n        .attr('transform', `translate(0, ${height - margin.bottom})`)\n        .call(xAxis);\n\n      svg.select<SVGGElement>('.y-axis')\n        .attr(\"transform\", `translate(${margin.left},0)`);      \n\n    }\n    else {\n\n      margin.left = maxw;\n\n      xScale.range([margin.left, width - margin.right]);\n\n      xAxis = d3.axisBottom<number>(xScale)\n        .ticks(tick_number, metadata.xFormat)\n        .tickSize(chartStyle.xTickSize);\n\n      svg\n        .select<SVGGElement>('.x-axis')\n        .attr('transform', `translate(0, ${height - margin.bottom})`)\n        .call(xAxis);\n\n      svg.select<SVGGElement>('.y-axis')\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(yAxis)\n        .call(g => g.select(\".domain\").remove());\n\n    }\n\n    svg\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr('x', xScale.range()[0])\n        .attr('height', ySubgroups.bandwidth())\n        .attr('y', (d) => {\n\n          const y_var: string = metadata.yVar === \"variable\"? renderVariable(d.variable): element_name; // renderGEOID(d.geoid);\n          let yValue = yScale(y_var);\n\n        \n\n          const ySubgroupValue = ySubgroups(d[group_var].toString());\n          if (ySubgroupValue !== undefined && yValue !== undefined) {\n              yValue = yValue + ySubgroupValue;\n          }\n          return yValue !== undefined ? yValue : 0;\n        })\n        .attr('width', (d) => d.value === null? 0: xScale(+d.value) - xScale(0))\n        .attr('fill', (d) => colorScale(d[group_var].toString()));\n  \n\n    // Data labels\n    svg\n      .selectAll(\".data-label\")\n      .data(data)\n      .join(\"text\")\n      .attr(\"class\", \"data-label\")\n      .attr(\"x\", (d) => d.value === null? xScale.range()[0]: xScale(+d.value))\n      .attr('y', (d) => {\n\n        const y_var: string = metadata.yVar === \"variable\"? renderVariable(d.variable): element_name; //renderGEOID(d.geoid);\n        let yValue = yScale(y_var);\n\n        const ySubgroupValue = ySubgroups(d[group_var].toString());\n        if (ySubgroupValue !== undefined && yValue !== undefined) {\n            yValue = yValue + ySubgroupValue + ySubgroups.bandwidth()/2;\n        }\n        return yValue !== undefined ? yValue : 0;\n      })      \n      .attr(\"dy\", \"0.35em\") // Vertical alignment\n      .attr(\"dx\", \"0.35em\") // Vertical alignment\n      .style(\"color\", chartStyle.dataLabelFontColor)\n      .style(\"font-size\", chartStyle.dataLabelFontSize)\n      .style(\"font-weight\", chartStyle.dataLabelFontWeight)\n      .text((d) => getLabel(metadata.dataLabelFormat, d.value));\n\n    svg.call(applyCORIStyles);\n\n  }, [data, width, height, metadata]);\n\n  const onButtonClick = useCallback(() => {\n    saveChartAsPNG(ref, metric + \".png\");\n  }, [ref, metric])\n\n  return (\n    <div className={styles[\"chart-wrapper\"]}>\n      {data.length > 0 && (\n        <>\n          <div ref={ref} className={styles[\"chart\"]} style={{maxWidth: \"900px\", margin: \"0 auto\", padding: \"5px 20px\"}}>\n            {has_valid_data === false &&\n              (\n                <div className={styles[\"no-data\"]}>\n                  <p>Note: Chart data is not available for the selected county</p>\n                </div>\n              )\n            }\n            {data.length > 0 && (\n                <>\n                  <h3>{metadata.title}</h3>\n                  {metadata.subtitle.length > 0? <p><em>{metadata.subtitle}</em></p>: <></>}\n                  <CategoricalLegend domain={colorScaleDomain} range={colorScaleRange} element_name={element_name} />\n                  <svg ref={svgRef} style={{width: \"100%\"}}>\n                    <g className=\"x-axis\" />\n                    <g className=\"y-axis\" />\n                  </svg>\n                  <p className={styles['caption']}>{metadata[\"caption\"]}</p>\n                </>\n              )\n            }\n          </div>\n          <button className={styles[\"download-chart\"]} onClick={onButtonClick}>Download image</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GroupedBarChart;"],"names":["GroupedBarChart","primary_geoid","metric","data","metadata","width","element_name","has_valid_data","d","ref","useRef","svgRef","colorScaleDomain","setColorScaleDomain","useState","colorScaleRange","setColorScaleRange","height","useEffect","margin","chartStyle","tick_number","group_var","groups","a","b","svg","d3.select","xscale_ratio","xScale","d3.scaleLinear","d3.max","yScale","d3.scaleBand","renderVariable","ySubgroups","colorScale","d3.scaleOrdinal","xAxis","d3.axisBottom","yAxis","d3.axisLeft","g","maxw","getMaxYLabelWidth","text_buffer","y_wrap","d3textwrap.textwrap","y_var","yValue","ySubgroupValue","getLabel","applyCORIStyles","onButtonClick","useCallback","saveChartAsPNG","jsx","styles","jsxs","Fragment","CategoricalLegend"],"mappings":"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"}