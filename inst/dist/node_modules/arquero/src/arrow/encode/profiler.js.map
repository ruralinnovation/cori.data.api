{"version":3,"file":"profiler.js","sources":["../../../../../../../node_modules/arquero/src/arrow/encode/profiler.js"],"sourcesContent":["import { Field, FixedSizeList, List, Struct, Type } from 'apache-arrow';\nimport resolveType from '../builder/resolve-type';\nimport error from '../../util/error';\nimport isArrayType from '../../util/is-array-type';\nimport isDate from '../../util/is-date';\nimport isExactUTCDate from '../../util/is-exact-utc-date';\n\nexport function profile(scan, column) {\n  const p = profiler();\n  scan(column, p.add);\n  return p;\n}\n\nexport function profiler() {\n  const p = {\n    count: 0,\n    nulls: 0,\n    bools: 0,\n    nums: 0,\n    ints: 0,\n    bigints: 0,\n    min: Infinity,\n    max: -Infinity,\n    digits: 0,\n    dates: 0,\n    utcdays: 0,\n    strings: 0,\n    strlen: 0,\n    arrays: 0,\n    minlen: Infinity,\n    maxlen: 0,\n    structs: 0,\n\n    add(value) {\n      ++p.count;\n      if (value == null) {\n        ++p.nulls;\n        return;\n      }\n\n      const type = typeof value;\n      if (type === 'string') {\n        ++p.strings;\n      } else if (type === 'number') {\n        ++p.nums;\n        if (value < p.min) p.min = value;\n        if (value > p.max) p.max = value;\n        if (Number.isInteger(value)) ++p.ints;\n      } else if (type === 'boolean') {\n        ++p.bools;\n      } else if (type === 'object') {\n        if (isDate(value)) {\n          ++p.dates;\n          if (isExactUTCDate(value)) {\n            ++p.utcdays;\n          }\n        } else if (isArrayType(value)) {\n          ++p.arrays;\n          if (value.length < p.minlen) p.minlen = value.length;\n          if (value.length > p.maxlen) p.maxlen = value.length;\n          const ap = p.array_prof || (p.array_prof = profiler());\n          value.forEach(ap.add);\n        } else {\n          ++p.structs;\n          const sp = p.struct_prof || (p.struct_prof = {});\n          for (const key in value) {\n            const fp = sp[key] || (sp[key] = profiler());\n            fp.add(value[key]);\n          }\n        }\n      } else if (type === 'bigint') {\n        ++p.bigints;\n        if (value < p.min) p.min = value;\n        if (value > p.max) p.max = value;\n      }\n    },\n    type() {\n      return resolveType(infer(p));\n    }\n  };\n\n  return p;\n}\n\nfunction infer(p) {\n  const valid = p.count - p.nulls;\n\n  if (valid === 0) {\n    return Type.Null;\n  }\n  else if (p.ints === valid) {\n    const v = Math.max(Math.abs(p.min) - 1, p.max);\n    return p.min < 0\n      ? v >= 2 ** 31 ? Type.Float64\n        : v < (1 << 7) ? Type.Int8 : v < (1 << 15) ? Type.Int16 : Type.Int32\n      : v >= 2 ** 32 ? Type.Float64\n        : v < (1 << 8) ? Type.Uint8 : v < (1 << 16) ? Type.Uint16 : Type.Uint32;\n  }\n  else if (p.nums === valid) {\n    return Type.Float64;\n  }\n  else if (p.bigints === valid) {\n    const v = -p.min > p.max ? -p.min - 1n : p.max;\n    return p.min < 0\n      ? v < 2 ** 63 ? Type.Int64\n        : error(`BigInt exceeds 64 bits: ${v}`)\n      : p.max < 2 ** 64 ? Type.Uint64\n        : error(`BigInt exceeds 64 bits: ${p.max}`);\n  }\n  else if (p.bools === valid) {\n    return Type.Bool;\n  }\n  else if (p.utcdays === valid) {\n    return Type.DateDay;\n  }\n  else if (p.dates === valid) {\n    return Type.DateMillisecond;\n  }\n  else if (p.arrays === valid) {\n    const type = Field.new('value', p.array_prof.type(), true);\n    return p.minlen === p.maxlen\n      ? new FixedSizeList(p.minlen, type)\n      : new List(type);\n  }\n  else if (p.structs === valid) {\n    const sp = p.struct_prof;\n    return new Struct(\n      Object.keys(sp).map(name => Field.new(name, sp[name].type(), true))\n    );\n  }\n  else if (p.strings > 0) {\n    return Type.Dictionary;\n  }\n  else {\n    error('Type inference failure');\n  }\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}