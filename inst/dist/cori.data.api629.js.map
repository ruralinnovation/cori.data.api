{"version":3,"file":"cori.data.api629.js","sources":["../../node_modules/arquero/src/engine/reduce/field-reducer.js"],"sourcesContent":["import Reducer from './reducer';\nimport { getAggregate } from '../../op';\nimport concat from '../../util/concat';\nimport error from '../../util/error';\nimport isValid from '../../util/is-valid';\nimport unroll from '../../util/unroll';\nimport ValueList from '../../util/value-list';\n\nconst update = (ops, args, fn) => unroll(\n  args,\n  '{' + concat(ops, (_, i) => `_${i}.${fn}(${args});`) + '}',\n  ops\n);\n\nexport default function(oplist, stream) {\n  const { ops, output } = expand(oplist, stream);\n  const fields = oplist[0].fields;\n  const n = fields.length;\n  const cls = n === 0 ? FieldReducer\n    : n === 1 ? Field1Reducer\n    : n === 2 ? Field2Reducer\n    : error('Unsupported field count: ' + n);\n  return new cls(fields, ops, output, stream);\n}\n\nfunction expand(oplist, stream) {\n  const has = {};\n  const ops = [];\n\n  function add(name, params = []) {\n    // check key\n    const key = name + ':' + params;\n    if (has[key]) return has[key];\n\n    // get op instance\n    const def = getAggregate(name);\n    const op = def.create(...params);\n\n    // add required dependencies\n    if (stream < 0 && def.stream) {\n      def.stream.forEach(name => add(name, []));\n    }\n    if (def.req) {\n      def.req.forEach(name => add(name, []));\n    }\n\n    // update state\n    has[key] = op;\n    ops.push(op);\n\n    return op;\n  }\n\n  const output = oplist.map(item => {\n    const op = add(item.name, item.params);\n    op.output = item.id;\n    return op;\n  });\n\n  return { ops, output };\n}\n\nclass FieldReducer extends Reducer {\n  constructor(fields, ops, outputs, stream) {\n    super(outputs);\n    this._op = ops;\n    this._fields = fields;\n    this._stream = !!stream;\n  }\n\n  init() {\n    const state = { count: 0, valid: 0, stream: this._stream };\n    this._op.forEach(op => op.init(state));\n\n    // value list requested\n    if (state.values) {\n      state.list = new ValueList();\n    }\n\n    return state;\n  }\n\n  write(state, values, index) {\n    const op = this._outputs;\n    const n = op.length;\n    for (let i = 0; i < n; ++i) {\n      values[op[i].output][index] = op[i].value(state);\n    }\n    return 1;\n  }\n\n  _add() {\n  }\n\n  _rem() {\n  }\n\n  add(state) {\n    ++state.count;\n  }\n\n  rem(state) {\n    --state.count;\n  }\n}\n\nclass Field1Reducer extends FieldReducer {\n  constructor(fields, ops, outputs, stream) {\n    super(fields, ops, outputs, stream);\n\n    // unroll op invocations for performance\n    const args = ['state', 'v1', 'v2'];\n    this._add = update(ops, args, 'add');\n    this._rem = update(ops, args, 'rem');\n  }\n\n  add(state, row, data) {\n    const value = this._fields[0](row, data);\n    ++state.count;\n    if (isValid(value)) {\n      ++state.valid;\n      if (state.list) state.list.add(value);\n      this._add(state, value);\n    }\n  }\n\n  rem(state, row, data) {\n    const value = this._fields[0](row, data);\n    --state.count;\n    if (isValid(value)) {\n      --state.valid;\n      if (state.list) state.list.rem();\n      this._rem(state, value);\n    }\n  }\n}\n\nclass Field2Reducer extends FieldReducer {\n  constructor(fields, ops, outputs, stream) {\n    super(fields, ops, outputs, stream);\n\n    // unroll op invocations for performance\n    const args = ['state', 'v1', 'v2'];\n    this._add = update(ops, args, 'add');\n    this._rem = update(ops, args, 'rem');\n  }\n\n  add(state, row, data) {\n    const value1 = this._fields[0](row, data);\n    const value2 = this._fields[1](row, data);\n    ++state.count;\n    if (isValid(value1) && isValid(value2)) {\n      ++state.valid;\n      if (state.list) state.list.add([value1, value2]);\n      this._add(state, value1, value2);\n    }\n  }\n\n  rem(state, row, data) {\n    const value1 = this._fields[0](row, data);\n    const value2 = this._fields[1](row, data);\n    --state.count;\n    if (isValid(value1) && isValid(value2)) {\n      --state.valid;\n      if (state.list) state.list.rem();\n      this._rem(state, value1, value2);\n    }\n  }\n}"],"names":["update","ops","args","fn","unroll","concat","_","fieldReducer","oplist","stream","output","expand","fields","n","cls","FieldReducer","Field1Reducer","Field2Reducer","error","has","add","name","params","key","def","getAggregate","op","item","Reducer","outputs","state","ValueList","values","index","i","row","data","value","isValid","value1","value2"],"mappings":"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","x_google_ignoreList":[0]}