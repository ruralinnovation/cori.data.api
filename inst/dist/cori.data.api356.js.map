{"version":3,"file":"cori.data.api356.js","sources":["../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["imageReference","state","node","id","definition","revert","properties","normalizeUri","result"],"mappings":";;;;;;;;AAqBO,SAASA,EAAeC,GAAOC,GAAM;AAC1C,QAAMC,IAAK,OAAOD,EAAK,UAAU,EAAE,YAAa,GAC1CE,IAAaH,EAAM,eAAe,IAAIE,CAAE;AAE9C,MAAI,CAACC;AACH,WAAOC,EAAOJ,GAAOC,CAAI;AAI3B,QAAMI,IAAa,EAAC,KAAKC,EAAaH,EAAW,OAAO,EAAE,GAAG,KAAKF,EAAK,IAAG;AAE1E,EAAIE,EAAW,UAAU,QAAQA,EAAW,UAAU,WACpDE,EAAW,QAAQF,EAAW;AAIhC,QAAMI,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAAF,GAAY,UAAU,GAAE;AACzE,SAAAL,EAAM,MAAMC,GAAMM,CAAM,GACjBP,EAAM,UAAUC,GAAMM,CAAM;AACrC;","x_google_ignoreList":[0]}