{"version":3,"file":"cori.data.api257.js","sources":["../../node_modules/html-to-image/es/embed-images.js"],"sourcesContent":["import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map"],"names":["embedProp","propName","node","options","_a","propValue","cssString","embedResources","embedBackground","clonedNode","embedImageNode","isImageElement","isInstanceOfElement","isDataUrl","url","dataURL","resourceToDataURL","getMimeType","resolve","reject","image","embedChildren","deferreds","toArray","child","embedImages"],"mappings":";;;;;;;;;;AAIA,eAAeA,EAAUC,GAAUC,GAAMC,GAAS;AAC9C,MAAIC;AACJ,QAAMC,KAAaD,IAAKF,EAAK,WAAW,QAAQE,MAAO,SAAS,SAASA,EAAG,iBAAiBH,CAAQ;AACrG,MAAII,GAAW;AACX,UAAMC,IAAY,MAAMC,EAAeF,GAAW,MAAMF,CAAO;AAC/D,WAAAD,EAAK,MAAM,YAAYD,GAAUK,GAAWJ,EAAK,MAAM,oBAAoBD,CAAQ,CAAC,GAC7E;AAAA,EACV;AACD,SAAO;AACX;AACA,eAAeO,EAAgBC,GAAYN,GAAS;AAChD,EAAM,MAAMH,EAAU,cAAcS,GAAYN,CAAO,KACnD,MAAMH,EAAU,oBAAoBS,GAAYN,CAAO,GAErD,MAAMH,EAAU,QAAQS,GAAYN,CAAO,KAC7C,MAAMH,EAAU,cAAcS,GAAYN,CAAO;AAEzD;AACA,eAAeO,EAAeD,GAAYN,GAAS;AAC/C,QAAMQ,IAAiBC,EAAoBH,GAAY,gBAAgB;AACvE,MAAI,EAAEE,KAAkB,CAACE,EAAUJ,EAAW,GAAG,MAC7C,EAAEG,EAAoBH,GAAY,eAAe,KAC7C,CAACI,EAAUJ,EAAW,KAAK,OAAO;AACtC;AAEJ,QAAMK,IAAMH,IAAiBF,EAAW,MAAMA,EAAW,KAAK,SACxDM,IAAU,MAAMC,EAAkBF,GAAKG,EAAYH,CAAG,GAAGX,CAAO;AACtE,QAAM,IAAI,QAAQ,CAACe,GAASC,MAAW;AACnC,IAAAV,EAAW,SAASS,GACpBT,EAAW,UAAUU;AACrB,UAAMC,IAAQX;AACd,IAAIW,EAAM,WACNA,EAAM,SAASF,IAEfE,EAAM,YAAY,WAClBA,EAAM,UAAU,UAEhBT,KACAF,EAAW,SAAS,IACpBA,EAAW,MAAMM,KAGjBN,EAAW,KAAK,UAAUM;AAAA,EAEtC,CAAK;AACL;AACA,eAAeM,EAAcZ,GAAYN,GAAS;AAE9C,QAAMmB,IADWC,EAAQd,EAAW,UAAU,EACnB,IAAI,CAACe,MAAUC,EAAYD,GAAOrB,CAAO,CAAC;AACrE,QAAM,QAAQ,IAAImB,CAAS,EAAE,KAAK,MAAMb,CAAU;AACtD;AACO,eAAegB,EAAYhB,GAAYN,GAAS;AACnD,EAAIS,EAAoBH,GAAY,OAAO,MACvC,MAAMD,EAAgBC,GAAYN,CAAO,GACzC,MAAMO,EAAeD,GAAYN,CAAO,GACxC,MAAMkB,EAAcZ,GAAYN,CAAO;AAE/C;","x_google_ignoreList":[0]}