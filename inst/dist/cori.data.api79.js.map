{"version":3,"file":"cori.data.api79.js","sources":["../../node_modules/d3-array/src/bisector.js"],"sourcesContent":["import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n"],"names":["bisector","f","compare1","compare2","delta","ascending","d","x","descending","zero","left","a","lo","hi","mid","right","center"],"mappings":";;;;;;;;AAGe,SAASA,EAASC,GAAG;AAClC,MAAIC,GAAUC,GAAUC;AAOxB,EAAIH,EAAE,WAAW,KACfC,IAAWG,GACXF,IAAW,CAACG,GAAGC,MAAMF,EAAUJ,EAAEK,CAAC,GAAGC,CAAC,GACtCH,IAAQ,CAACE,GAAGC,MAAMN,EAAEK,CAAC,IAAIC,MAEzBL,IAAWD,MAAMI,KAAaJ,MAAMO,IAAaP,IAAIQ,GACrDN,IAAWF,GACXG,IAAQH;AAGV,WAASS,EAAKC,GAAGJ,GAAGK,IAAK,GAAGC,IAAKF,EAAE,QAAQ;AACzC,QAAIC,IAAKC,GAAI;AACX,UAAIX,EAASK,GAAGA,CAAC,MAAM;AAAG,eAAOM;AACjC,SAAG;AACD,cAAMC,IAAOF,IAAKC,MAAQ;AAC1B,QAAIV,EAASQ,EAAEG,CAAG,GAAGP,CAAC,IAAI,IAAGK,IAAKE,IAAM,IACnCD,IAAKC;AAAA,MAClB,SAAeF,IAAKC;AAAA,IACf;AACD,WAAOD;AAAA,EACR;AAED,WAASG,EAAMJ,GAAGJ,GAAGK,IAAK,GAAGC,IAAKF,EAAE,QAAQ;AAC1C,QAAIC,IAAKC,GAAI;AACX,UAAIX,EAASK,GAAGA,CAAC,MAAM;AAAG,eAAOM;AACjC,SAAG;AACD,cAAMC,IAAOF,IAAKC,MAAQ;AAC1B,QAAIV,EAASQ,EAAEG,CAAG,GAAGP,CAAC,KAAK,IAAGK,IAAKE,IAAM,IACpCD,IAAKC;AAAA,MAClB,SAAeF,IAAKC;AAAA,IACf;AACD,WAAOD;AAAA,EACR;AAED,WAASI,EAAOL,GAAGJ,GAAGK,IAAK,GAAGC,IAAKF,EAAE,QAAQ;AAC3C,UAAM,IAAID,EAAKC,GAAGJ,GAAGK,GAAIC,IAAK,CAAC;AAC/B,WAAO,IAAID,KAAMR,EAAMO,EAAE,IAAI,CAAC,GAAGJ,CAAC,IAAI,CAACH,EAAMO,EAAE,CAAC,GAAGJ,CAAC,IAAI,IAAI,IAAI;AAAA,EACjE;AAED,SAAO,EAAC,MAAAG,GAAM,QAAAM,GAAQ,OAAAD,EAAK;AAC7B;AAEA,SAASN,IAAO;AACd,SAAO;AACT;","x_google_ignoreList":[0]}