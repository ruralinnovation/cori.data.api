{"version":3,"file":"cori.data.api577.js","sources":["../../node_modules/apache-arrow/fb/field-node.mjs"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values `[[1, 2, 3], null, [4], [5, 6], null]`\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n */\nexport class FieldNode {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * The number of value slots in the Arrow array at this level of a nested\n     * tree\n     */\n    length() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * The number of observed nulls. Fields with null_count == 0 may choose not\n     * to write their physical validity bitmap out as a materialized buffer,\n     * instead setting the length of the bitmap buffer to 0.\n     */\n    nullCount() {\n        return this.bb.readInt64(this.bb_pos + 8);\n    }\n    static sizeOf() {\n        return 16;\n    }\n    static createFieldNode(builder, length, null_count) {\n        builder.prep(8, 16);\n        builder.writeInt64(BigInt(null_count !== null && null_count !== void 0 ? null_count : 0));\n        builder.writeInt64(BigInt(length !== null && length !== void 0 ? length : 0));\n        return builder.offset();\n    }\n}\n\n//# sourceMappingURL=field-node.mjs.map\n"],"names":["FieldNode","i","bb","builder","length","null_count"],"mappings":";;;;;;AAYO,MAAMA,EAAU;AAAA,EACnB,cAAc;AACV,SAAK,KAAK,MACV,KAAK,SAAS;AAAA,EACjB;AAAA,EACD,OAAOC,GAAGC,GAAI;AACV,gBAAK,SAASD,GACd,KAAK,KAAKC,GACH;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,SAAS;AACL,WAAO,KAAK,GAAG,UAAU,KAAK,MAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,YAAY;AACR,WAAO,KAAK,GAAG,UAAU,KAAK,SAAS,CAAC;AAAA,EAC3C;AAAA,EACD,OAAO,SAAS;AACZ,WAAO;AAAA,EACV;AAAA,EACD,OAAO,gBAAgBC,GAASC,GAAQC,GAAY;AAChD,WAAAF,EAAQ,KAAK,GAAG,EAAE,GAClBA,EAAQ,WAAW,OAAOE,KAA4D,CAAC,CAAC,GACxFF,EAAQ,WAAW,OAAOC,KAAgD,CAAC,CAAC,GACrED,EAAQ;EAClB;AACL;","x_google_ignoreList":[0]}