{"version":3,"file":"message.js","sources":["../../../../../../node_modules/apache-arrow/ipc/metadata/message.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* eslint-disable brace-style */\nimport * as flatbuffers from 'flatbuffers';\nimport { Schema as _Schema } from '../../fb/schema.mjs';\nimport { Int as _Int } from '../../fb/int.mjs';\nimport { RecordBatch as _RecordBatch } from '../../fb/record-batch.mjs';\nimport { DictionaryBatch as _DictionaryBatch } from '../../fb/dictionary-batch.mjs';\nimport { Buffer as _Buffer } from '../../fb/buffer.mjs';\nimport { Field as _Field } from '../../fb/field.mjs';\nimport { FieldNode as _FieldNode } from '../../fb/field-node.mjs';\nimport { Type } from '../../fb/type.mjs';\nimport { KeyValue as _KeyValue } from '../../fb/key-value.mjs';\nimport { Endianness as _Endianness } from '../../fb/endianness.mjs';\nimport { FloatingPoint as _FloatingPoint } from '../../fb/floating-point.mjs';\nimport { Decimal as _Decimal } from '../../fb/decimal.mjs';\nimport { Date as _Date } from '../../fb/date.mjs';\nimport { Time as _Time } from '../../fb/time.mjs';\nimport { Timestamp as _Timestamp } from '../../fb/timestamp.mjs';\nimport { Interval as _Interval } from '../../fb/interval.mjs';\nimport { Duration as _Duration } from '../../fb/duration.mjs';\nimport { Union as _Union } from '../../fb/union.mjs';\nimport { FixedSizeBinary as _FixedSizeBinary } from '../../fb/fixed-size-binary.mjs';\nimport { FixedSizeList as _FixedSizeList } from '../../fb/fixed-size-list.mjs';\nimport { Map as _Map } from '../../fb/map.mjs';\nimport { Message as _Message } from '../../fb/message.mjs';\nimport { Schema, Field } from '../../schema.mjs';\nimport { toUint8Array } from '../../util/buffer.mjs';\nimport { bigIntToNumber } from '../../util/bigint.mjs';\nimport { MessageHeader, MetadataVersion } from '../../enum.mjs';\nimport { instance as typeAssembler } from '../../visitor/typeassembler.mjs';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json.mjs';\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { DataType, Dictionary, Utf8, LargeUtf8, Binary, LargeBinary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, Duration, } from '../../type.mjs';\n/**\n * @ignore\n * @private\n **/\nexport class Message {\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, MetadataVersion.V5, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        const b = new Builder();\n        let headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V5);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, BigInt(message.bodyLength));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V5, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V5, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V5, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === MessageHeader.DictionaryBatch; }\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = bigIntToNumber(bodyLength);\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = bigIntToNumber(length);\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = bigIntToNumber(id);\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    constructor(offset, length) {\n        this.offset = bigIntToNumber(offset);\n        this.length = bigIntToNumber(length);\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    constructor(length, nullCount) {\n        this.length = bigIntToNumber(length);\n        this.nullCount = bigIntToNumber(nullCount);\n    }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema()), new Map(), message.version());\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map(), version = MetadataVersion.V5) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries, version);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = MetadataVersion.V5) {\n    if (batch.compression() !== null) {\n        throw new Error('Record batch compression not implemented');\n    }\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = MetadataVersion.V5) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = bigIntToNumber(dictMeta.id()))) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = Math.trunc(parent.customMetadataLength()); ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type['NONE']: return new Null();\n        case Type['Null']: return new Null();\n        case Type['Binary']: return new Binary();\n        case Type['LargeBinary']: return new LargeBinary();\n        case Type['Utf8']: return new Utf8();\n        case Type['LargeUtf8']: return new LargeUtf8();\n        case Type['Bool']: return new Bool();\n        case Type['List']: return new List((children || [])[0]);\n        case Type['Struct_']: return new Struct(children || []);\n    }\n    switch (typeId) {\n        case Type['Int']: {\n            const t = f.type(new _Int());\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type['FloatingPoint']: {\n            const t = f.type(new _FloatingPoint());\n            return new Float(t.precision());\n        }\n        case Type['Decimal']: {\n            const t = f.type(new _Decimal());\n            return new Decimal(t.scale(), t.precision(), t.bitWidth());\n        }\n        case Type['Date']: {\n            const t = f.type(new _Date());\n            return new Date_(t.unit());\n        }\n        case Type['Time']: {\n            const t = f.type(new _Time());\n            return new Time(t.unit(), t.bitWidth());\n        }\n        case Type['Timestamp']: {\n            const t = f.type(new _Timestamp());\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type['Interval']: {\n            const t = f.type(new _Interval());\n            return new Interval(t.unit());\n        }\n        case Type['Duration']: {\n            const t = f.type(new _Duration());\n            return new Duration(t.unit());\n        }\n        case Type['Union']: {\n            const t = f.type(new _Union());\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type['FixedSizeBinary']: {\n            const t = f.type(new _FixedSizeBinary());\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type['FixedSizeList']: {\n            const t = f.type(new _FixedSizeList());\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type['Map']: {\n            const t = f.type(new _Map());\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    const type = field.type;\n    let typeId = field.typeId;\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b);\n        typeOffset = typeAssembler.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    for (const n of nodes.slice().reverse())\n        FieldNode.encode(b, n);\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    for (const b_ of buffers.slice().reverse())\n        BufferRegion.encode(b, b_);\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, BigInt(recordBatch.length));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, BigInt(dictionaryBatch.id));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, BigInt(node.length), BigInt(node.nullCount));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, BigInt(node.offset), BigInt(node.length));\n}\n/** @ignore */\nconst platformIsLittleEndian = (() => {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.mjs.map\n"],"names":["flatbuffers.Builder","flatbuffers.ByteBuffer","_Message","_Schema","_RecordBatch","_DictionaryBatch","Int","_Int","_FloatingPoint","_Decimal","Decimal","_Date","_Time","Time","_Timestamp","Timestamp","_Interval","Interval","_Duration","Duration","_Union","Union","_FixedSizeBinary","FixedSizeBinary","_FixedSizeList","FixedSizeList","_Map","_KeyValue","_Endianness","typeAssembler","_Field","_FieldNode","_Buffer"],"mappings":"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","x_google_ignoreList":[0]}