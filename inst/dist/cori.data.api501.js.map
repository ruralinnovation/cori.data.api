{"version":3,"file":"cori.data.api501.js","sources":["../../node_modules/scheduler/cjs/scheduler.development.js"],"sourcesContent":["/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var enableSchedulerDebugging = false;\nvar enableProfiling = false;\nvar frameYieldMs = 5;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\nvar localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nvar isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar isMessageLoopRunning = false;\nvar scheduledHostCallback = null;\nvar taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\n\nvar frameInterval = frameYieldMs;\nvar startTime = -1;\n\nfunction shouldYieldToHost() {\n  var timeElapsed = exports.unstable_now() - startTime;\n\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n  return true;\n}\n\nfunction requestPaint() {\n\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n    return;\n  }\n\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nvar performWorkUntilDeadline = function () {\n  if (scheduledHostCallback !== null) {\n    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n\n    startTime = currentTime;\n    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n    var hasMoreWork = true;\n\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  } // Yielding to the browser will give it a chance to paint, so we can\n};\n\nvar schedulePerformWorkUntilDeadline;\n\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"names":["enableSchedulerDebugging","enableProfiling","frameYieldMs","push","heap","node","index","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","length","halfLength","leftIndex","left","rightIndex","right","a","b","diff","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","hasPerformanceNow","localPerformance","exports","localDate","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","localClearTimeout","localSetImmediate","advanceTimers","currentTime","timer","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","shouldYieldToHost","callback","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","priorityLevel","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_scheduleCallback","options","startTime","delay","timeout","expirationTime","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","channel","port","unstable_requestPaint","unstable_Profiling"],"mappings":";;;;;;;;;;;;;;;;;;;AAYA,IAAI,QAAQ,IAAI,aAAa,gBAC1B,WAAW;AAKd,MACE,OAAO,iCAAmC,OAC1C,OAAO,+BAA+B,+BACpC,cAEF,+BAA+B,4BAA4B,IAAI,MAAK,CAAE;AAE9D,UAAIA,IAA2B,IACrCC,IAAkB,IAClBC,IAAe;AAEnB,eAASC,EAAKC,GAAMC,GAAM;AACxB,YAAIC,IAAQF,EAAK;AACjB,QAAAA,EAAK,KAAKC,CAAI,GACdE,EAAOH,GAAMC,GAAMC,CAAK;AAAA,MACzB;AACD,eAASE,EAAKJ,GAAM;AAClB,eAAOA,EAAK,WAAW,IAAI,OAAOA,EAAK,CAAC;AAAA,MACzC;AACD,eAASK,EAAIL,GAAM;AACjB,YAAIA,EAAK,WAAW;AAClB,iBAAO;AAGT,YAAIM,IAAQN,EAAK,CAAC,GACdO,IAAOP,EAAK;AAEhB,eAAIO,MAASD,MACXN,EAAK,CAAC,IAAIO,GACVC,EAASR,GAAMO,GAAM,CAAC,IAGjBD;AAAA,MACR;AAED,eAASH,EAAOH,GAAMC,GAAMQ,GAAG;AAG7B,iBAFIP,IAAQO,GAELP,IAAQ,KAAG;AAChB,cAAIQ,IAAcR,IAAQ,MAAM,GAC5BS,IAASX,EAAKU,CAAW;AAE7B,cAAIE,EAAQD,GAAQV,CAAI,IAAI;AAE1B,YAAAD,EAAKU,CAAW,IAAIT,GACpBD,EAAKE,CAAK,IAAIS,GACdT,IAAQQ;AAAA;AAGR;AAAA,QAEH;AAAA,MACF;AAED,eAASF,EAASR,GAAMC,GAAMQ,GAAG;AAK/B,iBAJIP,IAAQO,GACRI,IAASb,EAAK,QACdc,IAAaD,MAAW,GAErBX,IAAQY,KAAY;AACzB,cAAIC,KAAab,IAAQ,KAAK,IAAI,GAC9Bc,IAAOhB,EAAKe,CAAS,GACrBE,IAAaF,IAAY,GACzBG,IAAQlB,EAAKiB,CAAU;AAE3B,cAAIL,EAAQI,GAAMf,CAAI,IAAI;AACxB,YAAIgB,IAAaJ,KAAUD,EAAQM,GAAOF,CAAI,IAAI,KAChDhB,EAAKE,CAAK,IAAIgB,GACdlB,EAAKiB,CAAU,IAAIhB,GACnBC,IAAQe,MAERjB,EAAKE,CAAK,IAAIc,GACdhB,EAAKe,CAAS,IAAId,GAClBC,IAAQa;AAAA,mBAEDE,IAAaJ,KAAUD,EAAQM,GAAOjB,CAAI,IAAI;AACvD,YAAAD,EAAKE,CAAK,IAAIgB,GACdlB,EAAKiB,CAAU,IAAIhB,GACnBC,IAAQe;AAAA;AAGR;AAAA,QAEH;AAAA,MACF;AAED,eAASL,EAAQO,GAAGC,GAAG;AAErB,YAAIC,IAAOF,EAAE,YAAYC,EAAE;AAC3B,eAAOC,MAAS,IAAIA,IAAOF,EAAE,KAAKC,EAAE;AAAA,MACrC;AAGD,UAAIE,IAAoB,GACpBC,IAAuB,GACvBC,IAAiB,GACjBC,IAAc,GACdC,IAAe;AAEnB,eAASC,GAAgBC,GAAMC,GAAI;AAAA,MAClC;AAID,UAAIC,IAAoB,OAAO,eAAgB,YAAY,OAAO,YAAY,OAAQ;AAEtF,UAAIA,GAAmB;AACrB,YAAIC,IAAmB;AAEvB,QAAAC,iBAAuB,WAAY;AACjC,iBAAOD,EAAiB;QAC5B;AAAA,MACA,OAAO;AACL,YAAIE,IAAY,MACZC,KAAcD,EAAU;AAE5B,QAAAD,iBAAuB,WAAY;AACjC,iBAAOC,EAAU,IAAK,IAAGC;AAAA,QAC7B;AAAA,MACC;AAKD,UAAIC,KAAoB,YAEpBC,KAA6B,IAE7BC,KAAiC,KACjCC,KAA0B,KAC1BC,KAAuB,KAEvBC,KAAwBL,IAExBM,IAAY,CAAA,GACZC,IAAa,CAAA,GAEbC,KAAgB,GAChBC,IAAc,MACdC,IAAuBrB,GAEvBsB,IAAmB,IACnBC,IAA0B,IAC1BC,IAAyB,IAEzBC,IAAkB,OAAO,cAAe,aAAa,aAAa,MAClEC,KAAoB,OAAO,gBAAiB,aAAa,eAAe,MACxEC,IAAoB,OAAO,eAAiB,MAAc,eAAe;AAExD,aAAO,YAAc,OAAe,UAAU,eAAe,UAAa,UAAU,WAAW,mBAAmB,UAAY,UAAU,WAAW,eAAe,KAAK,UAAU,UAAU;AAEhN,eAASC,EAAcC,GAAa;AAIlC,iBAFIC,IAAQlD,EAAKsC,CAAU,GAEpBY,MAAU,QAAM;AACrB,cAAIA,EAAM,aAAa;AAErB,YAAAjD,EAAIqC,CAAU;AAAA,mBACLY,EAAM,aAAaD;AAE5B,YAAAhD,EAAIqC,CAAU,GACdY,EAAM,YAAYA,EAAM,gBACxBvD,EAAK0C,GAAWa,CAAK;AAAA;AAGrB;AAGF,UAAAA,IAAQlD,EAAKsC,CAAU;AAAA,QACxB;AAAA,MACF;AAED,eAASa,EAAcF,GAAa;AAIlC,YAHAL,IAAyB,IACzBI,EAAcC,CAAW,GAErB,CAACN;AACH,cAAI3C,EAAKqC,CAAS,MAAM;AACtB,YAAAM,IAA0B,IAC1BS,EAAoBC,CAAS;AAAA,eACxB;AACL,gBAAIC,IAAatD,EAAKsC,CAAU;AAEhC,YAAIgB,MAAe,QACjBC,EAAmBJ,GAAeG,EAAW,YAAYL,CAAW;AAAA,UAEvE;AAAA,MAEJ;AAED,eAASI,EAAUG,GAAkB1B,GAAa;AAGhD,QAAAa,IAA0B,IAEtBC,MAEFA,IAAyB,IACzBa,MAGFf,IAAmB;AACnB,YAAIgB,IAAwBjB;AAE5B,YAAI;;AACF,cAAI,CAAAhD;AAcF,mBAAOkE,GAASH,GAAkB1B,CAAW;AAAA,QAEnD,UAAY;AACR,UAAAU,IAAc,MACdC,IAAuBiB,GACvBhB,IAAmB;AAAA,QACpB;AAAA,MACF;AAED,eAASiB,GAASH,GAAkB1B,GAAa;AAC/C,YAAImB,IAAcnB;AAIlB,aAHAkB,EAAcC,CAAW,GACzBT,IAAcxC,EAAKqC,CAAS,GAErBG,MAAgB,QAAQ,CAAEhD,KAC3B,EAAAgD,EAAY,iBAAiBS,MAAgB,CAACO,KAAoBI,EAAiB,OAD5B;AAM3D,cAAIC,IAAWrB,EAAY;AAE3B,cAAI,OAAOqB,KAAa,YAAY;AAClC,YAAArB,EAAY,WAAW,MACvBC,IAAuBD,EAAY;AACnC,gBAAIsB,IAAyBtB,EAAY,kBAAkBS,GAEvDc,IAAuBF,EAASC,CAAsB;AAC1D,YAAAb,IAAcrB,EAAQ,gBAElB,OAAOmC,KAAyB,aAClCvB,EAAY,WAAWuB,IAGnBvB,MAAgBxC,EAAKqC,CAAS,KAChCpC,EAAIoC,CAAS,GAIjBW,EAAcC,CAAW;AAAA,UAC/B;AACM,YAAAhD,EAAIoC,CAAS;AAGf,UAAAG,IAAcxC,EAAKqC,CAAS;AAAA,QAC7B;AAGD,YAAIG,MAAgB;AAClB,iBAAO;AAEP,YAAIc,IAAatD,EAAKsC,CAAU;AAEhC,eAAIgB,MAAe,QACjBC,EAAmBJ,GAAeG,EAAW,YAAYL,CAAW,GAG/D;AAAA,MAEV;AAED,eAASe,GAAyBC,GAAeC,GAAc;AAC7D,gBAAQD,GAAa;AAAA,UACnB,KAAK/C;AAAA,UACL,KAAKC;AAAA,UACL,KAAKC;AAAA,UACL,KAAKC;AAAA,UACL,KAAKC;AACH;AAAA,UAEF;AACE,YAAA2C,IAAgB7C;AAAA,QACnB;AAED,YAAIsC,IAAwBjB;AAC5B,QAAAA,IAAuBwB;AAEvB,YAAI;AACF,iBAAOC,EAAY;AAAA,QACvB,UAAY;AACR,UAAAzB,IAAuBiB;AAAA,QACxB;AAAA,MACF;AAED,eAASS,GAAcD,GAAc;AACnC,YAAID;AAEJ,gBAAQxB,GAAoB;AAAA,UAC1B,KAAKvB;AAAA,UACL,KAAKC;AAAA,UACL,KAAKC;AAEH,YAAA6C,IAAgB7C;AAChB;AAAA,UAEF;AAEE,YAAA6C,IAAgBxB;AAChB;AAAA,QACH;AAED,YAAIiB,IAAwBjB;AAC5B,QAAAA,IAAuBwB;AAEvB,YAAI;AACF,iBAAOC,EAAY;AAAA,QACvB,UAAY;AACR,UAAAzB,IAAuBiB;AAAA,QACxB;AAAA,MACF;AAED,eAASU,GAAsBP,GAAU;AACvC,YAAIQ,IAAsB5B;AAC1B,eAAO,WAAY;AAEjB,cAAIiB,IAAwBjB;AAC5B,UAAAA,IAAuB4B;AAEvB,cAAI;AACF,mBAAOR,EAAS,MAAM,MAAM,SAAS;AAAA,UAC3C,UAAc;AACR,YAAApB,IAAuBiB;AAAA,UACxB;AAAA,QACL;AAAA,MACC;AAED,eAASY,GAA0BL,GAAeJ,GAAUU,GAAS;AACnE,YAAItB,IAAcrB,EAAQ,gBACtB4C;AAEJ,YAAI,OAAOD,KAAY,YAAYA,MAAY,MAAM;AACnD,cAAIE,IAAQF,EAAQ;AAEpB,UAAI,OAAOE,KAAU,YAAYA,IAAQ,IACvCD,IAAYvB,IAAcwB,IAE1BD,IAAYvB;AAAA,QAElB;AACI,UAAAuB,IAAYvB;AAGd,YAAIyB;AAEJ,gBAAQT,GAAa;AAAA,UACnB,KAAK/C;AACH,YAAAwD,IAAU1C;AACV;AAAA,UAEF,KAAKb;AACH,YAAAuD,IAAUzC;AACV;AAAA,UAEF,KAAKX;AACH,YAAAoD,IAAUtC;AACV;AAAA,UAEF,KAAKf;AACH,YAAAqD,IAAUvC;AACV;AAAA,UAEF,KAAKf;AAAA,UACL;AACE,YAAAsD,IAAUxC;AACV;AAAA,QACH;AAED,YAAIyC,IAAiBH,IAAYE,GAC7BE,IAAU;AAAA,UACZ,IAAIrC;AAAA,UACJ,UAAUsB;AAAA,UACV,eAAeI;AAAA,UACf,WAAWO;AAAA,UACX,gBAAgBG;AAAA,UAChB,WAAW;AAAA,QACf;AAEE,eAAIH,IAAYvB,KAEd2B,EAAQ,YAAYJ,GACpB7E,EAAK2C,GAAYsC,CAAO,GAEpB5E,EAAKqC,CAAS,MAAM,QAAQuC,MAAY5E,EAAKsC,CAAU,MAErDM,IAEFa,MAEAb,IAAyB,IAI3BW,EAAmBJ,GAAeqB,IAAYvB,CAAW,OAG3D2B,EAAQ,YAAYD,GACpBhF,EAAK0C,GAAWuC,CAAO,GAInB,CAACjC,KAA2B,CAACD,MAC/BC,IAA0B,IAC1BS,EAAoBC,CAAS,KAI1BuB;AAAA,MACR;AAED,eAASC,KAA0B;AAAA,MAClC;AAED,eAASC,KAA6B;AAEpC,QAAI,CAACnC,KAA2B,CAACD,MAC/BC,IAA0B,IAC1BS,EAAoBC,CAAS;AAAA,MAEhC;AAED,eAAS0B,KAAgC;AACvC,eAAO/E,EAAKqC,CAAS;AAAA,MACtB;AAED,eAAS2C,GAAwBxD,GAAM;AAKrC,QAAAA,EAAK,WAAW;AAAA,MACjB;AAED,eAASyD,KAAmC;AAC1C,eAAOxC;AAAA,MACR;AAED,UAAIyC,IAAuB,IACvBC,IAAwB,MACxBC,IAAgB,IAKhBC,IAAgB3F,GAChB8E,IAAY;AAEhB,eAASZ,IAAoB;AAC3B,YAAI0B,IAAc1D,EAAQ,aAAY,IAAK4C;AAE3C,eAAI,EAAAc,IAAcD;AAAA,MAQnB;AAED,eAASE,KAAe;AAAA,MAEvB;AAED,eAASC,GAAeC,GAAK;AAC3B,YAAIA,IAAM,KAAKA,IAAM,KAAK;AAExB,kBAAQ,MAAS,iHAAsH;AACvI;AAAA,QACD;AAED,QAAIA,IAAM,IACRJ,IAAgB,KAAK,MAAM,MAAOI,CAAG,IAGrCJ,IAAgB3F;AAAA,MAEnB;AAED,UAAIgG,IAA2B,WAAY;AACzC,YAAIP,MAA0B,MAAM;AAClC,cAAIlC,IAAcrB,EAAQ;AAG1B,UAAA4C,IAAYvB;AACZ,cAAIO,IAAmB,IAOnBmC,IAAc;AAElB,cAAI;AACF,YAAAA,IAAcR,EAAsB3B,GAAkBP,CAAW;AAAA,UACvE,UAAc;AACR,YAAI0C,IAGFC,OAEAV,IAAuB,IACvBC,IAAwB;AAAA,UAE3B;AAAA,QACL;AACI,UAAAD,IAAuB;AAAA,MAE3B,GAEIU;AAEJ,UAAI,OAAO7C,KAAsB;AAY/B,QAAA6C,IAAmC,WAAY;AAC7C,UAAA7C,EAAkB2C,CAAwB;AAAA,QAC9C;AAAA,eACW,OAAO,iBAAmB,KAAa;AAGhD,YAAIG,IAAU,IAAI,kBACdC,KAAOD,EAAQ;AACnB,QAAAA,EAAQ,MAAM,YAAYH,GAE1BE,IAAmC,WAAY;AAC7C,UAAAE,GAAK,YAAY,IAAI;AAAA,QACzB;AAAA,MACA;AAEE,QAAAF,IAAmC,WAAY;AAC7C,UAAA/C,EAAgB6C,GAA0B,CAAC;AAAA,QAC/C;AAGA,eAAStC,EAAoBS,GAAU;AACrC,QAAAsB,IAAwBtB,GAEnBqB,MACHA,IAAuB,IACvBU;MAEH;AAED,eAASrC,EAAmBM,GAAUpC,GAAI;AACxC,QAAA2D,IAAgBvC,EAAgB,WAAY;AAC1C,UAAAgB,EAASjC,EAAQ,aAAY,CAAE;AAAA,QAChC,GAAEH,CAAE;AAAA,MACN;AAED,eAASgC,IAAoB;AAC3B,QAAAX,GAAkBsC,CAAa,GAC/BA,IAAgB;AAAA,MACjB;AAED,UAAIW,KAAwBR,IACxBS,KAAsB;AAE1B,MAAApE,EAAA,wBAAgCN,GAChCM,EAAA,6BAAqCV,GACrCU,EAAA,uBAA+BP,GAC/BO,EAAA,0BAAkCR,GAClCQ,EAAA,qBAA6BoE,IAC7BpE,EAAA,gCAAwCT,GACxCS,EAAA,0BAAkCoD,IAClCpD,EAAA,6BAAqCkD,IACrClD,EAAA,0BAAkC4D,IAClC5D,EAAA,mCAA2CqD,IAC3CrD,EAAA,gCAAwCmD,IACxCnD,EAAA,gBAAwBuC,IACxBvC,EAAA,0BAAkCiD,IAClCjD,EAAA,wBAAgCmE,IAChCnE,EAAA,2BAAmCoC,IACnCpC,EAAA,4BAAoC0C,IACpC1C,EAAA,uBAA+BgC,GAC/BhC,EAAA,wBAAgCwC,IAG9B,OAAO,iCAAmC,OAC1C,OAAO,+BAA+B,8BACpC,cAEF,+BAA+B,2BAA2B,IAAI,MAAK,CAAE;AAAA,IAGvE;;;","x_google_ignoreList":[0]}