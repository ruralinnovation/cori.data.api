{"version":3,"file":"join.js","sources":["../../../../../../node_modules/arquero/src/engine/join.js"],"sourcesContent":["import { indexLookup } from './join/lookup';\nimport columnSet from '../table/column-set';\nimport concat from '../util/concat';\nimport isArray from '../util/is-array';\nimport unroll from '../util/unroll';\n\nfunction emitter(columns, getters) {\n  const args = ['i', 'a', 'j', 'b'];\n  return unroll(\n    args,\n    '{' + concat(columns, (_, i) => `_${i}.push($${i}(${args}));`) + '}',\n    columns, getters\n  );\n}\n\nexport default function(tableL, tableR, predicate, { names, exprs }, options = {}) {\n  // initialize data for left table\n  const dataL = tableL.data();\n  const idxL = tableL.indices(false);\n  const nL = idxL.length;\n  const hitL = new Int32Array(nL);\n\n  // initialize data for right table\n  const dataR = tableR.data();\n  const idxR = tableR.indices(false);\n  const nR = idxR.length;\n  const hitR = new Int32Array(nR);\n\n  // initialize output data\n  const ncols = names.length;\n  const cols = columnSet();\n  const columns = Array(ncols);\n  const getters = Array(ncols);\n  for (let i = 0; i < names.length; ++i) {\n    columns[i] = cols.add(names[i], []);\n    getters[i] = exprs[i];\n  }\n  const emit = emitter(columns, getters);\n\n  // perform join\n  const join = isArray(predicate) ? hashJoin : loopJoin;\n  join(emit, predicate, dataL, dataR, idxL, idxR, hitL, hitR, nL, nR);\n\n  if (options.left) {\n    for (let i = 0; i < nL; ++i) {\n      if (!hitL[i]) {\n        emit(idxL[i], dataL, -1, dataR);\n      }\n    }\n  }\n\n  if (options.right) {\n    for (let j = 0; j < nR; ++j) {\n      if (!hitR[j]) {\n        emit(-1, dataL, idxR[j], dataR);\n      }\n    }\n  }\n\n  return tableL.create(cols.new());\n}\n\nfunction loopJoin(emit, predicate, dataL, dataR, idxL, idxR, hitL, hitR, nL, nR) {\n  // perform nested-loops join\n  for (let i = 0; i < nL; ++i) {\n    const rowL = idxL[i];\n    for (let j = 0; j < nR; ++j) {\n      const rowR = idxR[j];\n      if (predicate(rowL, dataL, rowR, dataR)) {\n        emit(rowL, dataL, rowR, dataR);\n        hitL[i] = 1;\n        hitR[j] = 1;\n      }\n    }\n  }\n}\n\nfunction hashJoin(emit, [keyL, keyR], dataL, dataR, idxL, idxR, hitL, hitR, nL, nR) {\n  // determine which table to hash\n  let dataScan, keyScan, hitScan, idxScan;\n  let dataHash, keyHash, hitHash, idxHash;\n  let emitScan = emit;\n  if (nL >= nR) {\n    dataScan = dataL; keyScan = keyL; hitScan = hitL; idxScan = idxL;\n    dataHash = dataR; keyHash = keyR; hitHash = hitR; idxHash = idxR;\n  } else {\n    dataScan = dataR; keyScan = keyR; hitScan = hitR; idxScan = idxR;\n    dataHash = dataL; keyHash = keyL; hitHash = hitL; idxHash = idxL;\n    emitScan = (i, a, j, b) => emit(j, b, i, a);\n  }\n\n  // build lookup table\n  const lut = indexLookup(idxHash, dataHash, keyHash);\n\n  // scan other table\n  const m = idxScan.length;\n  for (let j = 0; j < m; ++j) {\n    const rowScan = idxScan[j];\n    const list = lut.get(keyScan(rowScan, dataScan));\n    if (list) {\n      const n = list.length;\n      for (let k = 0; k < n; ++k) {\n        const i = list[k];\n        emitScan(rowScan, dataScan, idxHash[i], dataHash);\n        hitHash[i] = 1;\n      }\n      hitScan[j] = 1;\n    }\n  }\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}