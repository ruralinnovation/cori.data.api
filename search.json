[
  {
    "objectID": "docs/functions/ApiContextProvider.html",
    "href": "docs/functions/ApiContextProvider.html",
    "title": "ApiContextProvider()",
    "section": "",
    "text": "@cori-risi/cori.data.api / ApiContextProvider",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "ApiContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/ApiContextProvider.html#parameters",
    "href": "docs/functions/ApiContextProvider.html#parameters",
    "title": "ApiContextProvider()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.baseURL?: string\nBase URL for the RESTful API endpoint, e.g., https://d6q5pgqgx5oy5.cloudfront.net.\n• props.children?: ReactElement&lt;any, string | JSXElementConstructor&lt;any&gt;&gt;\n• props.fetchAuthSession?: Function\nAn optional function from the Amplify Auth package to start an authenticated session\n• props.getCurrentUser?: Function\nAn optional function from the Amplify Cognito package to fetch the current authenticated user (if any)\n• props.signOut?: Function\nAn optional function that is one of many destructured props contained in the Amplify authenticator context (returned by the useAuthenticator() hoook), used to sign out the current user.",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "ApiContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/ApiContextProvider.html#returns",
    "href": "docs/functions/ApiContextProvider.html#returns",
    "title": "ApiContextProvider()",
    "section": "Returns",
    "text": "Returns\nElement",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "ApiContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/ApiContextProvider.html#defined-in",
    "href": "docs/functions/ApiContextProvider.html#defined-in",
    "title": "ApiContextProvider()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/cotexts/ApiContextProvider.tsx:137",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "ApiContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html",
    "href": "docs/functions/CategoricalLegend.html",
    "title": "CategoricalLegend()",
    "section": "",
    "text": "@cori-risi/cori.data.api / CategoricalLegend",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "CategoricalLegend()"
    ]
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html#parameters",
    "href": "docs/functions/CategoricalLegend.html#parameters",
    "title": "CategoricalLegend()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.domain?: string[]\nd3 color scale domain\n• props.domain_names?: string[]\nan (array) of names, each one mapped to a category in the color scale domain\n• props.na_message?: string\n• props.range?: unknown[]\nd3 color scale range\n• props.scale?: any\n• props.title?: string",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "CategoricalLegend()"
    ]
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html#returns",
    "href": "docs/functions/CategoricalLegend.html#returns",
    "title": "CategoricalLegend()",
    "section": "Returns",
    "text": "Returns\nElement",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "CategoricalLegend()"
    ]
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html#defined-in",
    "href": "docs/functions/CategoricalLegend.html#defined-in",
    "title": "CategoricalLegend()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/components/CategoricalLegend.tsx:42",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "CategoricalLegend()"
    ]
  },
  {
    "objectID": "docs/functions/helloAnything.html",
    "href": "docs/functions/helloAnything.html",
    "title": "helloAnything()",
    "section": "",
    "text": "@cori-risi/cori.data.api / helloAnything"
  },
  {
    "objectID": "docs/functions/helloAnything.html#parameters",
    "href": "docs/functions/helloAnything.html#parameters",
    "title": "helloAnything()",
    "section": "Parameters",
    "text": "Parameters\n• thing: string"
  },
  {
    "objectID": "docs/functions/helloAnything.html#returns",
    "href": "docs/functions/helloAnything.html#returns",
    "title": "helloAnything()",
    "section": "Returns",
    "text": "Returns\nstring"
  },
  {
    "objectID": "docs/functions/helloAnything.html#defined-in",
    "href": "docs/functions/helloAnything.html#defined-in",
    "title": "helloAnything()",
    "section": "Defined in",
    "text": "Defined in\ncori.data.api.ts:5"
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html",
    "href": "docs/functions/AmplifyContextProvider.html",
    "title": "AmplifyContextProvider()",
    "section": "",
    "text": "@cori-risi/cori.data.api / AmplifyContextProvider",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "AmplifyContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html#parameters",
    "href": "docs/functions/AmplifyContextProvider.html#parameters",
    "title": "AmplifyContextProvider()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.children?: ReactElement&lt;any, string | JSXElementConstructor&lt;any&gt;&gt;\n• props.domain?: string\ns- domain for the Cognito Hosted UI and/or OAuth 2.0 endpoints\n• props.identityPoolId?: string\nCognito Identity pool ID\n• props.region?: string\nAWS region where Cognito service is hosted\n• props.userPoolClientId?: string\nACognito User pool App client ID (App clients are the user pool authentication resources attached to your app).\n• props.userPoolId?: string\nCognito User pool ID",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "AmplifyContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html#returns",
    "href": "docs/functions/AmplifyContextProvider.html#returns",
    "title": "AmplifyContextProvider()",
    "section": "Returns",
    "text": "Returns\nElement",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "AmplifyContextProvider()"
    ]
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html#defined-in",
    "href": "docs/functions/AmplifyContextProvider.html#defined-in",
    "title": "AmplifyContextProvider()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/cotexts/AmplifyContextProvider.tsx:73",
    "crumbs": [
      "Frontend UI library",
      "React contexts",
      "AmplifyContextProvider()"
    ]
  },
  {
    "objectID": "docs/variables/AmplifyContext.html",
    "href": "docs/variables/AmplifyContext.html",
    "title": "AmplifyContext",
    "section": "",
    "text": "@cori-risi/cori.data.api / AmplifyContext"
  },
  {
    "objectID": "docs/variables/AmplifyContext.html#defined-in",
    "href": "docs/variables/AmplifyContext.html#defined-in",
    "title": "AmplifyContext",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/cotexts/AmplifyContextProvider.tsx:43"
  },
  {
    "objectID": "docs/variables/coriLightMapStyle.html",
    "href": "docs/variables/coriLightMapStyle.html",
    "title": "coriLightMapStyle",
    "section": "",
    "text": "@cori-risi/cori.data.api / coriLightMapStyle",
    "crumbs": [
      "Frontend UI library",
      "Mapbox styles",
      "coriLightMapStyle"
    ]
  },
  {
    "objectID": "docs/variables/coriLightMapStyle.html#defined-in",
    "href": "docs/variables/coriLightMapStyle.html#defined-in",
    "title": "coriLightMapStyle",
    "section": "Defined in",
    "text": "Defined in\ncori.data.api.ts:27",
    "crumbs": [
      "Frontend UI library",
      "Mapbox styles",
      "coriLightMapStyle"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "@cori-risi/cori.data.api",
    "section": "",
    "text": "The Center on Rural Innovation (CORI) is a 501(c)(3) nonprofit organization partnering with rural leaders across the country to build tech economies that support scalable entrepreneurship and lead to more tech jobs in rural America.\nThese repositories are maintained by the Mapping and Data Analytics (MDA) team at CORI/RISI. Our team provides data, analytics and visualizations to support rural participation in the digital economy through scalable entrepreneurship and tech job growth in rural America. We aim to provide a better understanding of the forces and trends affecting rural America as we help communities chart a path to opportunity and prosperity through the tech economy.\nWe strive towards serving as the primary center of excellence advancing sustainable, economic opportunity and equity in rural America. We do this by providing expert spatial and statistical analysis, modernized visualization and tool development, credible technical subject matter expertise, and transparent documentation.\nFollow our work by reading our blog and reviewing the following list of past projects:\n\n\n\n\n\nBroadband - Broadband Equity Access and Deployment (BEAD) tool - Climate Risk Mapping\n\n\nResearch - Rural Aperture Project (RWJF) - Defining rural America - Who lives in rural America? Part 1 Part 2 - The equity of economic opportunity in rural America\n\n\n\n\nRural Innovation Network - Ascendium reports and data viz - Economic Development (ERC) tool\n\n\nRural Innovation Initiative - Tech Economy Diagnostic (TED)  (i.e., community assessment → ERC tool)\n\n\n\n\nTech Entrepreneurship  - Feasibility studies - Tech Talent Tracker → ERC tool\n\n\nAdditional work - Economic Development Administration (EDA) reports - Economic impact analysis - Multistate Workforce Analysis - example - Who Is Missing Analysis\n\n\n\nLearn more about the MDA approach to Knowledge here: Research, mapping, and data analytics"
  },
  {
    "objectID": "docs/globals.html#variables",
    "href": "docs/globals.html#variables",
    "title": "@cori-risi/cori.data.api",
    "section": "Variables",
    "text": "Variables\n\nAmplifyContext\nApiContext\ncoriLightMapStyle"
  },
  {
    "objectID": "docs/globals.html#functions",
    "href": "docs/globals.html#functions",
    "title": "@cori-risi/cori.data.api",
    "section": "Functions",
    "text": "Functions\n\nAmplifyContextProvider\nApiContextProvider\nButton\nCategoricalLegend\nGeocoderControl\nInput\nLabel\nhelloAnything"
  },
  {
    "objectID": "docs/variables/ApiContext.html",
    "href": "docs/variables/ApiContext.html",
    "title": "ApiContext",
    "section": "",
    "text": "@cori-risi/cori.data.api / ApiContext"
  },
  {
    "objectID": "docs/variables/ApiContext.html#defined-in",
    "href": "docs/variables/ApiContext.html#defined-in",
    "title": "ApiContext",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/cotexts/ApiContextProvider.tsx:88"
  },
  {
    "objectID": "docs/functions/GeocoderControl.html",
    "href": "docs/functions/GeocoderControl.html",
    "title": "GeocoderControl()",
    "section": "",
    "text": "@cori-risi/cori.data.api / GeocoderControl",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "GeocoderControl()"
    ]
  },
  {
    "objectID": "docs/functions/GeocoderControl.html#parameters",
    "href": "docs/functions/GeocoderControl.html#parameters",
    "title": "GeocoderControl()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.mapboxAccessToken: string\nMapbox API token\n• props.marker?: boolean | Omit&lt;MarkerProps, \"longitude\" | \"latitude\"&gt;\ntrue or false to place marker on result once selected (default: false)\n• props.position: ControlPosition\nCSS class to position control in “top-left”, “top-right”, “bottom-left” or “bottom-right” of the map pane",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "GeocoderControl()"
    ]
  },
  {
    "objectID": "docs/functions/GeocoderControl.html#returns",
    "href": "docs/functions/GeocoderControl.html#returns",
    "title": "GeocoderControl()",
    "section": "Returns",
    "text": "Returns\nnull",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "GeocoderControl()"
    ]
  },
  {
    "objectID": "docs/functions/GeocoderControl.html#defined-in",
    "href": "docs/functions/GeocoderControl.html#defined-in",
    "title": "GeocoderControl()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/components/GeocoderControl.tsx:47",
    "crumbs": [
      "Frontend UI library",
      "React components",
      "GeocoderControl()"
    ]
  },
  {
    "objectID": "docs/functions/Label.html",
    "href": "docs/functions/Label.html",
    "title": "Label()",
    "section": "",
    "text": "@cori-risi/cori.data.api / Label"
  },
  {
    "objectID": "docs/functions/Label.html#parameters",
    "href": "docs/functions/Label.html#parameters",
    "title": "Label()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.children?: ReactElement&lt;any, string | JSXElementConstructor&lt;any&gt;&gt;"
  },
  {
    "objectID": "docs/functions/Label.html#returns",
    "href": "docs/functions/Label.html#returns",
    "title": "Label()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/Label.html#defined-in",
    "href": "docs/functions/Label.html#defined-in",
    "title": "Label()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/components/basic.tsx:43"
  },
  {
    "objectID": "docs/functions/Input.html",
    "href": "docs/functions/Input.html",
    "title": "Input()",
    "section": "",
    "text": "@cori-risi/cori.data.api / Input"
  },
  {
    "objectID": "docs/functions/Input.html#parameters",
    "href": "docs/functions/Input.html#parameters",
    "title": "Input()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.checked: boolean\n• props.children?: ReactElement&lt;any, string | JSXElementConstructor&lt;any&gt;&gt;\n• props.onChange?: ChangeEventHandler&lt;HTMLInputElement&gt;\n• props.type: string"
  },
  {
    "objectID": "docs/functions/Input.html#returns",
    "href": "docs/functions/Input.html#returns",
    "title": "Input()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/Input.html#defined-in",
    "href": "docs/functions/Input.html#defined-in",
    "title": "Input()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/components/basic.tsx:31"
  },
  {
    "objectID": "docs/functions/Button.html",
    "href": "docs/functions/Button.html",
    "title": "Button()",
    "section": "",
    "text": "@cori-risi/cori.data.api / Button"
  },
  {
    "objectID": "docs/functions/Button.html#parameters",
    "href": "docs/functions/Button.html#parameters",
    "title": "Button()",
    "section": "Parameters",
    "text": "Parameters\n• props\n• props.children?: ReactElement&lt;any, string | JSXElementConstructor&lt;any&gt;&gt;\n• props.onClick"
  },
  {
    "objectID": "docs/functions/Button.html#returns",
    "href": "docs/functions/Button.html#returns",
    "title": "Button()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/Button.html#defined-in",
    "href": "docs/functions/Button.html#defined-in",
    "title": "Button()",
    "section": "Defined in",
    "text": "Defined in\n@cori-risi/components/basic.tsx:18"
  }
]