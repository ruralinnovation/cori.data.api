{"version":3,"file":"cori.data.api534.js","sources":["../../node_modules/arquero/src/engine/spread.js"],"sourcesContent":["import { aggregateGet } from './reduce/util';\nimport columnSet from '../table/column-set';\nimport NULL from '../util/null';\nimport toArray from '../util/to-array';\n\nexport default function(table, { names, exprs, ops = [] }, options = {}) {\n  if (names.length === 0) return table;\n\n  // ignore 'as' if there are multiple field names\n  const as = (names.length === 1 && options.as) || [];\n  const drop = options.drop == null ? true : !!options.drop;\n  const limit = options.limit == null\n    ? as.length || Infinity\n    : Math.max(1, +options.limit || 1);\n\n  const get = aggregateGet(table, ops, exprs);\n  const cols = columnSet();\n  const map = names.reduce((map, name, i) => map.set(name, i), new Map());\n\n  const add = (index, name) => {\n    const columns = spread(table, get[index], limit);\n    const n = columns.length;\n    for (let i = 0; i < n; ++i) {\n      cols.add(as[i] || `${name}_${i + 1}`, columns[i]);\n    }\n  };\n\n  table.columnNames().forEach(name => {\n    if (map.has(name)) {\n      if (!drop) cols.add(name, table.column(name));\n      add(map.get(name), name);\n      map.delete(name);\n    } else {\n      cols.add(name, table.column(name));\n    }\n  });\n\n  map.forEach(add);\n\n  return table.create(cols);\n}\n\nfunction spread(table, get, limit) {\n  const nrows = table.totalRows();\n  const columns = [];\n\n  table.scan((row, data) => {\n    const values = toArray(get(row, data));\n    const n = Math.min(values.length, limit);\n    while (columns.length < n) {\n      columns.push(Array(nrows).fill(NULL));\n    }\n    for (let i = 0; i < n; ++i) {\n      columns[i][row] = values[i];\n    }\n  });\n\n  return columns;\n}"],"names":["_spread","table","names","exprs","ops","options","as","drop","limit","get","aggregateGet","cols","columnSet","map","name","i","add","index","columns","spread","n","nrows","row","data","values","toArray","NULL"],"mappings":";;;;;;;;;;AAKe,SAAAA,EAASC,GAAO,EAAE,OAAAC,GAAO,OAAAC,GAAO,KAAAC,IAAM,GAAI,GAAEC,IAAU,IAAI;AACvE,MAAIH,EAAM,WAAW;AAAG,WAAOD;AAG/B,QAAMK,IAAMJ,EAAM,WAAW,KAAKG,EAAQ,MAAO,IAC3CE,IAAOF,EAAQ,QAAQ,OAAO,KAAO,CAAC,CAACA,EAAQ,MAC/CG,IAAQH,EAAQ,SAAS,OAC3BC,EAAG,UAAU,QACb,KAAK,IAAI,GAAG,CAACD,EAAQ,SAAS,CAAC,GAE7BI,IAAMC,EAAaT,GAAOG,GAAKD,CAAK,GACpCQ,IAAOC,KACPC,IAAMX,EAAM,OAAO,CAACW,GAAKC,GAAMC,MAAMF,EAAI,IAAIC,GAAMC,CAAC,GAAG,oBAAI,IAAK,CAAA,GAEhEC,IAAM,CAACC,GAAOH,MAAS;AAC3B,UAAMI,IAAUC,EAAOlB,GAAOQ,EAAIQ,CAAK,GAAGT,CAAK,GACzCY,IAAIF,EAAQ;AAClB,aAASH,IAAI,GAAGA,IAAIK,GAAG,EAAEL;AACvB,MAAAJ,EAAK,IAAIL,EAAGS,CAAC,KAAK,GAAGD,CAAI,IAAIC,IAAI,CAAC,IAAIG,EAAQH,CAAC,CAAC;AAAA,EAEtD;AAEE,SAAAd,EAAM,YAAW,EAAG,QAAQ,CAAAa,MAAQ;AAClC,IAAID,EAAI,IAAIC,CAAI,KACTP,KAAMI,EAAK,IAAIG,GAAMb,EAAM,OAAOa,CAAI,CAAC,GAC5CE,EAAIH,EAAI,IAAIC,CAAI,GAAGA,CAAI,GACvBD,EAAI,OAAOC,CAAI,KAEfH,EAAK,IAAIG,GAAMb,EAAM,OAAOa,CAAI,CAAC;AAAA,EAEvC,CAAG,GAEDD,EAAI,QAAQG,CAAG,GAERf,EAAM,OAAOU,CAAI;AAC1B;AAEA,SAASQ,EAAOlB,GAAOQ,GAAKD,GAAO;AACjC,QAAMa,IAAQpB,EAAM,aACdiB,IAAU,CAAA;AAEhB,SAAAjB,EAAM,KAAK,CAACqB,GAAKC,MAAS;AACxB,UAAMC,IAASC,EAAQhB,EAAIa,GAAKC,CAAI,CAAC,GAC/BH,IAAI,KAAK,IAAII,EAAO,QAAQhB,CAAK;AACvC,WAAOU,EAAQ,SAASE;AACtB,MAAAF,EAAQ,KAAK,MAAMG,CAAK,EAAE,KAAKK,CAAI,CAAC;AAEtC,aAASX,IAAI,GAAGA,IAAIK,GAAG,EAAEL;AACvB,MAAAG,EAAQH,CAAC,EAAEO,CAAG,IAAIE,EAAOT,CAAC;AAAA,EAEhC,CAAG,GAEMG;AACT;","x_google_ignoreList":[0]}