{"version":3,"file":"body-compression.js","sources":["../../../../../node_modules/apache-arrow/fb/body-compression.mjs"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { BodyCompressionMethod } from './body-compression-method.mjs';\nimport { CompressionType } from './compression-type.mjs';\n/**\n * Optional compression for the memory buffers constituting IPC message\n * bodies. Intended for use with RecordBatch but could be used for other\n * message types\n */\nexport class BodyCompression {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBodyCompression(bb, obj) {\n        return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBodyCompression(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Compressor library.\n     * For LZ4_FRAME, each compressed buffer must consist of a single frame.\n     */\n    codec() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : CompressionType.LZ4_FRAME;\n    }\n    /**\n     * Indicates the way the record batch body was compressed\n     */\n    method() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : BodyCompressionMethod.BUFFER;\n    }\n    static startBodyCompression(builder) {\n        builder.startObject(2);\n    }\n    static addCodec(builder, codec) {\n        builder.addFieldInt8(0, codec, CompressionType.LZ4_FRAME);\n    }\n    static addMethod(builder, method) {\n        builder.addFieldInt8(1, method, BodyCompressionMethod.BUFFER);\n    }\n    static endBodyCompression(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBodyCompression(builder, codec, method) {\n        BodyCompression.startBodyCompression(builder);\n        BodyCompression.addCodec(builder, codec);\n        BodyCompression.addMethod(builder, method);\n        return BodyCompression.endBodyCompression(builder);\n    }\n}\n\n//# sourceMappingURL=body-compression.mjs.map\n"],"names":["flatbuffers.SIZE_PREFIX_LENGTH"],"mappings":"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","x_google_ignoreList":[0]}