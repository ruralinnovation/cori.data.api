{"version":3,"file":"cori.data.api426.js","sources":["../../node_modules/arquero/src/op/functions/date.js"],"sourcesContent":["import { formatDate, formatUTCDate } from '../../util/format-date';\nimport parseIsoDate from '../../util/parse-iso-date';\n\nconst msMinute = 6e4;\nconst msDay = 864e5;\nconst msWeek = 6048e5;\n\nconst t0 = new Date();\nconst t1 = new Date();\nconst t = d => (\n  t0.setTime(typeof d === 'string' ? parseIsoDate(d) : d),\n  t0\n);\n\n/**\n * Function to create a new Date value.\n * If no arguments are provided, the current time is used.\n * @param {number} [year] The year.\n * @param {number} [month=0] The (zero-based) month.\n * @param {number} [date=1] The date within the month.\n * @param {number} [hours=0] The hour within the day.\n * @param {number} [minutes=0] The minute within the hour.\n * @param {number} [seconds=0] The second within the minute.\n * @param {number} [milliseconds=0] The milliseconds within the second.\n * @return {date} The resuting Date value.\n */\nfunction datetime(year, month, date, hours, minutes, seconds, milliseconds) {\n  return !arguments.length\n    ? new Date(Date.now())\n    : new Date(\n        year,\n        month || 0,\n        date == null ? 1 : date,\n        hours || 0,\n        minutes || 0,\n        seconds || 0,\n        milliseconds || 0\n      );\n}\n\n/**\n * Function to create a new Date value according to UTC time.\n * If no arguments are provided, the current time is used.\n * @param {number} [year] The year.\n * @param {number} [month=0] The (zero-based) month.\n * @param {number} [date=1] The date within the month.\n * @param {number} [hours=0] The hour within the day.\n * @param {number} [minutes=0] The minute within the hour.\n * @param {number} [seconds=0] The second within the minute.\n * @param {number} [milliseconds=0] The milliseconds within the second.\n * @return {date} The resuting Date value.\n */\nfunction utcdatetime(year, month, date, hours, minutes, seconds, milliseconds) {\n  return !arguments.length\n    ? new Date(Date.now())\n    : new Date(Date.UTC(\n        year,\n        month || 0,\n        date == null ? 1 : date,\n        hours || 0,\n        minutes || 0,\n        seconds || 0,\n        milliseconds || 0\n      ));\n}\n\nfunction dayofyear(date) {\n  t1.setTime(+date);\n  t1.setHours(0, 0, 0, 0);\n  t0.setTime(+t1);\n  t0.setMonth(0);\n  t0.setDate(1);\n  const tz = (t1.getTimezoneOffset() - t0.getTimezoneOffset()) * msMinute;\n  return Math.floor(1 + ((t1 - t0) - tz) / msDay);\n}\n\nfunction utcdayofyear(date) {\n  t1.setTime(+date);\n  t1.setUTCHours(0, 0, 0, 0);\n  const t0 = Date.UTC(t1.getUTCFullYear(), 0, 1);\n  return Math.floor(1 + (t1 - t0) / msDay);\n}\n\nfunction week(date, firstday) {\n  const i = firstday || 0;\n  t1.setTime(+date);\n  t1.setDate(t1.getDate() - (t1.getDay() + 7 - i) % 7);\n  t1.setHours(0, 0, 0, 0);\n  t0.setTime(+date);\n  t0.setMonth(0);\n  t0.setDate(1);\n  t0.setDate(1 - (t0.getDay() + 7 - i) % 7);\n  t0.setHours(0, 0, 0, 0);\n  const tz = (t1.getTimezoneOffset() - t0.getTimezoneOffset()) * msMinute;\n  return Math.floor((1 + (t1 - t0) - tz) / msWeek);\n}\n\nfunction utcweek(date, firstday) {\n  const i = firstday || 0;\n  t1.setTime(+date);\n  t1.setUTCDate(t1.getUTCDate() - (t1.getUTCDay() + 7 - i) % 7);\n  t1.setUTCHours(0, 0, 0, 0);\n  t0.setTime(+date);\n  t0.setUTCMonth(0);\n  t0.setUTCDate(1);\n  t0.setUTCDate(1 - (t0.getUTCDay() + 7 - i) % 7);\n  t0.setUTCHours(0, 0, 0, 0);\n  return Math.floor((1 + (t1 - t0)) / msWeek);\n}\n\nexport default {\n  format_date:     (date, shorten) => formatDate(t(date), !shorten),\n  format_utcdate:  (date, shorten) => formatUTCDate(t(date), !shorten),\n  timestamp:       (date) => +t(date),\n  year:            (date) => t(date).getFullYear(),\n  quarter:         (date) => Math.floor(t(date).getMonth() / 3),\n  month:           (date) => t(date).getMonth(),\n  date:            (date) => t(date).getDate(),\n  dayofweek:       (date) => t(date).getDay(),\n  hours:           (date) => t(date).getHours(),\n  minutes:         (date) => t(date).getMinutes(),\n  seconds:         (date) => t(date).getSeconds(),\n  milliseconds:    (date) => t(date).getMilliseconds(),\n  utcyear:         (date) => t(date).getUTCFullYear(),\n  utcquarter:      (date) => Math.floor(t(date).getUTCMonth() / 3),\n  utcmonth:        (date) => t(date).getUTCMonth(),\n  utcdate:         (date) => t(date).getUTCDate(),\n  utcdayofweek:    (date) => t(date).getUTCDay(),\n  utchours:        (date) => t(date).getUTCHours(),\n  utcminutes:      (date) => t(date).getUTCMinutes(),\n  utcseconds:      (date) => t(date).getUTCSeconds(),\n  utcmilliseconds: (date) => t(date).getUTCMilliseconds(),\n  datetime,\n  dayofyear,\n  week,\n  utcdatetime,\n  utcdayofyear,\n  utcweek,\n  now: Date.now\n};"],"names":["msMinute","msDay","msWeek","t0","t1","t","d","parseIsoDate","datetime","year","month","date","hours","minutes","seconds","milliseconds","utcdatetime","dayofyear","tz","utcdayofyear","week","firstday","i","utcweek","shorten","formatDate","formatUTCDate"],"mappings":"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","x_google_ignoreList":[0]}