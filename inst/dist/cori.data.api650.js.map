{"version":3,"file":"cori.data.api650.js","sources":["../../node_modules/arquero/src/engine/window/window-state.js"],"sourcesContent":["import ascending from '../../util/ascending';\nimport bisector from '../../util/bisector';\nimport concat from '../../util/concat';\nimport unroll from '../../util/unroll';\n\nconst bisect = bisector(ascending);\n\nexport default function(data, frame, adjust, ops, aggrs) {\n  let rows, peer, cells, result, key;\n  const isPeer = index => peer[index - 1] === peer[index];\n  const numOps = ops.length;\n  const numAgg = aggrs.length;\n\n  const evaluate = ops.length\n    ? unroll(\n        ['w', 'r', 'k'],\n        '{' + concat(ops, (_, i) => `r[_${i}.id][k]=_${i}.value(w,_${i}.get);`) + '}',\n        ops\n      )\n    : () => {};\n\n  const w = {\n    i0: 0,\n    i1: 0,\n    index: 0,\n    size: 0,\n    peer: isPeer,\n\n    init(partition, peers, results, group) {\n      w.index = w.i0 = w.i1 = 0;\n      w.size = peers.length;\n      rows = partition;\n      peer = peers;\n      result = results;\n      key = group;\n\n      // initialize aggregates\n      cells = aggrs ? aggrs.map(aggr => aggr.init()) : null;\n\n      // initialize window ops\n      for (let i = 0; i < numOps; ++i) {\n        ops[i].init();\n      }\n\n      return w;\n    },\n\n    value(index, get) {\n      return get(rows[index], data);\n    },\n\n    step(idx) {\n      const [f0, f1] = frame;\n      const n = w.size;\n      const p0 = w.i0;\n      const p1 = w.i1;\n\n      w.i0 = f0 != null ? Math.max(0, idx - Math.abs(f0)) : 0;\n      w.i1 = f1 != null ? Math.min(n, idx + Math.abs(f1) + 1) : n;\n      w.index = idx;\n\n      if (adjust) {\n        if (w.i0 > 0 && isPeer(w.i0)) {\n          w.i0 = bisect.left(peer, peer[w.i0]);\n        }\n        if (w.i1 < n && isPeer(w.i1)) {\n          w.i1 = bisect.right(peer, peer[w.i1 - 1]);\n        }\n      }\n\n      // evaluate aggregates\n      for (let i = 0; i < numAgg; ++i) {\n        const aggr = aggrs[i];\n        const cell = cells[i];\n        for (let j = p0; j < w.i0; ++j) {\n          aggr.rem(cell, rows[j], data);\n        }\n        for (let j = p1; j < w.i1; ++j) {\n          aggr.add(cell, rows[j], data);\n        }\n        aggr.write(cell, result, key);\n      }\n\n      // evaluate window ops\n      evaluate(w, result, key);\n\n      return result;\n    }\n  };\n\n  return w;\n}"],"names":["bisect","bisector","ascending","windowState","data","frame","adjust","ops","aggrs","rows","peer","cells","result","key","isPeer","index","numOps","numAgg","evaluate","unroll","concat","_","i","w","partition","peers","results","group","aggr","get","idx","f0","f1","n","p0","p1","cell","j"],"mappings":";;;;;;;;;;AAKA,MAAMA,IAASC,EAASC,CAAS;AAElB,SAAQC,EAACC,GAAMC,GAAOC,GAAQC,GAAKC,GAAO;AACvD,MAAIC,GAAMC,GAAMC,GAAOC,GAAQC;AAC/B,QAAMC,IAAS,CAAAC,MAASL,EAAKK,IAAQ,CAAC,MAAML,EAAKK,CAAK,GAChDC,IAAST,EAAI,QACbU,IAAST,EAAM,QAEfU,IAAWX,EAAI,SACjBY;AAAA,IACE,CAAC,KAAK,KAAK,GAAG;AAAA,IACd,MAAMC,EAAOb,GAAK,CAACc,GAAGC,MAAM,MAAMA,CAAC,YAAYA,CAAC,aAAaA,CAAC,QAAQ,IAAI;AAAA,IAC1Ef;AAAA,EACD,IACD,MAAM;AAAA,KAEJgB,IAAI;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMT;AAAA,IAEN,KAAKU,GAAWC,GAAOC,GAASC,GAAO;AACrC,MAAAJ,EAAE,QAAQA,EAAE,KAAKA,EAAE,KAAK,GACxBA,EAAE,OAAOE,EAAM,QACfhB,IAAOe,GACPd,IAAOe,GACPb,IAASc,GACTb,IAAMc,GAGNhB,IAAQH,IAAQA,EAAM,IAAI,CAAAoB,MAAQA,EAAK,MAAM,IAAI;AAGjD,eAASN,IAAI,GAAGA,IAAIN,GAAQ,EAAEM;AAC5B,QAAAf,EAAIe,CAAC,EAAE;AAGT,aAAOC;AAAA,IACR;AAAA,IAED,MAAMR,GAAOc,GAAK;AAChB,aAAOA,EAAIpB,EAAKM,CAAK,GAAGX,CAAI;AAAA,IAC7B;AAAA,IAED,KAAK0B,GAAK;AACR,YAAM,CAACC,GAAIC,CAAE,IAAI3B,GACX4B,IAAIV,EAAE,MACNW,IAAKX,EAAE,IACPY,IAAKZ,EAAE;AAEb,MAAAA,EAAE,KAAKQ,KAAM,OAAO,KAAK,IAAI,GAAGD,IAAM,KAAK,IAAIC,CAAE,CAAC,IAAI,GACtDR,EAAE,KAAKS,KAAM,OAAO,KAAK,IAAIC,GAAGH,IAAM,KAAK,IAAIE,CAAE,IAAI,CAAC,IAAIC,GAC1DV,EAAE,QAAQO,GAENxB,MACEiB,EAAE,KAAK,KAAKT,EAAOS,EAAE,EAAE,MACzBA,EAAE,KAAKvB,EAAO,KAAKU,GAAMA,EAAKa,EAAE,EAAE,CAAC,IAEjCA,EAAE,KAAKU,KAAKnB,EAAOS,EAAE,EAAE,MACzBA,EAAE,KAAKvB,EAAO,MAAMU,GAAMA,EAAKa,EAAE,KAAK,CAAC,CAAC;AAK5C,eAASD,IAAI,GAAGA,IAAIL,GAAQ,EAAEK,GAAG;AAC/B,cAAMM,IAAOpB,EAAMc,CAAC,GACdc,IAAOzB,EAAMW,CAAC;AACpB,iBAASe,IAAIH,GAAIG,IAAId,EAAE,IAAI,EAAEc;AAC3B,UAAAT,EAAK,IAAIQ,GAAM3B,EAAK4B,CAAC,GAAGjC,CAAI;AAE9B,iBAASiC,IAAIF,GAAIE,IAAId,EAAE,IAAI,EAAEc;AAC3B,UAAAT,EAAK,IAAIQ,GAAM3B,EAAK4B,CAAC,GAAGjC,CAAI;AAE9B,QAAAwB,EAAK,MAAMQ,GAAMxB,GAAQC,CAAG;AAAA,MAC7B;AAGD,aAAAK,EAASK,GAAGX,GAAQC,CAAG,GAEhBD;AAAA,IACR;AAAA,EACL;AAEE,SAAOW;AACT;","x_google_ignoreList":[0]}