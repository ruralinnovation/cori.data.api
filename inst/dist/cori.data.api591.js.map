{"version":3,"file":"cori.data.api591.js","sources":["../../node_modules/apache-arrow/fb/type.mjs"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\nimport { Binary } from './binary.mjs';\nimport { Bool } from './bool.mjs';\nimport { Date } from './date.mjs';\nimport { Decimal } from './decimal.mjs';\nimport { Duration } from './duration.mjs';\nimport { FixedSizeBinary } from './fixed-size-binary.mjs';\nimport { FixedSizeList } from './fixed-size-list.mjs';\nimport { FloatingPoint } from './floating-point.mjs';\nimport { Int } from './int.mjs';\nimport { Interval } from './interval.mjs';\nimport { LargeBinary } from './large-binary.mjs';\nimport { LargeList } from './large-list.mjs';\nimport { LargeUtf8 } from './large-utf8.mjs';\nimport { List } from './list.mjs';\nimport { Map } from './map.mjs';\nimport { Null } from './null.mjs';\nimport { RunEndEncoded } from './run-end-encoded.mjs';\nimport { Struct_ } from './struct-.mjs';\nimport { Time } from './time.mjs';\nimport { Timestamp } from './timestamp.mjs';\nimport { Union } from './union.mjs';\nimport { Utf8 } from './utf8.mjs';\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n */\nexport var Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Duration\"] = 18] = \"Duration\";\n    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n    Type[Type[\"RunEndEncoded\"] = 22] = \"RunEndEncoded\";\n})(Type || (Type = {}));\nexport function unionToType(type, accessor) {\n    switch (Type[type]) {\n        case 'NONE': return null;\n        case 'Null': return accessor(new Null());\n        case 'Int': return accessor(new Int());\n        case 'FloatingPoint': return accessor(new FloatingPoint());\n        case 'Binary': return accessor(new Binary());\n        case 'Utf8': return accessor(new Utf8());\n        case 'Bool': return accessor(new Bool());\n        case 'Decimal': return accessor(new Decimal());\n        case 'Date': return accessor(new Date());\n        case 'Time': return accessor(new Time());\n        case 'Timestamp': return accessor(new Timestamp());\n        case 'Interval': return accessor(new Interval());\n        case 'List': return accessor(new List());\n        case 'Struct_': return accessor(new Struct_());\n        case 'Union': return accessor(new Union());\n        case 'FixedSizeBinary': return accessor(new FixedSizeBinary());\n        case 'FixedSizeList': return accessor(new FixedSizeList());\n        case 'Map': return accessor(new Map());\n        case 'Duration': return accessor(new Duration());\n        case 'LargeBinary': return accessor(new LargeBinary());\n        case 'LargeUtf8': return accessor(new LargeUtf8());\n        case 'LargeList': return accessor(new LargeList());\n        case 'RunEndEncoded': return accessor(new RunEndEncoded());\n        default: return null;\n    }\n}\nexport function unionListToType(type, accessor, index) {\n    switch (Type[type]) {\n        case 'NONE': return null;\n        case 'Null': return accessor(index, new Null());\n        case 'Int': return accessor(index, new Int());\n        case 'FloatingPoint': return accessor(index, new FloatingPoint());\n        case 'Binary': return accessor(index, new Binary());\n        case 'Utf8': return accessor(index, new Utf8());\n        case 'Bool': return accessor(index, new Bool());\n        case 'Decimal': return accessor(index, new Decimal());\n        case 'Date': return accessor(index, new Date());\n        case 'Time': return accessor(index, new Time());\n        case 'Timestamp': return accessor(index, new Timestamp());\n        case 'Interval': return accessor(index, new Interval());\n        case 'List': return accessor(index, new List());\n        case 'Struct_': return accessor(index, new Struct_());\n        case 'Union': return accessor(index, new Union());\n        case 'FixedSizeBinary': return accessor(index, new FixedSizeBinary());\n        case 'FixedSizeList': return accessor(index, new FixedSizeList());\n        case 'Map': return accessor(index, new Map());\n        case 'Duration': return accessor(index, new Duration());\n        case 'LargeBinary': return accessor(index, new LargeBinary());\n        case 'LargeUtf8': return accessor(index, new LargeUtf8());\n        case 'LargeList': return accessor(index, new LargeList());\n        case 'RunEndEncoded': return accessor(index, new RunEndEncoded());\n        default: return null;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n"],"names":["Type"],"mappings":";;;;;;AA4BU,IAACA;AAAA,CACV,SAAUA,GAAM;AACb,EAAAA,EAAKA,EAAK,OAAU,CAAC,IAAI,QACzBA,EAAKA,EAAK,OAAU,CAAC,IAAI,QACzBA,EAAKA,EAAK,MAAS,CAAC,IAAI,OACxBA,EAAKA,EAAK,gBAAmB,CAAC,IAAI,iBAClCA,EAAKA,EAAK,SAAY,CAAC,IAAI,UAC3BA,EAAKA,EAAK,OAAU,CAAC,IAAI,QACzBA,EAAKA,EAAK,OAAU,CAAC,IAAI,QACzBA,EAAKA,EAAK,UAAa,CAAC,IAAI,WAC5BA,EAAKA,EAAK,OAAU,CAAC,IAAI,QACzBA,EAAKA,EAAK,OAAU,CAAC,IAAI,QACzBA,EAAKA,EAAK,YAAe,EAAE,IAAI,aAC/BA,EAAKA,EAAK,WAAc,EAAE,IAAI,YAC9BA,EAAKA,EAAK,OAAU,EAAE,IAAI,QAC1BA,EAAKA,EAAK,UAAa,EAAE,IAAI,WAC7BA,EAAKA,EAAK,QAAW,EAAE,IAAI,SAC3BA,EAAKA,EAAK,kBAAqB,EAAE,IAAI,mBACrCA,EAAKA,EAAK,gBAAmB,EAAE,IAAI,iBACnCA,EAAKA,EAAK,MAAS,EAAE,IAAI,OACzBA,EAAKA,EAAK,WAAc,EAAE,IAAI,YAC9BA,EAAKA,EAAK,cAAiB,EAAE,IAAI,eACjCA,EAAKA,EAAK,YAAe,EAAE,IAAI,aAC/BA,EAAKA,EAAK,YAAe,EAAE,IAAI,aAC/BA,EAAKA,EAAK,gBAAmB,EAAE,IAAI;AACvC,GAAGA,MAASA,IAAO,CAAA,EAAG;","x_google_ignoreList":[0]}