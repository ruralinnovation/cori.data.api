{"version":3,"file":"cori.data.api316.js","sources":["../../node_modules/arquero/src/query/util.js"],"sourcesContent":["import desc from '../helpers/desc';\nimport field from '../helpers/field';\nimport rolling from '../helpers/rolling';\nimport { all, matches, not, range } from '../helpers/selection';\nimport Query from './query';\nimport error from '../util/error';\nimport isArray from '../util/is-array';\nimport isFunction from '../util/is-function';\nimport isNumber from '../util/is-number';\nimport isObject from '../util/is-object';\nimport isString from '../util/is-string';\nimport map from '../util/map-object';\nimport toArray from '../util/to-array';\n\nfunction func(expr) {\n  const f = d => d;\n  f.toString = () => expr;\n  return f;\n}\n\nexport function getTable(catalog, ref) {\n  ref = ref && isFunction(ref.query) ? ref.query() : ref;\n  return ref && isFunction(ref.evaluate)\n    ? ref.evaluate(null, catalog)\n    : catalog(ref);\n}\n\nexport function isSelection(value) {\n  return isObject(value) && (\n    isArray(value.all) ||\n    isArray(value.matches) ||\n    isArray(value.not) ||\n    isArray(value.range)\n  );\n}\n\nexport function toObject(value) {\n  return value && isFunction(value.toObject) ? value.toObject()\n    : isFunction(value) ? { expr: String(value), func: true }\n    : isArray(value) ? value.map(toObject)\n    : isObject(value) ? map(value, _ => toObject(_))\n    : value;\n}\n\nexport function fromObject(value) {\n  return isArray(value) ? value.map(fromObject)\n    : !isObject(value) ? value\n    : isArray(value.verbs) ? Query.from(value)\n    : isArray(value.all) ? all()\n    : isArray(value.range) ? range(...value.range)\n    : isArray(value.match) ? matches(RegExp(...value.match))\n    : isArray(value.not) ? not(value.not.map(toObject))\n    : fromExprObject(value);\n}\n\nfunction fromExprObject(value) {\n  let output = value;\n  let expr = value.expr;\n\n  if (expr != null) {\n    if (value.field === true) {\n      output = expr = field(expr);\n    } else if (value.func === true) {\n      output = expr = func(expr);\n    }\n\n    if (isObject(value.window)) {\n      const { frame, peers } = value.window;\n      output = expr = rolling(expr, frame, peers);\n    }\n\n    if (value.desc === true) {\n      output = desc(expr);\n    }\n  }\n\n  return value === output\n    ? map(value, _ => fromObject(_))\n    : output;\n}\n\nexport function joinKeys(keys) {\n  return isArray(keys) ? keys.map(parseJoinKeys)\n    : keys;\n}\n\nfunction parseJoinKeys(keys) {\n  const list = [];\n\n  toArray(keys).forEach(param => {\n    isNumber(param) ? list.push(param)\n      : isString(param) ? list.push(field(param, null))\n      : isObject(param) && param.expr ? list.push(param)\n      : isFunction(param) ? list.push(param)\n      : error(`Invalid key value: ${param+''}`);\n  });\n\n  return list;\n}\n\nexport function joinValues(values) {\n  return isArray(values)\n    ? values.map(parseJoinValues)\n    : values;\n}\n\nfunction parseJoinValues(values, index) {\n  return index < 2 ? toArray(values) : values;\n}\n\nexport function orderbyKeys(keys) {\n  const list = [];\n\n  keys.forEach(param => {\n    const expr = param.expr != null ? param.expr : param;\n    if (isObject(expr) && !isFunction(expr)) {\n      for (const key in expr) {\n        list.push(expr[key]);\n      }\n    } else {\n      param = isNumber(expr) ? expr\n        : isString(expr) ? field(param)\n        : isFunction(expr) ? param\n        : error(`Invalid orderby field: ${param+''}`);\n      list.push(param);\n    }\n  });\n\n  return list;\n}"],"names":["func","expr","f","d","getTable","catalog","ref","isFunction","isSelection","value","isObject","isArray","toObject","map","_","fromObject","Query","all","range","matches","not","fromExprObject","output","field","frame","peers","rolling","desc","joinKeys","keys","parseJoinKeys","list","toArray","param","isNumber","isString","error","joinValues","values","parseJoinValues","index","orderbyKeys","key"],"mappings":"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","x_google_ignoreList":[0]}