{"version":3,"file":"cori.data.api17.js","sources":["../../node_modules/d3-scale/src/linear.js"],"sourcesContent":["import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"names":["linearish","scale","domain","count","d","ticks","specifier","tickFormat","i0","i1","start","stop","prestep","step","maxIter","tickIncrement","linear","continuous","copy","initRange"],"mappings":";;;;;;;;;;AAKO,SAASA,EAAUC,GAAO;AAC/B,MAAIC,IAASD,EAAM;AAEnB,SAAAA,EAAM,QAAQ,SAASE,GAAO;AAC5B,QAAIC,IAAIF;AACR,WAAOG,EAAMD,EAAE,CAAC,GAAGA,EAAEA,EAAE,SAAS,CAAC,GAAGD,KAAgB,EAAU;AAAA,EAClE,GAEEF,EAAM,aAAa,SAASE,GAAOG,GAAW;AAC5C,QAAIF,IAAIF;AACR,WAAOK,EAAWH,EAAE,CAAC,GAAGA,EAAEA,EAAE,SAAS,CAAC,GAAGD,KAAgB,IAAYG,CAAS;AAAA,EAClF,GAEEL,EAAM,OAAO,SAASE,GAAO;AAC3B,IAAIA,KAAS,SAAMA,IAAQ;AAE3B,QAAIC,IAAIF,KACJM,IAAK,GACLC,IAAKL,EAAE,SAAS,GAChBM,IAAQN,EAAEI,CAAE,GACZG,IAAOP,EAAEK,CAAE,GACXG,GACAC,GACAC,IAAU;AAOd,SALIH,IAAOD,MACTG,IAAOH,GAAOA,IAAQC,GAAMA,IAAOE,GACnCA,IAAOL,GAAIA,IAAKC,GAAIA,IAAKI,IAGpBC,MAAY,KAAG;AAEpB,UADAD,IAAOE,EAAcL,GAAOC,GAAMR,CAAK,GACnCU,MAASD;AACX,eAAAR,EAAEI,CAAE,IAAIE,GACRN,EAAEK,CAAE,IAAIE,GACDT,EAAOE,CAAC;AACV,UAAIS,IAAO;AAChB,QAAAH,IAAQ,KAAK,MAAMA,IAAQG,CAAI,IAAIA,GACnCF,IAAO,KAAK,KAAKA,IAAOE,CAAI,IAAIA;AAAA,eACvBA,IAAO;AAChB,QAAAH,IAAQ,KAAK,KAAKA,IAAQG,CAAI,IAAIA,GAClCF,IAAO,KAAK,MAAMA,IAAOE,CAAI,IAAIA;AAAA;AAEjC;AAEF,MAAAD,IAAUC;AAAA,IACX;AAED,WAAOZ;AAAA,EACX,GAESA;AACT;AAEe,SAASe,IAAS;AAC/B,MAAIf,IAAQgB;AAEZ,SAAAhB,EAAM,OAAO,WAAW;AACtB,WAAOiB,EAAKjB,GAAOe,EAAM,CAAE;AAAA,EAC/B,GAEEG,EAAU,MAAMlB,GAAO,SAAS,GAEzBD,EAAUC,CAAK;AACxB;","x_google_ignoreList":[0]}