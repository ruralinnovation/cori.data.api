{"version":3,"file":"parse-key.js","sources":["../../../../../../../node_modules/arquero/src/verbs/util/parse-key.js"],"sourcesContent":["import parse from '../../expression/parse';\nimport field from '../../helpers/field';\nimport error from '../../util/error';\nimport isFunction from '../../util/is-function';\nimport isNumber from '../../util/is-number';\nimport isObject from '../../util/is-object';\nimport isString from '../../util/is-string';\nimport keyFunction from '../../util/key-function';\nimport toArray from '../../util/to-array';\n\nexport default function(name, table, params) {\n  const exprs = new Map();\n\n  toArray(params).forEach((param, i) => {\n    param = isNumber(param) ? table.columnName(param) : param;\n    isString(param) ? exprs.set(i, field(param))\n      : isFunction(param) || isObject(param) && param.expr ? exprs.set(i, param)\n      : error(`Invalid ${name} key value: ${param+''}`);\n  });\n\n  const fn = parse(exprs, { table, aggregate: false, window: false });\n  return keyFunction(fn.exprs, true);\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAUe,iBAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7C,EAAE,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B;AACA,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK;AACxC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AAC9D,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAChD,QAAQ,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;AAChF,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxD,GAAG,CAAC,CAAC;AACL;AACA,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AACtE,EAAE,OAAO,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACrC;;;;","x_google_ignoreList":[0]}