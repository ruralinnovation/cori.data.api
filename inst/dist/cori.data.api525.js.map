{"version":3,"file":"cori.data.api525.js","sources":["../../node_modules/arquero/src/verbs/util/parse.js"],"sourcesContent":["import parse from '../../expression/parse';\nimport field from '../../helpers/field';\nimport resolve from '../../helpers/selection';\nimport assign from '../../util/assign';\nimport error from '../../util/error';\nimport isNumber from '../../util/is-number';\nimport isObject from '../../util/is-object';\nimport isString from '../../util/is-string';\nimport isFunction from '../../util/is-function';\nimport toArray from '../../util/to-array';\n\nexport default function(name, table, params, options = { window: false }) {\n  const exprs = new Map();\n\n  const marshal = param => {\n    param = isNumber(param) ? table.columnName(param) : param;\n    isString(param) ? exprs.set(param, field(param))\n      : isFunction(param) ? resolve(table, param).forEach(marshal)\n      : isObject(param) ? assign(exprs, param)\n      : error(`Invalid ${name} value: ${param+''}`);\n  };\n\n  toArray(params).forEach(marshal);\n\n  if (options.preparse) {\n    options.preparse(exprs);\n  }\n\n  return parse(exprs, { table, ...options });\n}"],"names":["parse","name","table","params","options","exprs","marshal","param","isNumber","isString","field","isFunction","resolve","isObject","assign","error","toArray"],"mappings":";;;;;;;;;;;;;;;;AAWe,SAAAA,EAASC,GAAMC,GAAOC,GAAQC,IAAU,EAAE,QAAQ,MAAS;AACxE,QAAMC,IAAQ,oBAAI,OAEZC,IAAU,CAAAC,MAAS;AACvB,IAAAA,IAAQC,EAASD,CAAK,IAAIL,EAAM,WAAWK,CAAK,IAAIA,GACpDE,EAASF,CAAK,IAAIF,EAAM,IAAIE,GAAOG,EAAMH,CAAK,CAAC,IAC3CI,EAAWJ,CAAK,IAAIK,EAAQV,GAAOK,CAAK,EAAE,QAAQD,CAAO,IACzDO,EAASN,CAAK,IAAIO,EAAOT,GAAOE,CAAK,IACrCQ,EAAM,WAAWd,CAAI,WAAWM,IAAM,EAAE,EAAE;AAAA,EAClD;AAEE,SAAAS,EAAQb,CAAM,EAAE,QAAQG,CAAO,GAE3BF,EAAQ,YACVA,EAAQ,SAASC,CAAK,GAGjBL,EAAMK,GAAO,EAAE,OAAAH,GAAO,GAAGE,EAAS,CAAA;AAC3C;","x_google_ignoreList":[0]}