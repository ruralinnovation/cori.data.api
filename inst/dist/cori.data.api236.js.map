{"version":3,"file":"cori.data.api236.js","sources":["../../node_modules/arquero/src/op/functions/sequence.js"],"sourcesContent":["/**\n * Returns an array containing an arithmetic sequence from the start value\n * to the stop value, in step increments. If step is positive, the last\n * element is the largest start + i * step less than stop; if step is\n * negative, the last element is the smallest start + i * step greater\n * than stop. If the returned array would contain an infinite number of\n * values, an empty range is returned.\n * @param {number} [start=0] The starting value of the sequence.\n * @param {number} [stop] The stopping value of the sequence.\n *  The stop value is exclusive; it is not included in the result.\n * @param {number} [step=1] The step increment between sequence values.\n * @return {number[]} The generated sequence.\n */\nexport default function(start, stop, step) {\n  let n = arguments.length;\n  start = +start;\n  stop = +stop;\n  step = n < 2\n    ? (stop = start, start = 0, 1)\n    : n < 3 ? 1 : +step;\n\n  n = Math.max(0, Math.ceil((stop - start) / step)) | 0;\n  const seq = new Array(n);\n\n  for (let i = 0; i < n; ++i) {\n    seq[i] = start + i * step;\n  }\n\n  return seq;\n}"],"names":["sequence","start","stop","step","seq","i"],"mappings":";;;;;;AAae,SAAAA,EAASC,GAAOC,GAAMC,GAAM;AACzC,MAAI,IAAI,UAAU;AAClB,EAAAF,IAAQ,CAACA,GACTC,IAAO,CAACA,GACRC,IAAO,IAAI,KACND,IAAOD,GAAOA,IAAQ,GAAG,KAC1B,IAAI,IAAI,IAAI,CAACE,GAEjB,IAAI,KAAK,IAAI,GAAG,KAAK,MAAMD,IAAOD,KAASE,CAAI,CAAC,IAAI;AACpD,QAAMC,IAAM,IAAI,MAAM,CAAC;AAEvB,WAASC,IAAI,GAAGA,IAAI,GAAG,EAAEA;AACvB,IAAAD,EAAIC,CAAC,IAAIJ,IAAQI,IAAIF;AAGvB,SAAOC;AACT;","x_google_ignoreList":[0]}