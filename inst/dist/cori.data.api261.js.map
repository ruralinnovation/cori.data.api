{"version":3,"file":"cori.data.api261.js","sources":["../../node_modules/d3-format/src/formatDecimal.js"],"sourcesContent":["export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, Â±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n"],"names":["formatDecimal","x","formatDecimalParts","p","i","coefficient"],"mappings":";;;;;;AAAe,SAAQA,EAACC,GAAG;AACzB,SAAO,KAAK,IAAIA,IAAI,KAAK,MAAMA,CAAC,CAAC,KAAK,OAChCA,EAAE,eAAe,IAAI,EAAE,QAAQ,MAAM,EAAE,IACvCA,EAAE,SAAS,EAAE;AACrB;AAKO,SAASC,EAAmBD,GAAGE,GAAG;AACvC,OAAKC,KAAKH,IAAIE,IAAIF,EAAE,cAAcE,IAAI,CAAC,IAAIF,EAAE,cAAa,GAAI,QAAQ,GAAG,KAAK;AAAG,WAAO;AACxF,MAAIG,GAAGC,IAAcJ,EAAE,MAAM,GAAGG,CAAC;AAIjC,SAAO;AAAA,IACLC,EAAY,SAAS,IAAIA,EAAY,CAAC,IAAIA,EAAY,MAAM,CAAC,IAAIA;AAAA,IACjE,CAACJ,EAAE,MAAMG,IAAI,CAAC;AAAA,EAClB;AACA;","x_google_ignoreList":[0]}