{"version":3,"file":"cori.data.api611.js","sources":["../../node_modules/arquero/src/engine/window/window.js"],"sourcesContent":["import { reducers } from '../reduce/util';\nimport { getWindow, hasAggregate } from '../../op';\nimport concat from '../../util/concat';\nimport unroll from '../../util/unroll';\nimport windowState from './window-state';\n\nconst frameValue = op =>\n  (op.frame || [null, null]).map(v => Number.isFinite(v) ? Math.abs(v) : null);\n\nconst peersValue = op => !!op.peers;\n\nfunction windowOp(spec) {\n  const { id, name, fields = [], params = [] } = spec;\n  const op = getWindow(name).create(...params);\n  if (fields.length) op.get = fields[0];\n  op.id = id;\n  return op;\n}\n\nexport function window(table, cols, exprs, result = {}, ops) {\n  // instantiate window states\n  const data = table.data();\n  const states = windowStates(ops, data);\n  const nstate = states.length;\n\n  const write = unroll(\n    ['r', 'd', 'op'],\n    '{' + concat(cols, (_, i) => `_${i}[r] = $${i}(r, d, op);`) + '}',\n    cols, exprs\n  );\n\n  // scan each ordered partition\n  table.partitions().forEach((rows, key) => {\n    const size = rows.length;\n    const peers = windowPeers(table, rows);\n\n    // initialize window states\n    for (let i = 0; i < nstate; ++i) {\n      states[i].init(rows, peers, result, key);\n    }\n\n    // calculate window values per-row\n    const op = id => result[id][key];\n    for (let index = 0; index < size; ++index) {\n      // advance window frame, updates result object\n      for (let i = 0; i < nstate; ++i) {\n        states[i].step(index);\n      }\n      write(rows[index], data, op);\n    }\n  });\n}\n\nfunction windowStates(ops, data) {\n  const map = {};\n\n  // group operations by window frame parameters\n  ops.forEach(op => {\n    const frame = frameValue(op);\n    const peers = peersValue(op);\n    const key = `${frame},${peers}`;\n    const { aggOps, winOps } = map[key] || (map[key] = {\n      frame,\n      peers,\n      aggOps: [],\n      winOps: []\n    });\n    hasAggregate(op.name)\n      ? aggOps.push(op)\n      : winOps.push(windowOp(op));\n  });\n\n  return Object.values(map).map(_ => windowState(\n    data, _.frame, _.peers, _.winOps,\n    reducers(_.aggOps, _.frame[0] != null ? -1 : 1)\n  ));\n}\n\nfunction windowPeers(table, rows) {\n  if (table.isOrdered()) {\n    // generate peer ids for sort equality checking\n    const compare = table.comparator();\n    const data = table.data();\n    const nrows = rows.length;\n    const peers = new Uint32Array(nrows);\n    for (let i = 1, index = 0; i < nrows; ++i) {\n      peers[i] = compare(rows[i - 1], rows[i], data) ? ++index : index;\n    }\n    return peers;\n  } else {\n    // no sort, no peers: reuse row indices as peer ids\n    return rows;\n  }\n}"],"names":["frameValue","op","v","peersValue","windowOp","spec","id","name","fields","params","getWindow","window","table","cols","exprs","result","ops","data","states","windowStates","nstate","write","unroll","concat","_","i","rows","key","size","peers","windowPeers","index","map","frame","aggOps","winOps","hasAggregate","windowState","reducers","compare","nrows"],"mappings":"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","x_google_ignoreList":[0]}