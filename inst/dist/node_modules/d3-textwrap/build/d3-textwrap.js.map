{"version":3,"file":"d3-textwrap.js","sources":["../../../../../node_modules/d3-textwrap/build/d3-textwrap.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'd3-selection'], factory) :\n    (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Selection) { 'use strict';\n\n    var method;\n    var verify_bounds;\n    var resolve_bounds;\n    var resolve_padding;\n    var pad;\n    var dimensions;\n    var wrap;\n    var textwrap;\n    // test for foreignObject support and determine wrapping strategy\n    method = typeof SVGForeignObjectElement === 'undefined' ? 'tspans' : 'foreignobject';\n\n    // accept multiple input types as boundaries\n    verify_bounds = function(bounds) {\n        var bounds_object,\n            bounds_function;\n        bounds_function = typeof bounds === 'function';\n        if (typeof bounds === 'object' && ! bounds.nodeType) {\n            if (! bounds.height || ! bounds.width) {\n                console.error('text wrapping bounds must specify height and width');\n                return false;\n            } else {\n                return true;\n            }\n        }\n        // convert a selection to bounds\n        if (\n            bounds instanceof d3Selection.selection ||\n            bounds.nodeType ||\n            bounds_function ||\n            bounds_object\n        ) {\n            return true;\n        // use input as bounds directly\n        } else {\n            console.error('invalid bounds specified for text wrapping');\n            return false;\n        }\n    };\n\n    resolve_bounds = function(bounds) {\n        var properties,\n            dimensions,\n            result,\n            i;\n        properties = ['height', 'width'];\n        if (typeof bounds === 'function') {\n            dimensions = bounds();\n        } else if (bounds.nodeType) {\n            dimensions = bounds.getBoundingClientRect();\n        } else if (typeof bounds === 'object') {\n            dimensions = bounds;\n        }\n        result = Object.create(null);\n        for (i = 0; i < properties.length; i++) {\n            result[properties[i]] = dimensions[properties[i]];\n        }\n        return result;\n    };\n\n    resolve_padding = function(padding) {\n        var result;\n        if (typeof padding === 'function') {\n            result = padding();\n        } else if (typeof padding === 'number') {\n            result = padding;\n        } else if (typeof padding === 'undefined') {\n            result = 0;\n        }\n        if (typeof result !== 'number') {\n            console.error('padding could not be converted into a number');\n        } else {\n            return result;\n        }\n    };\n\n    pad = function(dimensions, padding) {\n        var padded;\n        padded = {\n            height: dimensions.height - padding * 2,\n            width: dimensions.width - padding * 2\n        };\n        return padded;\n    };\n\n    dimensions = function(bounds, padding) {\n        var padded;\n        padded = pad(resolve_bounds(bounds), resolve_padding(padding));\n        return padded;\n    };\n\n\n    wrap = {};\n\n    // wrap text using foreignobject html\n    wrap.foreignobject = function(text, dimensions, padding) {\n        var content,\n            parent,\n            foreignobject,\n            div;\n        // extract our desired content from the single text element\n        content = text.text();\n        // remove the text node and replace with a foreign object\n        parent = d3Selection.select(text.node().parentNode);\n        text.remove();\n        foreignobject = parent.append('foreignObject');\n        // add foreign object and set dimensions, position, etc\n        foreignobject\n            .attr('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility')\n            .attr('width', dimensions.width)\n            .attr('height', dimensions.height);\n        if (typeof padding === 'number') {\n            foreignobject\n                .attr('x', +text.attr('x') + padding)\n                .attr('y', +text.attr('y') + padding);\n        }\n        // insert an HTML div\n        div = foreignobject\n            .append('xhtml:div');\n        // set div to same dimensions as foreign object\n        div\n            .style('height', dimensions.height)\n            .style('width', dimensions.width)\n            // insert text content\n            .html(content);\n        return div;\n    };\n\n    // wrap text using tspans\n    wrap.tspans = function(text, dimensions, padding) {\n        var pieces,\n            piece,\n            line_width,\n            x_offset,\n            tspan,\n            previous_content;\n        pieces = text.text().split(' ').reverse();\n        text.text('');\n        tspan = text.append('tspan');\n        tspan\n            .attr('dx', 0)\n            .attr('dy', 0);\n        x_offset = 0;\n        while (pieces.length > 0) {\n            piece = pieces.pop();\n            tspan.text(tspan.text() + ' ' + piece);\n            line_width = tspan.node().getComputedTextLength() || 0;\n            if (line_width > dimensions.width) {\n                previous_content = tspan.text()\n                    .split(' ')\n                    .slice(0, -1)\n                    .join(' ');\n                tspan.text(previous_content);\n                x_offset = tspan.node().getComputedTextLength() * -1;\n                tspan = text.append('tspan');\n                tspan\n                    .attr('dx', x_offset)\n                    .attr('dy', '1em')\n                    .text(piece);\n            }\n        }\n        if (typeof padding === 'number') {\n            text\n                .attr('y', +text.attr('y') + padding)\n                .attr('x', +text.attr('x') + padding);\n        }\n    };\n\n    // factory to generate text wrap functions\n    textwrap = function() {\n        // text wrap function instance\n        var wrapper,\n            bounds,\n            padding;\n        wrapper = function(targets) {\n            targets.each(function() {\n                d3Selection.select(this).call(wrap[method], dimensions(bounds, padding), resolve_padding(padding));\n            });\n        };\n        // get or set wrapping boundaries\n        wrapper.bounds = function(new_bounds) {\n            if (new_bounds) {\n                if (verify_bounds(new_bounds)) {\n                    bounds = new_bounds;\n                    return wrapper;\n                } else {\n                    console.error('invalid text wrapping bounds');\n                    return false;\n                }\n            } else {\n                return bounds;\n            }\n        };\n        // get or set padding applied on top of boundaries\n        wrapper.padding = function(new_padding) {\n            if (new_padding) {\n                if (typeof new_padding === 'number' || typeof new_padding === 'function') {\n                    padding = new_padding;\n                    return wrapper;\n                } else {\n                    console.error('text wrap padding value must be either a number or a function');\n                    return false;\n                }\n            } else {\n                return padding;\n            }\n        };\n        // get or set wrapping method\n        wrapper.method = function(new_method) {\n            if (new_method) {\n                method = new_method;\n                return wrapper;\n            } else {\n                return method;\n            }\n        };\n        return wrapper;\n    };\n\n    var textwrap$1 = textwrap;\n\n    exports.selection = d3Selection.selection;\n    exports.select = d3Selection.select;\n    exports.textwrap = textwrap$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));"],"names":["this"],"mappings":"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","x_google_ignoreList":[0]}