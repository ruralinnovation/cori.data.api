{"version":3,"file":"cori.data.api452.js","sources":["../../node_modules/arquero/src/verbs/orderby.js"],"sourcesContent":["import _orderby from '../engine/orderby';\nimport parse from '../expression/compare';\nimport field from '../helpers/field';\nimport error from '../util/error';\nimport isFunction from '../util/is-function';\nimport isObject from '../util/is-object';\nimport isNumber from '../util/is-number';\nimport isString from '../util/is-string';\n\nexport default function(table, values) {\n  return _orderby(table, parseValues(table, values));\n}\n\nfunction parseValues(table, params) {\n  let index = -1;\n  const exprs = new Map();\n  const add = val => exprs.set(++index + '', val);\n\n  params.forEach(param => {\n    const expr = param.expr != null ? param.expr : param;\n\n    if (isObject(expr) && !isFunction(expr)) {\n      for (const key in expr) add(expr[key]);\n    } else {\n      add(\n        isNumber(expr) ? field(param, table.columnName(expr))\n          : isString(expr) ? field(param)\n          : isFunction(expr) ? param\n          : error(`Invalid orderby field: ${param+''}`)\n      );\n    }\n  });\n\n  return parse(table, exprs);\n}"],"names":["__orderby","table","values","_orderby","parseValues","params","index","exprs","add","val","param","expr","isObject","isFunction","key","isNumber","field","isString","error","parse"],"mappings":";;;;;;;;;;;;;;AASe,SAAAA,EAASC,GAAOC,GAAQ;AACrC,SAAOC,EAASF,GAAOG,EAAYH,GAAOC,CAAM,CAAC;AACnD;AAEA,SAASE,EAAYH,GAAOI,GAAQ;AAClC,MAAIC,IAAQ;AACZ,QAAMC,IAAQ,oBAAI,OACZC,IAAM,CAAAC,MAAOF,EAAM,IAAI,EAAED,IAAQ,IAAIG,CAAG;AAE9C,SAAAJ,EAAO,QAAQ,CAAAK,MAAS;AACtB,UAAMC,IAAOD,EAAM,QAAQ,OAAOA,EAAM,OAAOA;AAE/C,QAAIE,EAASD,CAAI,KAAK,CAACE,EAAWF,CAAI;AACpC,iBAAWG,KAAOH;AAAM,QAAAH,EAAIG,EAAKG,CAAG,CAAC;AAAA;AAErC,MAAAN;AAAA,QACEO,EAASJ,CAAI,IAAIK,EAAMN,GAAOT,EAAM,WAAWU,CAAI,CAAC,IAChDM,EAASN,CAAI,IAAIK,EAAMN,CAAK,IAC5BG,EAAWF,CAAI,IAAID,IACnBQ,EAAM,0BAA0BR,IAAM,EAAE,EAAE;AAAA,MACtD;AAAA,EAEA,CAAG,GAEMS,EAAMlB,GAAOM,CAAK;AAC3B;","x_google_ignoreList":[0]}