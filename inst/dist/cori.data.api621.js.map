{"version":3,"file":"cori.data.api621.js","sources":["../../node_modules/apache-arrow/builder/map.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema.mjs';\nimport { Map_ } from '../type.mjs';\nimport { VariableWidthBuilder } from '../builder.mjs';\n/** @ignore */\nexport class MapBuilder extends VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        const row = (value instanceof Map ? value : new Map(Object.entries(value)));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += row.size;\n        pending.set(index, row);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const [child] = this.children;\n        for (const [index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                let { [index]: idx, [index + 1]: end } = offsets.set(index, value.size).buffer;\n                for (const val of value.entries()) {\n                    child.set(idx, val);\n                    if (++idx >= end)\n                        break;\n                }\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n"],"names":["MapBuilder","VariableWidthBuilder","index","value","row","pending","current","child","name","Map_","Field","offsets","idx","end","val"],"mappings":";;;;;;;;;AAoBO,MAAMA,UAAmBC,EAAqB;AAAA,EACjD,IAAIC,GAAOC,GAAO;AACd,WAAO,MAAM,IAAID,GAAOC,CAAK;AAAA,EAChC;AAAA,EACD,SAASD,GAAOC,GAAO;AACnB,UAAMC,IAAOD,aAAiB,MAAMA,IAAQ,IAAI,IAAI,OAAO,QAAQA,CAAK,CAAC,GACnEE,IAAU,KAAK,aAAa,KAAK,WAAW,oBAAI,IAAG,IACnDC,IAAUD,EAAQ,IAAIH,CAAK;AACjC,IAAAI,MAAY,KAAK,kBAAkBA,EAAQ,OAC3C,KAAK,kBAAkBF,EAAI,MAC3BC,EAAQ,IAAIH,GAAOE,CAAG;AAAA,EACzB;AAAA,EACD,SAASG,GAAOC,IAAO,GAAG,KAAK,WAAW,IAAI;AAC1C,QAAI,KAAK,cAAc;AACnB,YAAM,IAAI,MAAM,sCAAsC;AAE1D,gBAAK,SAAS,KAAK,WAAW,IAAID,GAClC,KAAK,OAAO,IAAIE,EAAK,IAAIC,EAAMF,GAAMD,EAAM,MAAM,EAAI,GAAG,KAAK,KAAK,UAAU,GACrE,KAAK,cAAc;AAAA,EAC7B;AAAA,EACD,cAAcF,GAAS;AACnB,UAAMM,IAAU,KAAK,UACf,CAACJ,CAAK,IAAI,KAAK;AACrB,eAAW,CAACL,GAAOC,CAAK,KAAKE;AACzB,UAAIF,MAAU;AACV,QAAAQ,EAAQ,IAAIT,GAAO,CAAC;AAAA,WAEnB;AACD,YAAI,EAAE,CAACA,CAAK,GAAGU,GAAK,CAACV,IAAQ,CAAC,GAAGW,EAAK,IAAGF,EAAQ,IAAIT,GAAOC,EAAM,IAAI,EAAE;AACxE,mBAAWW,KAAOX,EAAM;AAEpB,cADAI,EAAM,IAAIK,GAAKE,CAAG,GACd,EAAEF,KAAOC;AACT;AAAA,MAEX;AAAA,EAER;AACL;","x_google_ignoreList":[0]}