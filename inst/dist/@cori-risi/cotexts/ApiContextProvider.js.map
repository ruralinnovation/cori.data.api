{"version":3,"file":"ApiContextProvider.js","sources":["../../../../lib/@cori-risi/cotexts/ApiContextProvider.tsx"],"sourcesContent":["import React, {\n    createContext,\n    ReactElement,\n    useEffect,\n    useState\n} from \"react\";\nimport axios, { AxiosInstance } from 'axios';\n// import { fetchAuthSession, JWT } from \"@aws-amplify/auth\";\n// import { getCurrentUser } from \"@aws-amplify/auth/cognito\";\n// import { useAuthenticator, UseAuthenticator } from \"@aws-amplify/ui-react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//     updateUserId,\n//     updateUserName,\n//     updateUserTokens,\n//     selectUser\n// } from \"../features\";\n// import { User } from '../models';\n\nimport \"./styles/ApiContextProvider.css\";\n\nconst BASE_URL = \"\"; // `${import.meta.env.VITE_CORI_DATA_API}`;\n// TODO: From now on will pass API url in as param to ApiContextProvider because:\n// cori.data.api/lib/@cori-risi/cotexts/ApiContextProvider.tsx:22\n//     const BASE_URL = `${import.meta.env.VITE_CORI_DATA_API}`;\n\nconst apiClient: AxiosInstance = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n});\n\ninterface ApiContextType {\n    apiClient: AxiosInstance;\n    // authenticated: boolean;\n    // authenticated_user: User | null;\n    // autoSignOut: (() => void) | null;\n    baseURL: string;\n    // token: JWT | null;\n    data: any;\n    setData: ((newData: any) => void) | null;\n}\n\nconst initState: ApiContextType = {\n    apiClient: apiClient,\n    // authenticated: false,\n    // authenticated_user: null,\n    // autoSignOut: null,\n    baseURL: BASE_URL,\n    // token: null,\n    data: {},\n    setData: null\n};\n\nexport const ApiContext = createContext<ApiContextType | null>(initState);\n\n// let hasAuthSession = false;\n// let hasAuthUser = false;\n// let hasAuthClient = false;\n\nexport default function ApiContextProvider (props: { children?: ReactElement, base_url?: string }) {\n\n    // const authenticator: UseAuthenticator = useAuthenticator();\n    // const userState: User = useSelector(selectUser);\n    // const dispatch = useDispatch();\n\n    // const [ authenticated_user, setAuthenticatedUser ] = useState<User>(userState);\n\n    const [ state, setState ] = useState<ApiContextType | null>(initState);\n\n    function setData(newData: any) {\n        const currentState:  ApiContextType = state!;\n        setState({\n            ...currentState,\n            data: {\n                ...currentState.data,\n                ...newData\n            },\n            setData: setData\n        });\n    }\n\n    useEffect(() => {\n\n        setState({\n            apiClient: apiClient,\n            baseURL: BASE_URL,\n            data: {},\n            setData\n        });\n\n    }, []);\n\n    return (<>\n        <ApiContext.Provider value={state}>\n            {/*<ApolloGraphQLProviderRedux aws_amplify_token={token} setReady={setReady}>*/}\n                {props.children}\n            {/*</ApolloGraphQLProviderRedux>*/}\n        </ApiContext.Provider>\n    </>);\n}\n"],"names":[],"mappings":";;;;;;;;;AAqBA,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB;AACA;AACA;AAEA,MAAM,SAAS,GAAkB,KAAK,CAAC,MAAM,CAAC;AAC1C,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE;AACL,QAAA,cAAc,EAAE,kBAAkB;AACrC,KAAA;AACJ,CAAA,CAAC,CAAC;AAaH,MAAM,SAAS,GAAmB;AAC9B,IAAA,SAAS,EAAE,SAAS;;;;AAIpB,IAAA,OAAO,EAAE,QAAQ;;AAEjB,IAAA,IAAI,EAAE,EAAE;AACR,IAAA,OAAO,EAAE,IAAI;CAChB,CAAC;MAEW,UAAU,GAAG,aAAa,CAAwB,SAAS,EAAE;AAE1E;AACA;AACA;AAEwB,SAAA,kBAAkB,CAAE,KAAqD,EAAA;;;;;IAQ7F,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,GAAG,QAAQ,CAAwB,SAAS,CAAC,CAAC;IAEvE,SAAS,OAAO,CAAC,OAAY,EAAA;QACzB,MAAM,YAAY,GAAoB,KAAM,CAAC;AAC7C,QAAA,QAAQ,CACD,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,YAAY,CACf,EAAA,EAAA,IAAI,kCACG,YAAY,CAAC,IAAI,CAAA,EACjB,OAAO,CAEd,EAAA,OAAO,EAAE,OAAO,IAClB,CAAC;KACN;IAED,SAAS,CAAC,MAAK;AAEX,QAAA,QAAQ,CAAC;AACL,YAAA,SAAS,EAAE,SAAS;AACpB,YAAA,OAAO,EAAE,QAAQ;AACjB,YAAA,IAAI,EAAE,EAAE;YACR,OAAO;AACV,SAAA,CAAC,CAAC;KAEN,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,QAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA;AACJ,QAAA,KAAA,CAAA,aAAA,CAAC,UAAU,CAAC,QAAQ,EAAA,EAAC,KAAK,EAAE,KAAK,EAExB,EAAA,KAAK,CAAC,QAAQ,CAED,CACvB,EAAE;AACT;;;;"}