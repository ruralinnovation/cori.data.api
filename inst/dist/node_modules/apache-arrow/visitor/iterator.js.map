{"version":3,"file":"iterator.js","sources":["../../../../../node_modules/apache-arrow/visitor/iterator.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { Type, Precision } from '../enum.mjs';\nimport { Float, Int, Time, } from '../type.mjs';\nimport { ChunkedIterator } from '../util/chunk.mjs';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    const { type } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.nullCount === 0 && vector.stride === 1 && ((type.typeId === Type.Timestamp) ||\n        (type instanceof Int && type.bitWidth !== 64) ||\n        (type instanceof Time && type.bitWidth !== 64) ||\n        (type instanceof Float && type.precision !== Precision.HALF))) {\n        return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n            const data = vector.data[chunkIndex];\n            return data.values.subarray(0, data.length)[Symbol.iterator]();\n        });\n    }\n    // Otherwise, iterate manually\n    let offset = 0;\n    return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n        const data = vector.data[chunkIndex];\n        const length = data.length;\n        const inner = vector.slice(offset, offset + length);\n        offset += length;\n        return new VectorIterator(inner);\n    });\n}\n/** @ignore */\nclass VectorIterator {\n    constructor(vector) {\n        this.vector = vector;\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.vector.length) {\n            return {\n                value: this.vector.get(this.index++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitLargeUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitLargeBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitDuration = vectorIterator;\nIteratorVisitor.prototype.visitDurationSecond = vectorIterator;\nIteratorVisitor.prototype.visitDurationMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitDurationMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitDurationNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n"],"names":["Int","Time"],"mappings":"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","x_google_ignoreList":[0]}