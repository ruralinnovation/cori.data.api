{"version":3,"file":"cori.data.api256.js","sources":["../../node_modules/vfile/lib/minurl.browser.js"],"sourcesContent":["import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n"],"names":["urlToPath","path","isUrl","error","getPathFromURLPosix","url","pathname","index","third"],"mappings":";;;;;;;AAYO,SAASA,EAAUC,GAAM;AAC9B,MAAI,OAAOA,KAAS;AAClB,IAAAA,IAAO,IAAI,IAAIA,CAAI;AAAA,WACV,CAACC,EAAMD,CAAI,GAAG;AAEvB,UAAME,IAAQ,IAAI;AAAA,MAChB,iFACEF,IACA;AAAA,IACH;AACD,UAAAE,EAAM,OAAO,wBACPA;AAAA,EACP;AAED,MAAIF,EAAK,aAAa,SAAS;AAE7B,UAAME,IAAQ,IAAI,UAAU,gCAAgC;AAC5D,UAAAA,EAAM,OAAO,0BACPA;AAAA,EACP;AAED,SAAOC,EAAoBH,CAAI;AACjC;AAUA,SAASG,EAAoBC,GAAK;AAChC,MAAIA,EAAI,aAAa,IAAI;AAEvB,UAAMF,IAAQ,IAAI;AAAA,MAChB;AAAA,IACD;AACD,UAAAA,EAAM,OAAO,6BACPA;AAAA,EACP;AAED,QAAMG,IAAWD,EAAI;AACrB,MAAIE,IAAQ;AAEZ,SAAO,EAAEA,IAAQD,EAAS;AACxB,QACEA,EAAS,YAAYC,CAAK,MAAM,MAChCD,EAAS,YAAYC,IAAQ,CAAC,MAAM,IACpC;AACA,YAAMC,IAAQF,EAAS,YAAYC,IAAQ,CAAC;AAC5C,UAAIC,MAAU,MAAgBA,MAAU,KAAe;AAErD,cAAML,IAAQ,IAAI;AAAA,UAChB;AAAA,QACD;AACD,cAAAA,EAAM,OAAO,6BACPA;AAAA,MACP;AAAA,IACF;AAGH,SAAO,mBAAmBG,CAAQ;AACpC;","x_google_ignoreList":[0]}