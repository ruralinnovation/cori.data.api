{"version":3,"file":"cori.data.api140.js","sources":["../../node_modules/html-to-image/es/clone-node.js"],"sourcesContent":["import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n//# sourceMappingURL=clone-node.js.map"],"names":["cloneCanvasElement","canvas","dataURL","createImage","cloneVideoElement","video","options","ctx","poster","contentType","getMimeType","resourceToDataURL","cloneIFrameElement","iframe","_a","cloneNode","cloneSingleNode","node","isInstanceOfElement","isSlotElement","cloneChildren","nativeNode","clonedNode","_b","children","toArray","deferred","child","clonedChild","cloneCSSStyle","targetStyle","sourceStyle","name","value","cloneInputValue","cloneSelectValue","clonedSelect","selectedOption","decorate","clonePseudoElements","ensureSVGSymbols","clone","uses","processedDefs","i","id","exist","definition","nodes","ns","svg","defs","isRoot"],"mappings":"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","x_google_ignoreList":[0]}