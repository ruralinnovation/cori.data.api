{"version":3,"file":"cori.data.api661.js","sources":["../../node_modules/apache-arrow/fb/large-utf8.mjs"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n */\nexport class LargeUtf8 {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsLargeUtf8(bb, obj) {\n        return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsLargeUtf8(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startLargeUtf8(builder) {\n        builder.startObject(0);\n    }\n    static endLargeUtf8(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createLargeUtf8(builder) {\n        LargeUtf8.startLargeUtf8(builder);\n        return LargeUtf8.endLargeUtf8(builder);\n    }\n}\n\n//# sourceMappingURL=large-utf8.mjs.map\n"],"names":["LargeUtf8","i","bb","obj","flatbuffers.SIZE_PREFIX_LENGTH","builder"],"mappings":";;;;;;;;;AAMO,MAAMA,EAAU;AAAA,EACnB,cAAc;AACV,SAAK,KAAK,MACV,KAAK,SAAS;AAAA,EACjB;AAAA,EACD,OAAOC,GAAGC,GAAI;AACV,gBAAK,SAASD,GACd,KAAK,KAAKC,GACH;AAAA,EACV;AAAA,EACD,OAAO,mBAAmBA,GAAIC,GAAK;AAC/B,YAAQA,KAAO,IAAIH,EAAS,GAAI,OAAOE,EAAG,UAAUA,EAAG,SAAU,CAAA,IAAIA,EAAG,SAAU,GAAEA,CAAE;AAAA,EACzF;AAAA,EACD,OAAO,+BAA+BA,GAAIC,GAAK;AAC3C,WAAAD,EAAG,YAAYA,EAAG,SAAU,IAAGE,CAA8B,IACrDD,KAAO,IAAIH,EAAS,GAAI,OAAOE,EAAG,UAAUA,EAAG,SAAU,CAAA,IAAIA,EAAG,SAAU,GAAEA,CAAE;AAAA,EACzF;AAAA,EACD,OAAO,eAAeG,GAAS;AAC3B,IAAAA,EAAQ,YAAY,CAAC;AAAA,EACxB;AAAA,EACD,OAAO,aAAaA,GAAS;AAEzB,WADeA,EAAQ;EAE1B;AAAA,EACD,OAAO,gBAAgBA,GAAS;AAC5B,WAAAL,EAAU,eAAeK,CAAO,GACzBL,EAAU,aAAaK,CAAO;AAAA,EACxC;AACL;","x_google_ignoreList":[0]}