{"version":3,"file":"cori.data.api201.js","sources":["../../node_modules/apache-arrow/type.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\nimport { bigIntToNumber } from './util/bigint.mjs';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum.mjs';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Binary; }\n    /** @nocollapse */ static isLargeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.LargeBinary; }\n    /** @nocollapse */ static isUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Utf8; }\n    /** @nocollapse */ static isLargeUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.LargeUtf8; }\n    /** @nocollapse */ static isBool(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Interval; }\n    /** @nocollapse */ static isDuration(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Duration; }\n    /** @nocollapse */ static isList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Dictionary; }\n    /** @nocollapse */ static isDenseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Sparse; }\n    constructor(typeId) {\n        this.typeId = typeId;\n    }\n}\n_a = Symbol.toStringTag;\nDataType[_a] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    proto.OffsetArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    constructor() {\n        super(Type.Null);\n    }\n    toString() { return `Null`; }\n}\n_b = Symbol.toStringTag;\nNull[_b] = ((proto) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super(Type.Int);\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\n_c = Symbol.toStringTag;\nInt_[_c] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n    get ArrayType() { return Int8Array; }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n    get ArrayType() { return Int16Array; }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n    get ArrayType() { return Int32Array; }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n    get ArrayType() { return BigInt64Array; }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n    get ArrayType() { return Uint8Array; }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n    get ArrayType() { return Uint16Array; }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n    get ArrayType() { return Uint32Array; }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n    get ArrayType() { return BigUint64Array; }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super(Type.Float);\n        this.precision = precision;\n    }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\n_d = Symbol.toStringTag;\nFloat[_d] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super(Type.Binary);\n    }\n    toString() { return `Binary`; }\n}\n_e = Symbol.toStringTag;\nBinary[_e] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class LargeBinary extends DataType {\n    constructor() {\n        super(Type.LargeBinary);\n    }\n    toString() { return `LargeBinary`; }\n}\n_f = Symbol.toStringTag;\nLargeBinary[_f] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    proto.OffsetArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'LargeBinary';\n})(LargeBinary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super(Type.Utf8);\n    }\n    toString() { return `Utf8`; }\n}\n_g = Symbol.toStringTag;\nUtf8[_g] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class LargeUtf8 extends DataType {\n    constructor() {\n        super(Type.LargeUtf8);\n    }\n    toString() { return `LargeUtf8`; }\n}\n_h = Symbol.toStringTag;\nLargeUtf8[_h] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    proto.OffsetArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'LargeUtf8';\n})(LargeUtf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super(Type.Bool);\n    }\n    toString() { return `Bool`; }\n}\n_j = Symbol.toStringTag;\nBool[_j] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision, bitWidth = 128) {\n        super(Type.Decimal);\n        this.scale = scale;\n        this.precision = precision;\n        this.bitWidth = bitWidth;\n    }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\n_k = Symbol.toStringTag;\nDecimal[_k] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super(Type.Date);\n        this.unit = unit;\n    }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\n_l = Symbol.toStringTag;\nDate_[_l] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super(Type.Time);\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n}\n_m = Symbol.toStringTag;\nTime_[_m] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super(Type.Timestamp);\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\n_o = Symbol.toStringTag;\nTimestamp_[_o] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super(Type.Interval);\n        this.unit = unit;\n    }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\n_p = Symbol.toStringTag;\nInterval_[_p] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class Duration extends DataType {\n    constructor(unit) {\n        super(Type.Duration);\n        this.unit = unit;\n    }\n    toString() { return `Duration<${TimeUnit[this.unit]}>`; }\n}\n_q = Symbol.toStringTag;\nDuration[_q] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'Duration';\n})(Duration.prototype);\n/** @ignore */\nexport class DurationSecond extends Duration {\n    constructor() { super(TimeUnit.SECOND); }\n}\n/** @ignore */\nexport class DurationMillisecond extends Duration {\n    constructor() { super(TimeUnit.MILLISECOND); }\n}\n/** @ignore */\nexport class DurationMicrosecond extends Duration {\n    constructor() { super(TimeUnit.MICROSECOND); }\n}\n/** @ignore */\nexport class DurationNanosecond extends Duration {\n    constructor() { super(TimeUnit.NANOSECOND); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super(Type.List);\n        this.children = [child];\n    }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\n_r = Symbol.toStringTag;\nList[_r] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super(Type.Struct);\n        this.children = children;\n    }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_s = Symbol.toStringTag;\nStruct[_s] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super(Type.Union);\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null));\n    }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\n_t = Symbol.toStringTag;\nUnion_[_t] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super(Type.FixedSizeBinary);\n        this.byteWidth = byteWidth;\n    }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\n_u = Symbol.toStringTag;\nFixedSizeBinary[_u] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super(Type.FixedSizeList);\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\n_v = Symbol.toStringTag;\nFixedSizeList[_v] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(entries, keysSorted = false) {\n        var _y, _z, _0;\n        super(Type.Map);\n        this.children = [entries];\n        this.keysSorted = keysSorted;\n        // ARROW-8716\n        // https://github.com/apache/arrow/issues/17168\n        if (entries) {\n            entries['name'] = 'entries';\n            if ((_y = entries === null || entries === void 0 ? void 0 : entries.type) === null || _y === void 0 ? void 0 : _y.children) {\n                const key = (_z = entries === null || entries === void 0 ? void 0 : entries.type) === null || _z === void 0 ? void 0 : _z.children[0];\n                if (key) {\n                    key['name'] = 'key';\n                }\n                const val = (_0 = entries === null || entries === void 0 ? void 0 : entries.type) === null || _0 === void 0 ? void 0 : _0.children[1];\n                if (val) {\n                    val['name'] = 'value';\n                }\n            }\n        }\n    }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    get childType() { return this.children[0].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_w = Symbol.toStringTag;\nMap_[_w] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super(Type.Dictionary);\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : bigIntToNumber(id);\n    }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\n_x = Symbol.toStringTag;\nDictionary[_x] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    const t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return type.bitWidth / 32;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n"],"names":["_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","DataType","x","Type","UnionMode","typeId","proto","Null","Int_","isSigned","bitWidth","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Float","precision","Precision","Float16","Float32","Float64","Binary","LargeBinary","Utf8","LargeUtf8","Bool","Decimal","scale","Date_","unit","DateUnit","DateDay","DateMillisecond","Time_","TimeUnit","TimeSecond","TimeMillisecond","TimeMicrosecond","TimeNanosecond","Timestamp_","timezone","Interval_","IntervalUnit","IntervalDayTime","IntervalYearMonth","Duration","List","child","Struct","children","f","Union_","mode","typeIds","typeIdToChildIndex","idx","FixedSizeBinary","byteWidth","FixedSizeList","listSize","Map_","entries","keysSorted","_y","_z","_0","key","val","getId","atomicDictionaryId","Dictionary","dictionary","indices","id","isOrdered","bigIntToNumber","strideForType","type"],"mappings":"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","x_google_ignoreList":[0]}