[
  {
    "objectID": "docs/variables/AmplifyContext.html",
    "href": "docs/variables/AmplifyContext.html",
    "title": "AmplifyContext",
    "section": "",
    "text": "@cori-risi/cori.data.api / AmplifyContext\n\nAmplifyContext\n\nconst AmplifyContext: Context&lt;null | AmplifyContextType&gt;\n\nDefined in: lib/@cori-risi/contexts/AmplifyContextProvider.tsx:44\nThis is the configuration context for an Amplify app that uses authentication to connect to the CORI Data API."
  },
  {
    "objectID": "docs/variables/ApiContext.html",
    "href": "docs/variables/ApiContext.html",
    "title": "ApiContext",
    "section": "",
    "text": "@cori-risi/cori.data.api / ApiContext\n\nApiContext\n\nconst ApiContext: Context&lt;null | ApiContextType&gt;\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:119\nThis is the data/api context for a React app that uses network requests to fetch data from either a RESTful service backend or a GraphQL service backend (both are available in the CORI Data API). See ApiContextType for a list of props offered by this context.\nNote that GraphQL queries require a special client that can be instantiated by an additional context provider component (i.e. ApolloGraphQLProvider)."
  },
  {
    "objectID": "docs/interfaces/HoverObject.html",
    "href": "docs/interfaces/HoverObject.html",
    "title": "Interface: HoverObject",
    "section": "",
    "text": "@cori-risi/cori.data.api / HoverObject"
  },
  {
    "objectID": "docs/interfaces/HoverObject.html#indexable",
    "href": "docs/interfaces/HoverObject.html#indexable",
    "title": "Interface: HoverObject",
    "section": "Indexable",
    "text": "Indexable\n[key: string | number]: any"
  },
  {
    "objectID": "docs/interfaces/HoverObject.html#properties",
    "href": "docs/interfaces/HoverObject.html#properties",
    "title": "Interface: HoverObject",
    "section": "Properties",
    "text": "Properties\n\nx\n\nx: number\n\nDefined in: lib/@cori-risi/components/HoverInfo.tsx:10\n\n\n\ny\n\ny: number\n\nDefined in: lib/@cori-risi/components/HoverInfo.tsx:11"
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html",
    "href": "docs/functions/AmplifyContextProvider.html",
    "title": "AmplifyContextProvider()",
    "section": "",
    "text": "@cori-risi/cori.data.api / AmplifyContextProvider"
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html#parameters",
    "href": "docs/functions/AmplifyContextProvider.html#parameters",
    "title": "AmplifyContextProvider()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nchildren?\nReactElement&lt;any, any&gt; | ReactElement&lt;any, any&gt;[]\n\n\ndomain?\nstring\ns- domain for the Cognito Hosted UI and/or OAuth 2.0 endpoints\n\n\nidentityPoolId?\nstring\nCognito Identity pool ID\n\n\nregion?\nstring\nAWS region where Cognito service is hosted\n\n\nuserPoolClientId?\nstring\nACognito User pool App client ID (App clients are the user pool authentication resources attached to your app).\n\n\nuserPoolId?\nstring\nCognito User pool ID"
  },
  {
    "objectID": "docs/functions/AmplifyContextProvider.html#returns",
    "href": "docs/functions/AmplifyContextProvider.html#returns",
    "title": "AmplifyContextProvider()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/GeocoderControl.html",
    "href": "docs/functions/GeocoderControl.html",
    "title": "GeocoderControl()",
    "section": "",
    "text": "@cori-risi/cori.data.api / GeocoderControl"
  },
  {
    "objectID": "docs/functions/GeocoderControl.html#parameters",
    "href": "docs/functions/GeocoderControl.html#parameters",
    "title": "GeocoderControl()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nmapboxAccessToken\nstring\nMapbox API token\n\n\nmarker?\nboolean | Omit&lt;MarkerProps, \"longitude\" | \"latitude\"&gt;\ntrue or false to place marker on result once selected (default: false)\n\n\nposition\nControlPosition\nCSS class to position control in “top-left”, “top-right”, “bottom-left” or “bottom-right” of the map pane"
  },
  {
    "objectID": "docs/functions/GeocoderControl.html#returns",
    "href": "docs/functions/GeocoderControl.html#returns",
    "title": "GeocoderControl()",
    "section": "Returns",
    "text": "Returns\nnull"
  },
  {
    "objectID": "docs/functions/InfoTooltip.html",
    "href": "docs/functions/InfoTooltip.html",
    "title": "InfoTooltip()",
    "section": "",
    "text": "@cori-risi/cori.data.api / InfoTooltip"
  },
  {
    "objectID": "docs/functions/InfoTooltip.html#parameters",
    "href": "docs/functions/InfoTooltip.html#parameters",
    "title": "InfoTooltip()",
    "section": "Parameters",
    "text": "Parameters\n\n__namedParameters\n\ntext\nstring"
  },
  {
    "objectID": "docs/functions/InfoTooltip.html#returns",
    "href": "docs/functions/InfoTooltip.html#returns",
    "title": "InfoTooltip()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/HoverInfo.html",
    "href": "docs/functions/HoverInfo.html",
    "title": "HoverInfo()",
    "section": "",
    "text": "@cori-risi/cori.data.api / HoverInfo"
  },
  {
    "objectID": "docs/functions/HoverInfo.html#parameters",
    "href": "docs/functions/HoverInfo.html#parameters",
    "title": "HoverInfo()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nchildren?\nReactElement&lt;any, any&gt; | ReactElement&lt;any, any&gt;[]\n\n\nhoverInfo\nHoverObject\nan object that should, at minimum, contain x and y values (screen coordinates in pixels); “name” is also a userful prop\n\n\nxOffset?\nnumber\nthe HoverInfo box will be rendered at this offset from the event’s x coordinate\n\n\nyOffset?\nnumber\nthe HoverInfo box will be rendered at this offset from the event’s y coordinate\n\n\nzIndex?\nnumber"
  },
  {
    "objectID": "docs/functions/HoverInfo.html#returns",
    "href": "docs/functions/HoverInfo.html#returns",
    "title": "HoverInfo()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/helloAnything.html",
    "href": "docs/functions/helloAnything.html",
    "title": "helloAnything()",
    "section": "",
    "text": "@cori-risi/cori.data.api / helloAnything"
  },
  {
    "objectID": "docs/functions/helloAnything.html#parameters",
    "href": "docs/functions/helloAnything.html#parameters",
    "title": "helloAnything()",
    "section": "Parameters",
    "text": "Parameters\n\nthing\nstring"
  },
  {
    "objectID": "docs/functions/helloAnything.html#returns",
    "href": "docs/functions/helloAnything.html#returns",
    "title": "helloAnything()",
    "section": "Returns",
    "text": "Returns\nstring"
  },
  {
    "objectID": "docs/functions/mapboxGeocode.html",
    "href": "docs/functions/mapboxGeocode.html",
    "title": "mapboxGeocode()",
    "section": "",
    "text": "@cori-risi/cori.data.api / mapboxGeocode"
  },
  {
    "objectID": "docs/functions/mapboxGeocode.html#parameters",
    "href": "docs/functions/mapboxGeocode.html#parameters",
    "title": "mapboxGeocode()",
    "section": "Parameters",
    "text": "Parameters\n\napi_key\nstring\nThe Mapbox API (public) token (string)\n\n\ntext\nstring\nThe search terms (string) that will be passed at the query to the API request\nimport { mapboxGeocode } from \"@cori-risi/cori.data.api\";\n\n// ...\n\nconst relevant_features = await mapboxGeocode(mapbox_access_token, text);"
  },
  {
    "objectID": "docs/functions/mapboxGeocode.html#returns",
    "href": "docs/functions/mapboxGeocode.html#returns",
    "title": "mapboxGeocode()",
    "section": "Returns",
    "text": "Returns\nPromise&lt;any&gt;"
  },
  {
    "objectID": "docs/functions/ApiContextProvider.html",
    "href": "docs/functions/ApiContextProvider.html",
    "title": "ApiContextProvider()",
    "section": "",
    "text": "@cori-risi/cori.data.api / ApiContextProvider"
  },
  {
    "objectID": "docs/functions/ApiContextProvider.html#parameters",
    "href": "docs/functions/ApiContextProvider.html#parameters",
    "title": "ApiContextProvider()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nbaseURL?\nstring\nBase URL for the RESTful API endpoint, e.g., https://cori-data-api.ruralinnovation.us.\n\n\nchildren?\nReactElement&lt;any, any&gt; | ReactElement&lt;any, any&gt;[]\n\n\nfetchAuthSession?\nFunction\nAn optional function from the Amplify Auth package to start an authenticated session\n\n\ngetCurrentUser?\nFunction\nAn optional function from the Amplify Cognito package to fetch the current authenticated user (if any)\n\n\nsignOut?\nFunction\nAn optional function that is one of many destructured props contained in the Amplify authenticator context (returned by the useAuthenticator() hoook), used to sign out the current user."
  },
  {
    "objectID": "docs/functions/ApiContextProvider.html#returns",
    "href": "docs/functions/ApiContextProvider.html#returns",
    "title": "ApiContextProvider()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "@cori-risi/cori.data.api",
    "section": "",
    "text": "The Center on Rural Innovation (CORI) is a 501(c)(3) nonprofit organization partnering with rural leaders across the country to build tech economies that support scalable entrepreneurship and lead to more tech jobs in rural America.\nThese repositories are maintained by the Mapping and Data Analytics (MDA) team at CORI/RISI. Our team provides data, analytics and visualizations to support rural participation in the digital economy through scalable entrepreneurship and tech job growth in rural America. We aim to provide a better understanding of the forces and trends affecting rural America as we help communities chart a path to opportunity and prosperity through the tech economy.\nWe strive towards serving as the primary center of excellence advancing sustainable, economic opportunity and equity in rural America. We do this by providing expert spatial and statistical analysis, modernized visualization and tool development, credible technical subject matter expertise, and transparent documentation.\nFollow our work by reading our blog and reviewing the following list of past projects:\n\n\n\nBroadband - Broadband Equity Access and Deployment (BEAD) tool - Climate Risk Mapping\n\n\nResearch - Rural Aperture Project (RWJF) - Defining rural America - Who lives in rural America? Part 1 Part 2 - The equity of economic opportunity in rural America\n\n\n\n\nRural Innovation Network - Ascendium reports and data viz - Economic Development (ERC) tool\n\n\nRural Innovation Initiative - Tech Economy Diagnostic (TED)  (i.e., community assessment → ERC tool)\n\n\n\n\nTech Entrepreneurship  - Feasibility studies - Tech Talent Tracker → ERC tool\n\n\nAdditional work - Economic Development Administration (EDA) reports - Economic impact analysis - Multistate Workforce Analysis - example - Who Is Missing Analysis\n\n\n\nLearn more about the MDA approach to Knowledge here: Research, mapping, and data analytics"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Frontend UI library for the CORI Data API",
    "section": "",
    "text": "Frontend UI library for the CORI Data API\n\n\nTip\nNote: This README file is generated from README.qmd in the “R” directory of this repo with the command npm run render:readme.\n\n\nThis is a set of components, contexts, and general functions for any web application that is intended to interact with the CORI Data API backend (including GraphQL, Rest, and S3 resources).\n\nInstallation\nnpm install --save git+https://github.com/ruralinnovation/cori.data.api"
  },
  {
    "objectID": "docs/functions/CatLegend.html",
    "href": "docs/functions/CatLegend.html",
    "title": "CatLegend()",
    "section": "",
    "text": "@cori-risi/cori.data.api / CatLegend"
  },
  {
    "objectID": "docs/functions/CatLegend.html#parameters",
    "href": "docs/functions/CatLegend.html#parameters",
    "title": "CatLegend()",
    "section": "Parameters",
    "text": "Parameters\n\n__namedParameters\n\ninfo_dict\nany\n\n\nlegend_dict\nany\n\n\nlegend_labels\nany"
  },
  {
    "objectID": "docs/functions/CatLegend.html#returns",
    "href": "docs/functions/CatLegend.html#returns",
    "title": "CatLegend()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/SSOAuthenticator.html",
    "href": "docs/functions/SSOAuthenticator.html",
    "title": "SSOAuthenticator()",
    "section": "",
    "text": "@cori-risi/cori.data.api / SSOAuthenticator"
  },
  {
    "objectID": "docs/functions/SSOAuthenticator.html#parameters",
    "href": "docs/functions/SSOAuthenticator.html#parameters",
    "title": "SSOAuthenticator()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nchildren?\nReactElement&lt;any, string | JSXElementConstructor&lt;any&gt;&gt;\n\n\ndescription?\nstring\n\n\nprovider?\nstring\n\n\ntitle?\nstring"
  },
  {
    "objectID": "docs/functions/SSOAuthenticator.html#returns",
    "href": "docs/functions/SSOAuthenticator.html#returns",
    "title": "SSOAuthenticator()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/Label.html",
    "href": "docs/functions/Label.html",
    "title": "Label()",
    "section": "",
    "text": "@cori-risi/cori.data.api / Label"
  },
  {
    "objectID": "docs/functions/Label.html#parameters",
    "href": "docs/functions/Label.html#parameters",
    "title": "Label()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nchildren?\nReactElement&lt;any, any&gt; | ReactElement&lt;any, any&gt;[]"
  },
  {
    "objectID": "docs/functions/Label.html#returns",
    "href": "docs/functions/Label.html#returns",
    "title": "Label()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/FeedbackButton.html",
    "href": "docs/functions/FeedbackButton.html",
    "title": "FeedbackButton()",
    "section": "",
    "text": "@cori-risi/cori.data.api / FeedbackButton"
  },
  {
    "objectID": "docs/functions/FeedbackButton.html#parameters",
    "href": "docs/functions/FeedbackButton.html#parameters",
    "title": "FeedbackButton()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nlink\nstring\n\n\n\ndeprecatedLegacyContext?\nany\nDeprecated\nSee\nReact Docs"
  },
  {
    "objectID": "docs/functions/FeedbackButton.html#returns",
    "href": "docs/functions/FeedbackButton.html#returns",
    "title": "FeedbackButton()",
    "section": "Returns",
    "text": "Returns\nReactNode"
  },
  {
    "objectID": "docs/functions/Button.html",
    "href": "docs/functions/Button.html",
    "title": "Button()",
    "section": "",
    "text": "@cori-risi/cori.data.api / Button"
  },
  {
    "objectID": "docs/functions/Button.html#parameters",
    "href": "docs/functions/Button.html#parameters",
    "title": "Button()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nchildren?\nReactElement&lt;any, any&gt; | ReactElement&lt;any, any&gt;[]\n\n\nonClick\n() =&gt; void"
  },
  {
    "objectID": "docs/functions/Button.html#returns",
    "href": "docs/functions/Button.html#returns",
    "title": "Button()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html",
    "href": "docs/functions/CategoricalLegend.html",
    "title": "CategoricalLegend()",
    "section": "",
    "text": "@cori-risi/cori.data.api / CategoricalLegend"
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html#parameters",
    "href": "docs/functions/CategoricalLegend.html#parameters",
    "title": "CategoricalLegend()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\ndomain?\nstring[]\nd3 color scale domain\n\n\ndomain_names?\nstring[]\nan (array) of names, each one mapped to a category in the color scale domain\n\n\nna_message?\nstring\n\n\nrange?\nunknown[]\nd3 color scale range\n\n\nscale?\nany\n\n\ntitle?\nstring"
  },
  {
    "objectID": "docs/functions/CategoricalLegend.html#returns",
    "href": "docs/functions/CategoricalLegend.html#returns",
    "title": "CategoricalLegend()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/functions/Input.html",
    "href": "docs/functions/Input.html",
    "title": "Input()",
    "section": "",
    "text": "@cori-risi/cori.data.api / Input"
  },
  {
    "objectID": "docs/functions/Input.html#parameters",
    "href": "docs/functions/Input.html#parameters",
    "title": "Input()",
    "section": "Parameters",
    "text": "Parameters\n\nprops\n\nchecked?\nboolean\n\n\nchildren?\nReactElement&lt;any, any&gt; | ReactElement&lt;any, any&gt;[]\n\n\nid?\nstring\n\n\nmax?\nnumber\n\n\nmin?\nnumber\n\n\nname?\nstring\n\n\nonChange?\nChangeEventHandler&lt;HTMLInputElement&gt;\n\n\ntype\nstring\n\n\nvalue?\nstring | number"
  },
  {
    "objectID": "docs/functions/Input.html#returns",
    "href": "docs/functions/Input.html#returns",
    "title": "Input()",
    "section": "Returns",
    "text": "Returns\nElement"
  },
  {
    "objectID": "docs/globals.html#interfaces",
    "href": "docs/globals.html#interfaces",
    "title": "@cori-risi/cori.data.api",
    "section": "Interfaces",
    "text": "Interfaces\n\nApiContextType\nHoverObject"
  },
  {
    "objectID": "docs/globals.html#variables",
    "href": "docs/globals.html#variables",
    "title": "@cori-risi/cori.data.api",
    "section": "Variables",
    "text": "Variables\n\nAmplifyContext\nApiContext\ncoriLightMapStyle"
  },
  {
    "objectID": "docs/globals.html#functions",
    "href": "docs/globals.html#functions",
    "title": "@cori-risi/cori.data.api",
    "section": "Functions",
    "text": "Functions\n\nAmplifyContextProvider\nApiContextProvider\nButton\nCategoricalLegend\nCatLegend\nFeedbackButton\nGeocoderControl\nhelloAnything\nHoverInfo\nInfoTooltip\nInput\nLabel\nmapboxGeocode\nSSOAuthenticator"
  },
  {
    "objectID": "docs/interfaces/ApiContextType.html",
    "href": "docs/interfaces/ApiContextType.html",
    "title": "Interface: ApiContextType",
    "section": "",
    "text": "@cori-risi/cori.data.api / ApiContextType"
  },
  {
    "objectID": "docs/interfaces/ApiContextType.html#properties",
    "href": "docs/interfaces/ApiContextType.html#properties",
    "title": "Interface: ApiContextType",
    "section": "Properties",
    "text": "Properties\n\napiClient\n\napiClient: AxiosInstance\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:64\nAxios client for RESTful services\n\n\n\nauthenticated\n\nauthenticated: boolean\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:65\ntrue if the ApiContextProvider has established an authenticated session\n\n\n\nauthenticated_user\n\nauthenticated_user: null | User\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:66\nthe current user state if the ApiContextProvider has established an authenticated session\n\n\n\nautoSignOut\n\nautoSignOut: null | () =&gt; void\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:67\na function that can be called to terminate the current session (if using authentication)\n\n\n\nbaseURL\n\nbaseURL: string\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:68\nBase URL for RESTful service\n\n\n\ndata\n\ndata: any\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:70\nread-only data store\n\n\n\nsetData()\n\nsetData: (newData) =&gt; void\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:71\nsetter to update data store\n\nParameters\n\nnewData\nany\n\n\n\nReturns\nvoid\n\n\n\n\ntoken\n\ntoken: null | JWT\n\nDefined in: lib/@cori-risi/contexts/ApiContextProvider.tsx:69\nid token retrieved from Cognito which is used in requests made by the apiClient (if using authentication)"
  },
  {
    "objectID": "docs/variables/coriLightMapStyle.html",
    "href": "docs/variables/coriLightMapStyle.html",
    "title": "coriLightMapStyle",
    "section": "",
    "text": "@cori-risi/cori.data.api / coriLightMapStyle\n\ncoriLightMapStyle\n\nconst coriLightMapStyle: MapStyle\n\nDefined in: lib/cori.data.api.ts:59\nThis is the primary Mapbox basemap style used in CORI/RISI frontend mapping applications\n\n\n\n\n\n\nimport { coriLightMapStyle } from \"@cori-risi/cori.data.api\";\n\n// ...\n\n&lt;Map mapboxAccessToken={MAPBOX_TOKEN}\n     mapStyle={{...coriLightMapStyle}} &gt;"
  }
]