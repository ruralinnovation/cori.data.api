{"version":3,"file":"bit-set.js","sources":["../../../../../../node_modules/arquero/src/table/bit-set.js"],"sourcesContent":["const ONE = 0x80000000;\nconst ALL = 0xFFFFFFFF;\n\n/**\n * Represent an indexable set of bits.\n */\nexport default class BitSet {\n  /**\n   * Instantiate a new BitSet instance.\n   * @param {number} size The number of bits.\n   */\n  constructor(size) {\n    this._size = size;\n    this._bits = new Uint32Array(Math.ceil(size / 32));\n  }\n\n  /**\n   * The number of bits.\n   * @return {number}\n   */\n  get length() {\n    return this._size;\n  }\n\n  /**\n   * The number of bits set to one.\n   * https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan\n   * @return {number}\n   */\n  count() {\n    const n = this._bits.length;\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      for (let b = this._bits[i]; b; ++count) {\n        b &= b - 1;\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the bit at a given index.\n   * @param {number} i The bit index.\n   */\n  get(i) {\n    return this._bits[i >> 5] & (ONE >>> i);\n  }\n\n  /**\n   * Set the bit at a given index to one.\n   * @param {number} i The bit index.\n   */\n  set(i) {\n    this._bits[i >> 5] |= (ONE >>> i);\n  }\n\n  /**\n   * Clear the bit at a given index to zero.\n   * @param {number} i The bit index.\n   */\n  clear(i) {\n    this._bits[i >> 5] &= ~(ONE >>> i);\n  }\n\n  /**\n   * Scan the bits, invoking a callback function with the index of\n   * each non-zero bit.\n   * @param {(i: number) => void} fn A callback function.\n   */\n  scan(fn) {\n    for (let i = this.next(0); i >= 0; i = this.next(i + 1)) {\n      fn(i);\n    }\n  }\n\n  /**\n   * Get the next non-zero bit starting from a given index.\n   * @param {number} i The bit index.\n   */\n  next(i) {\n    const bits = this._bits;\n    const n = bits.length;\n\n    let index = i >> 5;\n    let curr = bits[index] & (ALL >>> i);\n\n    for (; index < n; curr = bits[++index]) {\n      if (curr !== 0) {\n        return (index << 5) + Math.clz32(curr);\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Return the index of the nth non-zero bit.\n   * @param {number} n The number of non-zero bits to advance.\n   * @return {number} The index of the nth non-zero bit.\n   */\n  nth(n) {\n    let i = this.next(0);\n    while (n-- && i >= 0) i = this.next(i + 1);\n    return i;\n  }\n\n  /**\n   * Negate all bits in this bitset.\n   * Modifies this BitSet in place.\n   * @return {this}\n   */\n  not() {\n    const bits = this._bits;\n    const n = bits.length;\n\n    // invert all bits\n    for (let i = 0; i < n; ++i) {\n      bits[i] = ~bits[i];\n    }\n\n    // unset extraneous trailing bits\n    const tail = this._size % 32;\n    if (tail) {\n      bits[n - 1] &= ONE >> (tail - 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Compute the logical AND of this BitSet and another.\n   * @param {BitSet} bitset The BitSet to combine with.\n   * @return {BitSet} This BitSet updated with the logical AND.\n   */\n  and(bitset) {\n    if (bitset) {\n      const a = this._bits;\n      const b = bitset._bits;\n      const n = a.length;\n\n      for (let i = 0; i < n; ++i) {\n        a[i] &= b[i];\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Compute the logical OR of this BitSet and another.\n   * @param {BitSet} bitset The BitSet to combine with.\n   * @return {BitSet} This BitSet updated with the logical OR.\n   */\n  or(bitset) {\n    if (bitset) {\n      const a = this._bits;\n      const b = bitset._bits;\n      const n = a.length;\n\n      for (let i = 0; i < n; ++i) {\n        a[i] |= b[i];\n      }\n    }\n    return this;\n  }\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}