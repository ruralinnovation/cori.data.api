{"version":3,"file":"parse.js","sources":["../../../../../../../node_modules/arquero/src/verbs/util/parse.js"],"sourcesContent":["import parse from '../../expression/parse';\nimport field from '../../helpers/field';\nimport resolve from '../../helpers/selection';\nimport assign from '../../util/assign';\nimport error from '../../util/error';\nimport isNumber from '../../util/is-number';\nimport isObject from '../../util/is-object';\nimport isString from '../../util/is-string';\nimport isFunction from '../../util/is-function';\nimport toArray from '../../util/to-array';\n\nexport default function(name, table, params, options = { window: false }) {\n  const exprs = new Map();\n\n  const marshal = param => {\n    param = isNumber(param) ? table.columnName(param) : param;\n    isString(param) ? exprs.set(param, field(param))\n      : isFunction(param) ? resolve(table, param).forEach(marshal)\n      : isObject(param) ? assign(exprs, param)\n      : error(`Invalid ${name} value: ${param+''}`);\n  };\n\n  toArray(params).forEach(marshal);\n\n  if (options.preparse) {\n    options.preparse(exprs);\n  }\n\n  return parse(exprs, { table, ...options });\n}"],"names":["parse"],"mappings":";;;;;;;;;;;;;;;;;AAWe,cAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;AAC1E,EAAE,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B;AACA,EAAE,MAAM,OAAO,GAAG,KAAK,IAAI;AAC3B,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AAC9D,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACpD,QAAQ,UAAU,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;AAClE,QAAQ,QAAQ,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC;AAC9C,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACnC;AACA,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE;AACxB,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,OAAOA,OAAK,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;AAC7C;;;;","x_google_ignoreList":[0]}