{"version":3,"file":"to-ast.js","sources":["../../../../../../node_modules/arquero/src/query/to-ast.js"],"sourcesContent":["import error from '../util/error';\nimport isArray from '../util/is-array';\nimport isFunction from '../util/is-function';\nimport isNumber from '../util/is-number';\nimport isObject from '../util/is-object';\nimport isString from '../util/is-string';\nimport toArray from '../util/to-array';\nimport parse from '../expression/parse';\nimport { isSelection, toObject } from './util';\n\nimport { Column } from '../expression/ast/constants';\nimport {\n  Descending,\n  Expr,\n  ExprList,\n  ExprNumber,\n  ExprObject,\n  JoinKeys,\n  JoinValues,\n  Options,\n  OrderbyKeys,\n  Selection,\n  SelectionList,\n  TableRef,\n  TableRefList,\n  Window\n} from './constants';\n\nconst Methods = {\n  [Expr]: astExpr,\n  [ExprList]: astExprList,\n  [ExprNumber]: astExprNumber,\n  [ExprObject]: astExprObject,\n  [JoinKeys]: astJoinKeys,\n  [JoinValues]: astJoinValues,\n  [OrderbyKeys]: astExprList,\n  [SelectionList]: astSelectionList\n};\n\nexport default function(value, type, propTypes) {\n  return type === TableRef ? astTableRef(value)\n    : type === TableRefList ? value.map(astTableRef)\n    : ast(toObject(value), type, propTypes);\n}\n\nfunction ast(value, type, propTypes) {\n  return type === Options\n    ? (value ? astOptions(value, propTypes) : value)\n    : Methods[type](value);\n}\n\nfunction astOptions(value, types = {}) {\n  const output = {};\n  for (const key in value) {\n    const prop = value[key];\n    output[key] = types[key] ? ast(prop, types[key]) : prop;\n  }\n  return output;\n}\n\nfunction astParse(expr, opt) {\n  return parse({ expr }, { ...opt, ast: true }).exprs[0];\n}\n\nfunction astColumn(name) {\n  return { type: Column, name };\n}\n\nfunction astColumnIndex(index) {\n  return { type: Column, index };\n}\n\nfunction astExprObject(obj, opt) {\n  if (isString(obj)) {\n    return astParse(obj, opt);\n  }\n\n  if (obj.expr) {\n    let ast;\n    if (obj.field === true) {\n      ast = astColumn(obj.expr);\n    } else if (obj.func === true) {\n      ast = astExprObject(obj.expr, opt);\n    }\n    if (ast) {\n      if (obj.desc) {\n        ast = { type: Descending, expr: ast };\n      }\n      if (obj.window) {\n        ast = { type: Window, expr: ast, ...obj.window };\n      }\n      return ast;\n    }\n  }\n\n  return Object.keys(obj)\n    .map(key => ({\n      ...astExprObject(obj[key], opt),\n      as: key\n    }));\n}\n\nfunction astSelection(sel) {\n  const type = Selection;\n  return sel.all ? { type, operator: 'all' }\n    : sel.not ? { type, operator: 'not', arguments: astExprList(sel.not) }\n    : sel.range ? { type, operator: 'range', arguments: astExprList(sel.range) }\n    : sel.matches ? { type, operator: 'matches', arguments: sel.matches }\n    : error('Invalid input');\n}\n\nfunction astSelectionList(arr) {\n  return toArray(arr).map(astSelectionItem).flat();\n}\n\nfunction astSelectionItem(val) {\n  return isSelection(val) ? astSelection(val)\n    : isNumber(val) ? astColumnIndex(val)\n    : isString(val) ? astColumn(val)\n    : isObject(val) ? Object.keys(val)\n      .map(name => ({ type: Column, name, as: val[name] }))\n    : error('Invalid input');\n}\n\nfunction astExpr(val) {\n  return isSelection(val) ? astSelection(val)\n    : isNumber(val) ? astColumnIndex(val)\n    : isString(val) ? astColumn(val)\n    : isObject(val) ? astExprObject(val)\n    : error('Invalid input');\n}\n\nfunction astExprList(arr) {\n  return toArray(arr).map(astExpr).flat();\n}\n\nfunction astExprNumber(val) {\n  return isNumber(val) ? val : astExprObject(val);\n}\n\nfunction astJoinKeys(val) {\n  return isArray(val)\n    ? val.map(astExprList)\n    : astExprObject(val, { join: true });\n}\n\nfunction astJoinValues(val) {\n  return isArray(val)\n    ? val.map((v, i) => i < 2\n        ? astExprList(v)\n        : astExprObject(v, { join: true })\n      )\n    : astExprObject(val, { join: true });\n}\n\nfunction astTableRef(value) {\n  return value && isFunction(value.toAST)\n    ? value.toAST()\n    : value;\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}