{"version":3,"file":"cori.data.api531.js","sources":["../../node_modules/arquero/src/verbs/util/parse-key.js"],"sourcesContent":["import parse from '../../expression/parse';\nimport field from '../../helpers/field';\nimport error from '../../util/error';\nimport isFunction from '../../util/is-function';\nimport isNumber from '../../util/is-number';\nimport isObject from '../../util/is-object';\nimport isString from '../../util/is-string';\nimport keyFunction from '../../util/key-function';\nimport toArray from '../../util/to-array';\n\nexport default function(name, table, params) {\n  const exprs = new Map();\n\n  toArray(params).forEach((param, i) => {\n    param = isNumber(param) ? table.columnName(param) : param;\n    isString(param) ? exprs.set(i, field(param))\n      : isFunction(param) || isObject(param) && param.expr ? exprs.set(i, param)\n      : error(`Invalid ${name} key value: ${param+''}`);\n  });\n\n  const fn = parse(exprs, { table, aggregate: false, window: false });\n  return keyFunction(fn.exprs, true);\n}"],"names":["parseKey","name","table","params","exprs","toArray","param","i","isNumber","isString","field","isFunction","isObject","error","fn","parse","keyFunction"],"mappings":";;;;;;;;;;;;;;;AAUe,SAAAA,EAASC,GAAMC,GAAOC,GAAQ;AAC3C,QAAMC,IAAQ,oBAAI;AAElB,EAAAC,EAAQF,CAAM,EAAE,QAAQ,CAACG,GAAOC,MAAM;AACpC,IAAAD,IAAQE,EAASF,CAAK,IAAIJ,EAAM,WAAWI,CAAK,IAAIA,GACpDG,EAASH,CAAK,IAAIF,EAAM,IAAIG,GAAGG,EAAMJ,CAAK,CAAC,IACvCK,EAAWL,CAAK,KAAKM,EAASN,CAAK,KAAKA,EAAM,OAAOF,EAAM,IAAIG,GAAGD,CAAK,IACvEO,EAAM,WAAWZ,CAAI,eAAeK,IAAM,EAAE,EAAE;AAAA,EACtD,CAAG;AAED,QAAMQ,IAAKC,EAAMX,GAAO,EAAE,OAAAF,GAAO,WAAW,IAAO,QAAQ,GAAK,CAAE;AAClE,SAAOc,EAAYF,EAAG,OAAO,EAAI;AACnC;","x_google_ignoreList":[0]}