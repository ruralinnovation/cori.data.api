{"version":3,"file":"cori.data.api690.js","sources":["../../node_modules/micromark-factory-title/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines canâ€™t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n"],"names":["factoryTitle","effects","ok","nok","type","markerType","stringType","marker","start","code","begin","atBreak","markdownLineEnding","factorySpace","inside","escape"],"mappings":";;;;;;;;AAwCO,SAASA,EAAaC,GAASC,GAAIC,GAAKC,GAAMC,GAAYC,GAAY;AAE3E,MAAIC;AACJ,SAAOC;AAYP,WAASA,EAAMC,GAAM;AACnB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCR,EAAQ,MAAMG,CAAI,GAClBH,EAAQ,MAAMI,CAAU,GACxBJ,EAAQ,QAAQQ,CAAI,GACpBR,EAAQ,KAAKI,CAAU,GACvBE,IAASE,MAAS,KAAK,KAAKA,GACrBC,KAEFP,EAAIM,CAAI;AAAA,EAChB;AAcD,WAASC,EAAMD,GAAM;AACnB,WAAIA,MAASF,KACXN,EAAQ,MAAMI,CAAU,GACxBJ,EAAQ,QAAQQ,CAAI,GACpBR,EAAQ,KAAKI,CAAU,GACvBJ,EAAQ,KAAKG,CAAI,GACVF,MAETD,EAAQ,MAAMK,CAAU,GACjBK,EAAQF,CAAI;AAAA,EACpB;AAYD,WAASE,EAAQF,GAAM;AACrB,WAAIA,MAASF,KACXN,EAAQ,KAAKK,CAAU,GAChBI,EAAMH,CAAM,KAEjBE,MAAS,OACJN,EAAIM,CAAI,IAIbG,EAAmBH,CAAI,KAEzBR,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQQ,CAAI,GACpBR,EAAQ,KAAK,YAAY,GAClBY,EAAaZ,GAASU,GAAS,YAAY,MAEpDV,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMa,EAAOL,CAAI;AAAA,EACnB;AAOD,WAASK,EAAOL,GAAM;AACpB,WAAIA,MAASF,KAAUE,MAAS,QAAQG,EAAmBH,CAAI,KAC7DR,EAAQ,KAAK,aAAa,GACnBU,EAAQF,CAAI,MAErBR,EAAQ,QAAQQ,CAAI,GACbA,MAAS,KAAKM,IAASD;AAAA,EAC/B;AAYD,WAASC,EAAON,GAAM;AACpB,WAAIA,MAASF,KAAUE,MAAS,MAC9BR,EAAQ,QAAQQ,CAAI,GACbK,KAEFA,EAAOL,CAAI;AAAA,EACnB;AACH;","x_google_ignoreList":[0]}