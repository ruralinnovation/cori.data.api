{"version":3,"file":"cori.data.api582.js","sources":["../../node_modules/apache-arrow/fb/field.mjs"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { DictionaryEncoding } from './dictionary-encoding.mjs';\nimport { KeyValue } from './key-value.mjs';\nimport { Type } from './type.mjs';\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n */\nexport class Field {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsField(bb, obj) {\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsField(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    /**\n     * Whether or not this field can contain nulls. Should be true in general.\n     */\n    nullable() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    typeType() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : Type.NONE;\n    }\n    /**\n     * This is the type of the decoded value if the field is dictionary encoded.\n     */\n    type(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    /**\n     * Present only if the field is dictionary encoded.\n     */\n    dictionary(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new DictionaryEncoding()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * children apply only to nested data types like Struct, List and Union. For\n     * primitive types children will have length 0.\n     */\n    children(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? (obj || new Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    childrenLength() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * User-defined metadata\n     */\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? (obj || new KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startField(builder) {\n        builder.startObject(7);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addNullable(builder, nullable) {\n        builder.addFieldInt8(1, +nullable, +false);\n    }\n    static addTypeType(builder, typeType) {\n        builder.addFieldInt8(2, typeType, Type.NONE);\n    }\n    static addType(builder, typeOffset) {\n        builder.addFieldOffset(3, typeOffset, 0);\n    }\n    static addDictionary(builder, dictionaryOffset) {\n        builder.addFieldOffset(4, dictionaryOffset, 0);\n    }\n    static addChildren(builder, childrenOffset) {\n        builder.addFieldOffset(5, childrenOffset, 0);\n    }\n    static createChildrenVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startChildrenVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(6, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endField(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\n\n//# sourceMappingURL=field.mjs.map\n"],"names":["Field","i","bb","obj","flatbuffers.SIZE_PREFIX_LENGTH","optionalEncoding","offset","Type","DictionaryEncoding","index","KeyValue","builder","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","data","numElems","customMetadataOffset"],"mappings":"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","x_google_ignoreList":[0]}