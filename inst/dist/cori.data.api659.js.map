{"version":3,"file":"cori.data.api659.js","sources":["../../node_modules/micromark-core-commonmark/lib/label-start-link.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isnâ€™t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}"],"names":["labelStartLink","tokenizeLabelStartLink","labelEnd","effects","ok","nok","self","start","code","after"],"mappings":";;;;;;;AAUY,MAACA,IAAiB;AAAA,EAC5B,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,YAAYC,EAAS;AACvB;AAMA,SAASD,EAAuBE,GAASC,GAAIC,GAAK;AAChD,QAAMC,IAAO;AACb,SAAOC;AAYP,WAASA,EAAMC,GAAM;AACnB,WAAAL,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQK,CAAI,GACpBL,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,WAAW,GACjBM;AAAA,EACR;AAGD,WAASA,EAAMD,GAAM;AAKnB,WAAOA,MAAS,MAAM,4BAA4BF,EAAK,OAAO,aAAaD,EAAIG,CAAI,IAAIJ,EAAGI,CAAI;AAAA,EAC/F;AACH;","x_google_ignoreList":[0]}