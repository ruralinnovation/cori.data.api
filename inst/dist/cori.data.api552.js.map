{"version":3,"file":"cori.data.api552.js","sources":["../../node_modules/apache-arrow/visitor/get.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BN } from '../util/bn.mjs';\nimport { Vector } from '../vector.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { MapRow } from '../row/map.mjs';\nimport { StructRow } from '../row/struct.mjs';\nimport { bigIntToNumber } from '../util/bigint.mjs';\nimport { decodeUtf8 } from '../util/utf8.mjs';\nimport { uint16ToFloat64 } from '../util/math.mjs';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.mjs';\n/** @ignore */\nexport class GetVisitor extends Visitor {\n}\n/** @ignore */\nfunction wrapGet(fn) {\n    return (data, _1) => data.getValid(_1) ? fn(data, _1) : null;\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_data, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    if (index + 1 >= valueOffsets.length) {\n        return null;\n    }\n    const x = bigIntToNumber(valueOffsets[index]);\n    const y = bigIntToNumber(valueOffsets[index + 1]);\n    return values.subarray(x, y);\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ values }, index) => values[index];\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = ({ type, values }, index) => (type.precision !== Precision.HALF ? values[index] : uint16ToFloat64(values[index]));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (data, index) => (data.type.unit === DateUnit.DAY\n    ? getDateDay(data, index)\n    : getDateMillisecond(data, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (data, index) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(data, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(data, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(data, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeMillisecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (data, index) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(data, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(data, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(data, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values, stride }, index) => BN.decimal(values.subarray(stride * index, stride * (index + 1)));\n/** @ignore */\nconst getList = (data, index) => {\n    const { valueOffsets, stride, children } = data;\n    const { [index * stride]: begin, [index * stride + 1]: end } = valueOffsets;\n    const child = children[0];\n    const slice = child.slice(begin, end - begin);\n    return new Vector([slice]);\n};\n/** @ignore */\nconst getMap = (data, index) => {\n    const { valueOffsets, children } = data;\n    const { [index]: begin, [index + 1]: end } = valueOffsets;\n    const child = children[0];\n    return new MapRow(child.slice(begin, end - begin));\n};\n/** @ignore */\nconst getStruct = (data, index) => {\n    return new StructRow(data, index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (data, index) => {\n    return data.type.mode === UnionMode.Dense ?\n        getDenseUnion(data, index) :\n        getSparseUnion(data, index);\n};\n/** @ignore */\nconst getDenseUnion = (data, index) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return instance.visit(child, data.valueOffsets[index]);\n};\n/** @ignore */\nconst getSparseUnion = (data, index) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return instance.visit(child, index);\n};\n/** @ignore */\nconst getDictionary = (data, index) => {\n    var _a;\n    return (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.get(data.values[index]);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (data, index) => (data.type.unit === IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(data, index)\n    : getIntervalYearMonth(data, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = Math.trunc(interval / 12); /* years */\n    int32s[1] = Math.trunc(interval % 12); /* months */\n    return int32s;\n};\n/** @ignore */\nconst getDurationSecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getDurationMillisecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getDurationMicrosecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getDurationNanosecond = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getDuration = (data, index) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getDurationSecond(data, index);\n        case TimeUnit.MILLISECOND: return getDurationMillisecond(data, index);\n        case TimeUnit.MICROSECOND: return getDurationMicrosecond(data, index);\n        case TimeUnit.NANOSECOND: return getDurationNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getFixedSizeList = (data, index) => {\n    const { stride, children } = data;\n    const child = children[0];\n    const slice = child.slice(index * stride, stride);\n    return new Vector([slice]);\n};\nGetVisitor.prototype.visitNull = wrapGet(getNull);\nGetVisitor.prototype.visitBool = wrapGet(getBool);\nGetVisitor.prototype.visitInt = wrapGet(getInt);\nGetVisitor.prototype.visitInt8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitUint8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitFloat = wrapGet(getFloat);\nGetVisitor.prototype.visitFloat16 = wrapGet(getFloat16);\nGetVisitor.prototype.visitFloat32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitFloat64 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUtf8 = wrapGet(getUtf8);\nGetVisitor.prototype.visitLargeUtf8 = wrapGet(getUtf8);\nGetVisitor.prototype.visitBinary = wrapGet(getBinary);\nGetVisitor.prototype.visitLargeBinary = wrapGet(getBinary);\nGetVisitor.prototype.visitFixedSizeBinary = wrapGet(getFixedSizeBinary);\nGetVisitor.prototype.visitDate = wrapGet(getDate);\nGetVisitor.prototype.visitDateDay = wrapGet(getDateDay);\nGetVisitor.prototype.visitDateMillisecond = wrapGet(getDateMillisecond);\nGetVisitor.prototype.visitTimestamp = wrapGet(getTimestamp);\nGetVisitor.prototype.visitTimestampSecond = wrapGet(getTimestampSecond);\nGetVisitor.prototype.visitTimestampMillisecond = wrapGet(getTimestampMillisecond);\nGetVisitor.prototype.visitTimestampMicrosecond = wrapGet(getTimestampMicrosecond);\nGetVisitor.prototype.visitTimestampNanosecond = wrapGet(getTimestampNanosecond);\nGetVisitor.prototype.visitTime = wrapGet(getTime);\nGetVisitor.prototype.visitTimeSecond = wrapGet(getTimeSecond);\nGetVisitor.prototype.visitTimeMillisecond = wrapGet(getTimeMillisecond);\nGetVisitor.prototype.visitTimeMicrosecond = wrapGet(getTimeMicrosecond);\nGetVisitor.prototype.visitTimeNanosecond = wrapGet(getTimeNanosecond);\nGetVisitor.prototype.visitDecimal = wrapGet(getDecimal);\nGetVisitor.prototype.visitList = wrapGet(getList);\nGetVisitor.prototype.visitStruct = wrapGet(getStruct);\nGetVisitor.prototype.visitUnion = wrapGet(getUnion);\nGetVisitor.prototype.visitDenseUnion = wrapGet(getDenseUnion);\nGetVisitor.prototype.visitSparseUnion = wrapGet(getSparseUnion);\nGetVisitor.prototype.visitDictionary = wrapGet(getDictionary);\nGetVisitor.prototype.visitInterval = wrapGet(getInterval);\nGetVisitor.prototype.visitIntervalDayTime = wrapGet(getIntervalDayTime);\nGetVisitor.prototype.visitIntervalYearMonth = wrapGet(getIntervalYearMonth);\nGetVisitor.prototype.visitDuration = wrapGet(getDuration);\nGetVisitor.prototype.visitDurationSecond = wrapGet(getDurationSecond);\nGetVisitor.prototype.visitDurationMillisecond = wrapGet(getDurationMillisecond);\nGetVisitor.prototype.visitDurationMicrosecond = wrapGet(getDurationMicrosecond);\nGetVisitor.prototype.visitDurationNanosecond = wrapGet(getDurationNanosecond);\nGetVisitor.prototype.visitFixedSizeList = wrapGet(getFixedSizeList);\nGetVisitor.prototype.visitMap = wrapGet(getMap);\n/** @ignore */\nexport const instance = new GetVisitor();\n\n//# sourceMappingURL=get.mjs.map\n"],"names":["GetVisitor","Visitor","wrapGet","fn","data","_1","epochDaysToMs","index","epochMillisecondsLongToMs","epochMicrosecondsLongToMs","epochNanosecondsLongToMs","epochMillisecondsToDate","epochMs","epochDaysToDate","epochMillisecondsLongToDate","getNull","_data","_index","getVariableWidthBytes","values","valueOffsets","x","bigIntToNumber","y","getBool","offset","idx","getDateDay","getDateMillisecond","getNumeric","stride","getFloat16","uint16ToFloat64","getBigInts","getFixedSizeBinary","getBinary","getUtf8","bytes","decodeUtf8","getInt","getFloat","type","Precision","getDate","DateUnit","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","getTimestampNanosecond","getTimestamp","TimeUnit","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getTime","getDecimal","BN","getList","children","begin","end","slice","Vector","getMap","child","MapRow","getStruct","StructRow","getUnion","UnionMode","getDenseUnion","getSparseUnion","childIndex","instance","getDictionary","_a","getInterval","IntervalUnit","getIntervalDayTime","getIntervalYearMonth","interval","int32s","getDurationSecond","getDurationMillisecond","getDurationMicrosecond","getDurationNanosecond","getDuration","getFixedSizeList"],"mappings":"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","x_google_ignoreList":[0]}