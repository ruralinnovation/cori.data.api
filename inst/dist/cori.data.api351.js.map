{"version":3,"file":"cori.data.api351.js","sources":["../../node_modules/mdast-util-to-hast/lib/handlers/link.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["link","state","node","properties","normalizeUri","result"],"mappings":";;;;;;;AAmBO,SAASA,EAAKC,GAAOC,GAAM;AAEhC,QAAMC,IAAa,EAAC,MAAMC,EAAaF,EAAK,GAAG,EAAC;AAEhD,EAAIA,EAAK,UAAU,QAAQA,EAAK,UAAU,WACxCC,EAAW,QAAQD,EAAK;AAI1B,QAAMG,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAAF;AAAA,IACA,UAAUF,EAAM,IAAIC,CAAI;AAAA,EACzB;AACD,SAAAD,EAAM,MAAMC,GAAMG,CAAM,GACjBJ,EAAM,UAAUC,GAAMG,CAAM;AACrC;","x_google_ignoreList":[0]}