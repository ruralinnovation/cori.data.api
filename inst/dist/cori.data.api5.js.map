{"version":3,"file":"cori.data.api5.js","sources":["../../lib/@cori-risi/components/DataMetricPanel.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport BarChart from \"./BarChart.tsx\";\nimport GroupedBarChart from \"./GroupedBarChart.tsx\";\nimport LineChart from \"./LineChart.tsx\";\nimport { toSnakeCase } from \"../utils\";\n\nexport default function DataMetricPanel (props: {\n    data: any,  chart_type: string, chart_width: number, metric: string, metadata: any,\n    primary_element_name: string,  primary_geoid: string,\n    title: string,  subtitle: string, primary_text: string, secondary_text: string\n}) {\n\n    return (\n        <div className={\"metric-section\"} id={toSnakeCase(props.metric)} key={props.metric}>\n            <h2>{props.title}</h2>\n            <p><b>{props.subtitle}</b></p>\n            <ReactMarkdown>{props.primary_text}</ReactMarkdown>\n\n            {((props.chart_type === 'bar') ?\n                    <BarChart\n                        primary_geoid={props.primary_geoid}\n                        metric={props.metric}\n                        data={\n                            props.data\n                        }\n                        metadata={props.metadata}\n                        width={props.chart_width}\n                        element_name={props.primary_element_name}\n                    /> :\n\n                    (props.chart_type === 'line') ?\n                        <LineChart\n                            primary_geoid={props.primary_geoid}\n                            metric={props.metric}\n                            data={\n                                props.data\n                            }\n                            metadata={props.metadata}\n                            width={props.chart_width}\n                            height={250}\n                            element_name={props.primary_element_name}\n                        /> :\n\n                        (props.chart_type === 'grouped bar') ?\n                            <GroupedBarChart\n                                primary_geoid={props.primary_geoid}\n                                metric={props.metric}\n                                data={\n                                    props.data\n                                }\n                                metadata={props.metadata}\n                                width={props.chart_width}\n                                element_name={props.primary_element_name}\n                            /> :\n\n                            <></>\n            )}\n\n            <p><b>How to interpret this chart</b></p>\n            <ReactMarkdown>{props.secondary_text}</ReactMarkdown>\n        </div>\n    );\n}"],"names":["DataMetricPanel","props","jsxs","toSnakeCase","jsx","ReactMarkdown","BarChart","LineChart","GroupedBarChart","Fragment"],"mappings":";;;;;;;;;;;;AAOA,SAAwBA,EAAiBC,GAItC;AAGK,SAAAC,gBAAAA,OAAC,SAAI,WAAW,kBAAkB,IAAIC,EAAYF,EAAM,MAAM,GAC1D,UAAA;AAAA,IAACG,gBAAAA,EAAAA,IAAA,MAAA,EAAI,YAAM,MAAM,CAAA;AAAA,0BAChB,KAAE,EAAA,UAAAA,gBAAAA,MAAC,KAAG,EAAA,UAAAH,EAAM,SAAS,CAAA,GAAI;AAAA,IAC1BG,gBAAAA,EAAAA,IAACC,GAAe,EAAA,UAAAJ,EAAM,aAAa,CAAA;AAAA,IAEhCA,EAAM,eAAe,QAChBG,gBAAAA,EAAA;AAAA,MAACE;AAAA,MAAA;AAAA,QACG,eAAeL,EAAM;AAAA,QACrB,QAAQA,EAAM;AAAA,QACd,MACIA,EAAM;AAAA,QAEV,UAAUA,EAAM;AAAA,QAChB,OAAOA,EAAM;AAAA,QACb,cAAcA,EAAM;AAAA,MAAA;AAAA,IAAA,IAGvBA,EAAM,eAAe,SAClBG,gBAAAA,EAAA;AAAA,MAACG;AAAA,MAAA;AAAA,QACG,eAAeN,EAAM;AAAA,QACrB,QAAQA,EAAM;AAAA,QACd,MACIA,EAAM;AAAA,QAEV,UAAUA,EAAM;AAAA,QAChB,OAAOA,EAAM;AAAA,QACb,QAAQ;AAAA,QACR,cAAcA,EAAM;AAAA,MAAA;AAAA,IAAA,IAGvBA,EAAM,eAAe,gBAClBG,gBAAAA,EAAA;AAAA,MAACI;AAAA,MAAA;AAAA,QACG,eAAeP,EAAM;AAAA,QACrB,QAAQA,EAAM;AAAA,QACd,MACIA,EAAM;AAAA,QAEV,UAAUA,EAAM;AAAA,QAChB,OAAOA,EAAM;AAAA,QACb,cAAcA,EAAM;AAAA,MAAA;AAAA,IAAA,IAGtBG,gBAAAA,EAAA,IAAAK,EAAA,UAAA,EAAA;AAAA,IAGjBL,gBAAAA,MAAA,KAAA,EAAE,UAACA,gBAAAA,EAAA,IAAA,KAAA,EAAE,wCAA2B,CAAA,GAAI;AAAA,IACrCA,gBAAAA,EAAAA,IAACC,GAAe,EAAA,UAAAJ,EAAM,eAAe,CAAA;AAAA,EAAA,KA9C6BA,EAAM,MA+C5E;AAER;"}