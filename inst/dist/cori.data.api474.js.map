{"version":3,"file":"cori.data.api474.js","sources":["../../node_modules/arquero/src/verbs/relocate.js"],"sourcesContent":["import _select from '../engine/select';\nimport resolve from '../helpers/selection';\nimport error from '../util/error';\n\nexport default function(table, columns, { before, after } = {}) {\n  const bef = before != null;\n  const aft = after != null;\n\n  if (!(bef || aft)) {\n    error('relocate requires a before or after option.');\n  }\n  if (bef && aft) {\n    error('relocate accepts only one of the before or after options.');\n  }\n\n  columns = resolve(table, columns);\n  const anchors = [...resolve(table, bef ? before : after).keys()];\n  const anchor = bef ? anchors[0] : anchors.pop();\n  const select = new Map();\n\n  // marshal inputs to select in desired order\n  table.columnNames().forEach(name => {\n    // check if we should assign the current column\n    const assign = !columns.has(name);\n\n    // at anchor column, insert relocated columns\n    if (name === anchor) {\n      if (aft && assign) select.set(name, name);\n      for (const [key, value] of columns) {\n        select.set(key, value);\n      }\n      if (aft) return; // exit if current column has been handled\n    }\n\n    if (assign) select.set(name, name);\n  });\n\n  return _select(table, select);\n}"],"names":["__relocate","table","columns","before","after","bef","aft","error","resolve","anchors","anchor","select","name","assign","key","value","_select"],"mappings":";;;;;;;;;AAIe,SAAAA,EAASC,GAAOC,GAAS,EAAE,QAAAC,GAAQ,OAAAC,EAAK,IAAK,CAAA,GAAI;AAC9D,QAAMC,IAAMF,KAAU,MAChBG,IAAMF,KAAS;AAErB,EAAMC,KAAOC,KACXC,EAAM,6CAA6C,GAEjDF,KAAOC,KACTC,EAAM,2DAA2D,GAGnEL,IAAUM,EAAQP,GAAOC,CAAO;AAChC,QAAMO,IAAU,CAAC,GAAGD,EAAQP,GAAOI,IAAMF,IAASC,CAAK,EAAE,KAAI,CAAE,GACzDM,IAASL,IAAMI,EAAQ,CAAC,IAAIA,EAAQ,OACpCE,IAAS,oBAAI;AAGnB,SAAAV,EAAM,YAAW,EAAG,QAAQ,CAAAW,MAAQ;AAElC,UAAMC,IAAS,CAACX,EAAQ,IAAIU,CAAI;AAGhC,QAAIA,MAASF,GAAQ;AACnB,MAAIJ,KAAOO,KAAQF,EAAO,IAAIC,GAAMA,CAAI;AACxC,iBAAW,CAACE,GAAKC,CAAK,KAAKb;AACzB,QAAAS,EAAO,IAAIG,GAAKC,CAAK;AAEvB,UAAIT;AAAK;AAAA,IACV;AAED,IAAIO,KAAQF,EAAO,IAAIC,GAAMA,CAAI;AAAA,EACrC,CAAG,GAEMI,EAAQf,GAAOU,CAAM;AAC9B;","x_google_ignoreList":[0]}