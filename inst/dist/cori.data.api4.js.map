{"version":3,"file":"cori.data.api4.js","sources":["../../lib/@cori-risi/components/CategoricalLegend.tsx"],"sourcesContent":["import React from 'react';\nimport style from \"./styles/CategoricalLegend.module.css\";\n\ninterface CategoricalLegendProps {\n  domain: string[]; // Should be in the order of what appears top to bottom in the chart\n  range: unknown[];\n  element_name: string;\n}\n\nconst CategoricalLegend: React.FC<CategoricalLegendProps> = ({ domain, range, element_name }) => {\n\n\tconst rows = [];\n\n  if (domain.length <= range.length) {\n\n    for (let i = 0; i < domain.length; ++i) {\n\n      if (typeof range[i] === \"string\") {\n\n        const color: string = range[i] as string;\n        rows.push(\n          <div className={style[\"entry\"]} key={i}>\n            <div\n              className={style[\"key\"]}\n              style={{\n                backgroundColor: color\n              }}>\n            </div>\n            <p>{element_name /*renderGEOID(domain[i])*/ }</p>\n          </div>\n        );\n\n      }\n    }\n\n  }\n  \n\treturn (\n\t\t<div className={style[\"categorical-legend\"]}>\n      {rows}\n    </div>\n  )  \n\n}\n\nexport default CategoricalLegend;"],"names":["CategoricalLegend","domain","range","element_name","rows","i","color","jsxs","style","jsx"],"mappings":";;;;;;;;AASA,MAAMA,IAAsD,CAAC,EAAE,QAAAC,GAAQ,OAAAC,GAAO,cAAAC,QAAmB;AAEhG,QAAMC,IAAO,CAAA;AAER,MAAAH,EAAO,UAAUC,EAAM;AAEzB,aAASG,IAAI,GAAGA,IAAIJ,EAAO,QAAQ,EAAEI;AAEnC,UAAI,OAAOH,EAAMG,CAAC,KAAM,UAAU;AAE1B,cAAAC,IAAgBJ,EAAMG,CAAC;AACxB,QAAAD,EAAA;AAAA,UACFG,gBAAAA,EAAA,KAAA,OAAA,EAAI,WAAWC,EAAM,OACpB,UAAA;AAAA,YAAAC,gBAAAA,EAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWD,EAAM;AAAA,gBACjB,OAAO;AAAA,kBACL,iBAAiBF;AAAA,gBACnB;AAAA,cAAA;AAAA,YACF;AAAA,YACAG,gBAAAA,EAAAA,IAAC,OAAG,UAAyCN,EAAA,CAAA;AAAA,UAAA,EAAA,GAPVE,CAQrC;AAAA,QAAA;AAAA,MAGJ;AAAA;AAKL,+BACE,OAAI,EAAA,WAAWG,EAAM,oBAAoB,GACrC,UACHJ,EAAA,CAAA;AAGJ;"}