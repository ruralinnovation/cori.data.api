{"version":3,"file":"cori.data.api609.js","sources":["../../node_modules/apache-arrow/builder/union.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema.mjs';\nimport { DataBufferBuilder } from './buffer.mjs';\nimport { Builder } from '../builder.mjs';\nimport { Union } from '../type.mjs';\n/** @ignore */\nexport class UnionBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(Int8Array, 0, 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        this.setValue(index, value, childTypeId);\n        return this;\n    }\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        const child = this.children[childIndex];\n        child === null || child === void 0 ? void 0 : child.set(index, value);\n    }\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n/** @ignore */\nexport class SparseUnionBuilder extends UnionBuilder {\n}\n/** @ignore */\nexport class DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new DataBufferBuilder(Int32Array);\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const id = this._typeIds.set(index, childTypeId).buffer[index];\n        const child = this.getChildAt(this.type.typeIdToChildIndex[id]);\n        const denseIndex = this._offsets.set(index, child.length).buffer[index];\n        child === null || child === void 0 ? void 0 : child.set(denseIndex, value);\n    }\n}\n\n//# sourceMappingURL=union.mjs.map\n"],"names":["UnionBuilder","Builder","options","DataBufferBuilder","value","childTypeId","index","childIndex","child","name","children","mode","typeIds","fields","Field","Union","builder","offset","SparseUnionBuilder","DenseUnionBuilder","id","denseIndex"],"mappings":";;;;;;;;;;AAqBO,MAAMA,UAAqBC,EAAQ;AAAA,EACtC,YAAYC,GAAS;AACjB,UAAMA,CAAO,GACb,KAAK,WAAW,IAAIC,EAAkB,WAAW,GAAG,CAAC,GACjD,OAAOD,EAAQ,sBAA0B,eACzC,KAAK,sBAAsBA,EAAQ;AAAA,EAE1C;AAAA,EACD,IAAI,qBAAqB;AAAE,WAAO,KAAK,KAAK;AAAA,EAAqB;AAAA,EACjE,OAAOE,GAAOC,GAAa;AACvB,WAAO,KAAK,IAAI,KAAK,QAAQD,GAAOC,CAAW;AAAA,EAClD;AAAA,EACD,IAAIC,GAAOF,GAAOC,GAAa;AAC3B,WAAIA,MAAgB,WAChBA,IAAc,KAAK,oBAAoB,MAAMD,GAAOE,CAAK,IAE7D,KAAK,SAASA,GAAOF,GAAOC,CAAW,GAChC;AAAA,EACV;AAAA,EACD,SAASC,GAAOF,GAAOC,GAAa;AAChC,SAAK,SAAS,IAAIC,GAAOD,CAAW;AACpC,UAAME,IAAa,KAAK,KAAK,mBAAmBF,CAAW,GACrDG,IAAQ,KAAK,SAASD,CAAU;AACtC,IAAAC,KAAU,QAAoCA,EAAM,IAAIF,GAAOF,CAAK;AAAA,EACvE;AAAA,EACD,SAASI,GAAOC,IAAO,GAAG,KAAK,SAAS,MAAM,IAAI;AAC9C,UAAMJ,IAAc,KAAK,SAAS,KAAKG,CAAK,GACtC,EAAE,MAAM,EAAE,UAAAE,GAAU,MAAAC,GAAM,SAAAC,EAAO,EAAI,IAAG,MACxCC,IAAS,CAAC,GAAGH,GAAU,IAAII,EAAML,GAAMD,EAAM,IAAI,CAAC;AACxD,gBAAK,OAAO,IAAIO,EAAMJ,GAAM,CAAC,GAAGC,GAASP,CAAW,GAAGQ,CAAM,GACtDR;AAAA,EACV;AAAA;AAAA;AAAA,EAGD,oBAAoBW,GAASZ,GAAOa,GAAQ;AACxC,UAAM,IAAI,MAAM,mNAEqE;AAAA,EACxF;AACL;AAEO,MAAMC,UAA2BlB,EAAa;AACrD;AAEO,MAAMmB,UAA0BnB,EAAa;AAAA,EAChD,YAAYE,GAAS;AACjB,UAAMA,CAAO,GACb,KAAK,WAAW,IAAIC,EAAkB,UAAU;AAAA,EACnD;AAAA;AAAA,EAED,SAASG,GAAOF,GAAOC,GAAa;AAChC,UAAMe,IAAK,KAAK,SAAS,IAAId,GAAOD,CAAW,EAAE,OAAOC,CAAK,GACvDE,IAAQ,KAAK,WAAW,KAAK,KAAK,mBAAmBY,CAAE,CAAC,GACxDC,IAAa,KAAK,SAAS,IAAIf,GAAOE,EAAM,MAAM,EAAE,OAAOF,CAAK;AACtE,IAAAE,KAAU,QAAoCA,EAAM,IAAIa,GAAYjB,CAAK;AAAA,EAC5E;AACL;","x_google_ignoreList":[0]}