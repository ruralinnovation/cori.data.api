{"version":3,"file":"cori.data.api553.js","sources":["../../node_modules/apache-arrow/visitor/iterator.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { Type, Precision } from '../enum.mjs';\nimport { Float, Int, Time, } from '../type.mjs';\nimport { ChunkedIterator } from '../util/chunk.mjs';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    const { type } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.nullCount === 0 && vector.stride === 1 && ((type.typeId === Type.Timestamp) ||\n        (type instanceof Int && type.bitWidth !== 64) ||\n        (type instanceof Time && type.bitWidth !== 64) ||\n        (type instanceof Float && type.precision !== Precision.HALF))) {\n        return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n            const data = vector.data[chunkIndex];\n            return data.values.subarray(0, data.length)[Symbol.iterator]();\n        });\n    }\n    // Otherwise, iterate manually\n    let offset = 0;\n    return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n        const data = vector.data[chunkIndex];\n        const length = data.length;\n        const inner = vector.slice(offset, offset + length);\n        offset += length;\n        return new VectorIterator(inner);\n    });\n}\n/** @ignore */\nclass VectorIterator {\n    constructor(vector) {\n        this.vector = vector;\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.vector.length) {\n            return {\n                value: this.vector.get(this.index++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitLargeUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitLargeBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitDuration = vectorIterator;\nIteratorVisitor.prototype.visitDurationSecond = vectorIterator;\nIteratorVisitor.prototype.visitDurationMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitDurationMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitDurationNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n"],"names":["IteratorVisitor","Visitor","vectorIterator","vector","type","Type","Int","Time","Float","Precision","ChunkedIterator","chunkIndex","data","offset","length","inner","VectorIterator","instance"],"mappings":"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","x_google_ignoreList":[0]}