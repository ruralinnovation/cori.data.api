{"version":3,"file":"cori.data.api487.js","sources":["../../node_modules/micromark/lib/preprocess.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n"],"names":["search","preprocess","column","buffer","start","atCarriageReturn","preprocessor","value","encoding","end","chunks","match","next","startPosition","endPosition","code"],"mappings":";;;;;;AAeA,MAAMA,IAAS;AAKR,SAASC,IAAa;AAC3B,MAAIC,IAAS,GACTC,IAAS,IAETC,IAAQ,IAERC;AACJ,SAAOC;AAIP,WAASA,EAAaC,GAAOC,GAAUC,GAAK;AAE1C,UAAMC,IAAS,CAAE;AAEjB,QAAIC,GAEAC,GAEAC,GAEAC,GAEAC;AAeJ,SAdAR,IACEJ,KACC,OAAOI,KAAU,WACdA,EAAM,SAAU,IAChB,IAAI,YAAYC,KAAY,MAAS,EAAE,OAAOD,CAAK,IACzDM,IAAgB,GAChBV,IAAS,IACLC,MAEEG,EAAM,WAAW,CAAC,MAAM,SAC1BM,KAEFT,IAAQ,SAEHS,IAAgBN,EAAM,UAAQ;AAMnC,UALAP,EAAO,YAAYa,GACnBF,IAAQX,EAAO,KAAKO,CAAK,GACzBO,IACEH,KAASA,EAAM,UAAU,SAAYA,EAAM,QAAQJ,EAAM,QAC3DQ,IAAOR,EAAM,WAAWO,CAAW,GAC/B,CAACH,GAAO;AACV,QAAAR,IAASI,EAAM,MAAMM,CAAa;AAClC;AAAA,MACD;AACD,UAAIE,MAAS,MAAMF,MAAkBC,KAAeT;AAClD,QAAAK,EAAO,KAAK,EAAE,GACdL,IAAmB;AAAA;AAUnB,gBARIA,MACFK,EAAO,KAAK,EAAE,GACdL,IAAmB,SAEjBQ,IAAgBC,MAClBJ,EAAO,KAAKH,EAAM,MAAMM,GAAeC,CAAW,CAAC,GACnDZ,KAAUY,IAAcD,IAElBE,GAAI;AAAA,UACV,KAAK,GAAG;AACN,YAAAL,EAAO,KAAK,KAAK,GACjBR;AACA;AAAA,UACD;AAAA,UACD,KAAK,GAAG;AAGN,iBAFAU,IAAO,KAAK,KAAKV,IAAS,CAAC,IAAI,GAC/BQ,EAAO,KAAK,EAAE,GACPR,MAAWU;AAAM,cAAAF,EAAO,KAAK,EAAE;AACtC;AAAA,UACD;AAAA,UACD,KAAK,IAAI;AACP,YAAAA,EAAO,KAAK,EAAE,GACdR,IAAS;AACT;AAAA,UACD;AAAA,UACD;AACE,YAAAG,IAAmB,IACnBH,IAAS;AAAA,QAEZ;AAEH,MAAAW,IAAgBC,IAAc;AAAA,IAC/B;AACD,WAAIL,MACEJ,KAAkBK,EAAO,KAAK,EAAE,GAChCP,KAAQO,EAAO,KAAKP,CAAM,GAC9BO,EAAO,KAAK,IAAI,IAEXA;AAAA,EACR;AACH;","x_google_ignoreList":[0]}