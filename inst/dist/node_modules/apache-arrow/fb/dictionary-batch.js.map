{"version":3,"file":"dictionary-batch.js","sources":["../../../../../node_modules/apache-arrow/fb/dictionary-batch.mjs"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { RecordBatch } from './record-batch.mjs';\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n */\nexport class DictionaryBatch {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDictionaryBatch(bb, obj) {\n        return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDictionaryBatch(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    id() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');\n    }\n    data(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new RecordBatch()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * If isDelta is true the values in the dictionary are to be appended to a\n     * dictionary with the indicated id. If isDelta is false this dictionary\n     * should replace the existing dictionary.\n     */\n    isDelta() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startDictionaryBatch(builder) {\n        builder.startObject(3);\n    }\n    static addId(builder, id) {\n        builder.addFieldInt64(0, id, BigInt('0'));\n    }\n    static addData(builder, dataOffset) {\n        builder.addFieldOffset(1, dataOffset, 0);\n    }\n    static addIsDelta(builder, isDelta) {\n        builder.addFieldInt8(2, +isDelta, +false);\n    }\n    static endDictionaryBatch(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\n\n//# sourceMappingURL=dictionary-batch.mjs.map\n"],"names":["flatbuffers.SIZE_PREFIX_LENGTH"],"mappings":"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","x_google_ignoreList":[0]}