{"version":3,"file":"cori.data.api685.js","sources":["../../node_modules/micromark-core-commonmark/lib/label-start-image.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isnâ€™t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}"],"names":["labelStartImage","tokenizeLabelStartImage","labelEnd","effects","ok","nok","self","start","code","open","after"],"mappings":";;;;;;;AAUY,MAACA,IAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,YAAYC,EAAS;AACvB;AAMA,SAASD,EAAwBE,GAASC,GAAIC,GAAK;AACjD,QAAMC,IAAO;AACb,SAAOC;AAYP,WAASA,EAAMC,GAAM;AACnB,WAAAL,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQK,CAAI,GACpBL,EAAQ,KAAK,kBAAkB,GACxBM;AAAA,EACR;AAYD,WAASA,EAAKD,GAAM;AAClB,WAAIA,MAAS,MACXL,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQK,CAAI,GACpBL,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,YAAY,GAClBO,KAEFL,EAAIG,CAAI;AAAA,EAChB;AA6BD,WAASE,EAAMF,GAAM;AAMnB,WAAOA,MAAS,MAAM,4BAA4BF,EAAK,OAAO,aAAaD,EAAIG,CAAI,IAAIJ,EAAGI,CAAI;AAAA,EAC/F;AACH;","x_google_ignoreList":[0]}