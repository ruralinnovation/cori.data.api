{"version":3,"file":"cori.data.api532.js","sources":["../../node_modules/micromark/lib/initialize/content.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n"],"names":["content","initializeContent","effects","contentStart","afterContentStartConstruct","paragraphInitial","previous","code","factorySpace","lineStart","token","data","markdownLineEnding"],"mappings":";;;;;;;;AAWY,MAACA,IAAU;AAAA,EACrB,UAAUC;AACZ;AAMA,SAASA,EAAkBC,GAAS;AAClC,QAAMC,IAAeD,EAAQ;AAAA,IAC3B,KAAK,OAAO,WAAW;AAAA,IACvBE;AAAA,IACAC;AAAA,EACD;AAED,MAAIC;AACJ,SAAOH;AAGP,WAASC,EAA2BG,GAAM;AACxC,QAAIA,MAAS,MAAM;AACjB,MAAAL,EAAQ,QAAQK,CAAI;AACpB;AAAA,IACD;AACD,WAAAL,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQK,CAAI,GACpBL,EAAQ,KAAK,YAAY,GAClBM,EAAaN,GAASC,GAAc,YAAY;AAAA,EACxD;AAGD,WAASE,EAAiBE,GAAM;AAC9B,WAAAL,EAAQ,MAAM,WAAW,GAClBO,EAAUF,CAAI;AAAA,EACtB;AAGD,WAASE,EAAUF,GAAM;AACvB,UAAMG,IAAQR,EAAQ,MAAM,aAAa;AAAA,MACvC,aAAa;AAAA,MACb,UAAAI;AAAA,IACN,CAAK;AACD,WAAIA,MACFA,EAAS,OAAOI,IAElBJ,IAAWI,GACJC,EAAKJ,CAAI;AAAA,EACjB;AAGD,WAASI,EAAKJ,GAAM;AAClB,QAAIA,MAAS,MAAM;AACjB,MAAAL,EAAQ,KAAK,WAAW,GACxBA,EAAQ,KAAK,WAAW,GACxBA,EAAQ,QAAQK,CAAI;AACpB;AAAA,IACD;AACD,WAAIK,EAAmBL,CAAI,KACzBL,EAAQ,QAAQK,CAAI,GACpBL,EAAQ,KAAK,WAAW,GACjBO,MAITP,EAAQ,QAAQK,CAAI,GACbI;AAAA,EACR;AACH;","x_google_ignoreList":[0]}