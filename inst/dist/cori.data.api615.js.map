{"version":3,"file":"cori.data.api615.js","sources":["../../node_modules/apache-arrow/builder/list.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema.mjs';\nimport { List } from '../type.mjs';\nimport { OffsetsBufferBuilder } from './buffer.mjs';\nimport { VariableWidthBuilder } from '../builder.mjs';\n/** @ignore */\nexport class ListBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder(opts.type);\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const [child] = this.children;\n        for (const [index, value] of pending) {\n            if (typeof value === 'undefined') {\n                offsets.set(index, 0);\n            }\n            else {\n                const v = value;\n                const n = v.length;\n                const start = offsets.set(index, n).buffer[index];\n                for (let i = -1; ++i < n;) {\n                    child.set(start + i, v[i]);\n                }\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=list.mjs.map\n"],"names":["ListBuilder","VariableWidthBuilder","opts","OffsetsBufferBuilder","child","name","List","Field","pending","offsets","index","value","v","n","start","i"],"mappings":";;;;;;;;;;AAqBO,MAAMA,UAAoBC,EAAqB;AAAA,EAClD,YAAYC,GAAM;AACd,UAAMA,CAAI,GACV,KAAK,WAAW,IAAIC,EAAqBD,EAAK,IAAI;AAAA,EACrD;AAAA,EACD,SAASE,GAAOC,IAAO,KAAK;AACxB,QAAI,KAAK,cAAc;AACnB,YAAM,IAAI,MAAM,sCAAsC;AAE1D,gBAAK,SAAS,KAAK,WAAW,IAAID,GAClC,KAAK,OAAO,IAAIE,EAAK,IAAIC,EAAMF,GAAMD,EAAM,MAAM,EAAI,CAAC,GAC/C,KAAK,cAAc;AAAA,EAC7B;AAAA,EACD,cAAcI,GAAS;AACnB,UAAMC,IAAU,KAAK,UACf,CAACL,CAAK,IAAI,KAAK;AACrB,eAAW,CAACM,GAAOC,CAAK,KAAKH;AACzB,UAAI,OAAOG,IAAU;AACjB,QAAAF,EAAQ,IAAIC,GAAO,CAAC;AAAA,WAEnB;AACD,cAAME,IAAID,GACJE,IAAID,EAAE,QACNE,IAAQL,EAAQ,IAAIC,GAAOG,CAAC,EAAE,OAAOH,CAAK;AAChD,iBAASK,IAAI,IAAI,EAAEA,IAAIF;AACnB,UAAAT,EAAM,IAAIU,IAAQC,GAAGH,EAAEG,CAAC,CAAC;AAAA,MAEhC;AAAA,EAER;AACL;","x_google_ignoreList":[0]}