{"version":3,"file":"cori.data.api375.js","sources":["../../node_modules/apache-arrow/builder/largeutf8.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { BufferBuilder } from './buffer.mjs';\nimport { VariableWidthBuilder } from '../builder.mjs';\nimport { LargeBinaryBuilder } from './largebinary.mjs';\n/** @ignore */\nexport class LargeUtf8Builder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(Uint8Array);\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, encodeUtf8(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nLargeUtf8Builder.prototype._flushPending = LargeBinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=largeutf8.mjs.map\n"],"names":["LargeUtf8Builder","VariableWidthBuilder","opts","BufferBuilder","size","index","value","encodeUtf8","pending","pendingLength","LargeBinaryBuilder"],"mappings":";;;;;;;;;;AAqBO,MAAMA,UAAyBC,EAAqB;AAAA,EACvD,YAAYC,GAAM;AACd,UAAMA,CAAI,GACV,KAAK,UAAU,IAAIC,EAAc,UAAU;AAAA,EAC9C;AAAA,EACD,IAAI,aAAa;AACb,QAAIC,IAAO,KAAK,iBAAkB,KAAK,SAAS;AAChD,gBAAK,aAAaA,KAAQ,KAAK,SAAS,aACxC,KAAK,YAAYA,KAAQ,KAAK,QAAQ,aACtC,KAAK,WAAWA,KAAQ,KAAK,OAAO,aAC7BA;AAAA,EACV;AAAA,EACD,SAASC,GAAOC,GAAO;AACnB,WAAO,MAAM,SAASD,GAAOE,EAAWD,CAAK,CAAC;AAAA,EACjD;AAAA;AAAA,EAED,cAAcE,GAASC,GAAe;AAAA,EAAG;AAC7C;AACAT,EAAiB,UAAU,gBAAgBU,EAAmB,UAAU;","x_google_ignoreList":[0]}