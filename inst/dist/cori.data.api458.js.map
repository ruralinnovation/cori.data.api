{"version":3,"file":"cori.data.api458.js","sources":["../../node_modules/trim-lines/index.js"],"sourcesContent":["const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n"],"names":["trimLines","value","source","search","match","last","lines","trimLine","start","end","startIndex","endIndex","code"],"mappings":";;;;;;AAYO,SAASA,EAAUC,GAAO;AAC/B,QAAMC,IAAS,OAAOD,CAAK,GACrBE,IAAS;AACf,MAAIC,IAAQD,EAAO,KAAKD,CAAM,GAC1BG,IAAO;AAEX,QAAMC,IAAQ,CAAE;AAEhB,SAAOF;AACL,IAAAE,EAAM;AAAA,MACJC,EAASL,EAAO,MAAMG,GAAMD,EAAM,KAAK,GAAGC,IAAO,GAAG,EAAI;AAAA,MACxDD,EAAM,CAAC;AAAA,IACR,GAEDC,IAAOD,EAAM,QAAQA,EAAM,CAAC,EAAE,QAC9BA,IAAQD,EAAO,KAAKD,CAAM;AAG5B,SAAAI,EAAM,KAAKC,EAASL,EAAO,MAAMG,CAAI,GAAGA,IAAO,GAAG,EAAK,CAAC,GAEjDC,EAAM,KAAK,EAAE;AACtB;AAYA,SAASC,EAASN,GAAOO,GAAOC,GAAK;AACnC,MAAIC,IAAa,GACbC,IAAWV,EAAM;AAErB,MAAIO,GAAO;AACT,QAAII,IAAOX,EAAM,YAAYS,CAAU;AAEvC,WAAOE,MAAS,KAAOA,MAAS;AAC9B,MAAAF,KACAE,IAAOX,EAAM,YAAYS,CAAU;AAAA,EAEtC;AAED,MAAID,GAAK;AACP,QAAIG,IAAOX,EAAM,YAAYU,IAAW,CAAC;AAEzC,WAAOC,MAAS,KAAOA,MAAS;AAC9B,MAAAD,KACAC,IAAOX,EAAM,YAAYU,IAAW,CAAC;AAAA,EAExC;AAED,SAAOA,IAAWD,IAAaT,EAAM,MAAMS,GAAYC,CAAQ,IAAI;AACrE;","x_google_ignoreList":[0]}