{"version":3,"file":"cori.data.api3.js","sources":["../../lib/@cori-risi/contexts/ApiContextProvider.tsx"],"sourcesContent":["import {\n    createContext,\n    ReactElement,\n    useEffect,\n    useState\n} from \"react\";\nimport axios, { AxiosInstance } from 'axios';\n// import { fetchAuthSession, JWT } from \"@aws-amplify/auth\";\n// import { getCurrentUser } from \"@aws-amplify/auth/cognito\";\n// import { useAuthenticator, UseAuthenticator } from \"@aws-amplify/ui-react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//     updateUserId,\n//     updateUserName,\n//     updateUserTokens,\n//     selectUser\n// } from \"../features\";\n// import { User } from '../models';\n\nimport \"./styles/ApiContextProvider.css\";\n\nconst BASE_URL = `${import.meta.env.VITE_CORI_DATA_API}`;\n\nconst apiClient: AxiosInstance = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n});\n\ninterface ApiContextType {\n    apiClient: AxiosInstance;\n    // authenticated: boolean;\n    // authenticated_user: User | null;\n    // autoSignOut: (() => void) | null;\n    baseURL: string;\n    // token: JWT | null;\n    data: any;\n}\n\nexport const ApiContext = createContext<ApiContextType | null>({\n    apiClient: apiClient,\n    // authenticated: false,\n    // authenticated_user: null,\n    // autoSignOut: null,\n    baseURL: BASE_URL,\n    // token: null,\n    data: {}\n});\n\n// let hasAuthSession = false;\n// let hasAuthUser = false;\n// let hasAuthClient = false;\n\nexport default function ApiContextProvider (props: { children?: ReactElement }) {\n\n    // const authenticator: UseAuthenticator = useAuthenticator();\n    // const userState: User = useSelector(selectUser);\n    // const dispatch = useDispatch();\n\n    // const [ authenticated_user, setAuthenticatedUser ] = useState<User>(userState);\n\n    // const [ state, setState ] = useState<ApiContextType | null>(null);\n\n    // useEffect(() => {\n    //\n    //     setState({\n    //         apiClient: apiClient,\n    //         // authenticated: false,\n    //         // authenticated_user: null,\n    //         // autoSignOut: null,\n    //         baseURL: BASE_URL,\n    //         // token: null,\n    //         data: {}\n    //     });\n    //\n    // }, []);\n\n    return (\n        <ApiContext.Provider value={{\n            apiClient: apiClient,\n            // authenticated: false,\n            // authenticated_user: null,\n            // autoSignOut: null,\n            baseURL: BASE_URL,\n            // token: null,\n            data: {}\n        }}>\n            {/*<ApolloGraphQLProviderRedux aws_amplify_token={token} setReady={setReady}>*/}\n                {props.children}\n            {/*</ApolloGraphQLProviderRedux>*/}\n        </ApiContext.Provider>\n    );\n}\n"],"names":["define_import_meta_env_default","BASE_URL","apiClient","axios","ApiContext","createContext","ApiContextProvider","props","jsx"],"mappings":";;;;;;;;;;AA+EQ,IAAAA,IAAA,EAAA,UAAA,KAAA,MAAA,cAAA,KAAA,IAAA,MAAA,IAAA,KAAA,GAAA;AAxDR,MAAMC,IAAA,KAAwC,kBAAA,IACjCC,IAAAC,EAAA,OAAA;AAAA,EACT,SAASF;AAAA,EAAA,SACW;AAAA,IACpB,gBAAA;AAAA,EACH;AAYM,CAAA,GACHG,IAAAC,EAAAA,cAAA;AAAA,EAAA,WAAAH;AAAA;AAAA;AAAA;AAAA,EAIS,SAAAD;AAAA;AAAA,EAGZ,MAAA,CAAA;AAMD,CAAA;AAyBS,SAAAK,EAAAC,GAAA;AACG,SAAAC,gBAAAA,MAAAJ,EAAA,UAAA,EAAA,OAAA;AAAA,IAAA,WAAAF;AAAA;AAAA;AAAA;AAAA,IAIS,SAAAD;AAAA;AAAA,IAGb;EAMR,GAAA,UAAAM,EAAA,SAAA,CAAA;;"}