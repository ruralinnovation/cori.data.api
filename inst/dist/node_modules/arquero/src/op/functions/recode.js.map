{"version":3,"file":"recode.js","sources":["../../../../../../../node_modules/arquero/src/op/functions/recode.js"],"sourcesContent":["import has from '../../util/has';\n\n/**\n * Recodes an input value to an alternative value, based on a provided\n * value map. If a fallback value is specified, it will be returned when\n * a matching value is not found in the map; otherwise, the input value\n * is returned unchanged.\n * @param {*} value The value to recode. The value must be safely\n *  coercible to a string for lookup against the value map.\n * @param {object|Map} map An object or Map with input values for keys and\n *  output recoded values as values. If a non-Map object, only the object's\n *  own properties will be considered.\n * @param {*} [fallback] A default fallback value to use if the input\n *  value is not found in the value map.\n * @return {*} The recoded value.\n */\nexport default function(value, map, fallback) {\n  if (map instanceof Map) {\n    if (map.has(value)) return map.get(value);\n  } else if (has(map, value)) {\n    return map[value];\n  }\n  return fallback !== undefined ? fallback : value;\n}"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,eAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;AAC9C,EAAE,IAAI,GAAG,YAAY,GAAG,EAAE;AAC1B,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9C,GAAG,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;AAC9B,IAAI,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC;AACtB,GAAG;AACH,EAAE,OAAO,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,KAAK,CAAC;AACnD;;;;","x_google_ignoreList":[0]}