{"version":3,"file":"cori.data.api60.js","sources":["../../node_modules/axios/lib/core/mergeConfig.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n"],"names":["headersToObject","thing","AxiosHeaders","mergeConfig","config1","config2","config","getMergedValue","target","source","caseless","utils","mergeDeepProperties","a","b","valueFromConfig2","defaultToConfig2","mergeDirectKeys","prop","mergeMap","merge","configValue"],"mappings":";;;;;;;;AAKA,MAAMA,IAAkB,CAACC,MAAUA,aAAiBC,IAAe,EAAE,GAAGD,EAAO,IAAGA;AAWnE,SAASE,EAAYC,GAASC,GAAS;AAEpD,EAAAA,IAAUA,KAAW;AACrB,QAAMC,IAAS,CAAA;AAEf,WAASC,EAAeC,GAAQC,GAAQC,GAAU;AAChD,WAAIC,EAAM,cAAcH,CAAM,KAAKG,EAAM,cAAcF,CAAM,IACpDE,EAAM,MAAM,KAAK,EAAC,UAAAD,EAAQ,GAAGF,GAAQC,CAAM,IACzCE,EAAM,cAAcF,CAAM,IAC5BE,EAAM,MAAM,CAAE,GAAEF,CAAM,IACpBE,EAAM,QAAQF,CAAM,IACtBA,EAAO,UAETA;AAAA,EACR;AAGD,WAASG,EAAoBC,GAAGC,GAAGJ,GAAU;AAC3C,QAAKC,EAAM,YAAYG,CAAC;AAEjB,UAAI,CAACH,EAAM,YAAYE,CAAC;AAC7B,eAAON,EAAe,QAAWM,GAAGH,CAAQ;AAAA;AAF5C,aAAOH,EAAeM,GAAGC,GAAGJ,CAAQ;AAAA,EAIvC;AAGD,WAASK,EAAiBF,GAAGC,GAAG;AAC9B,QAAI,CAACH,EAAM,YAAYG,CAAC;AACtB,aAAOP,EAAe,QAAWO,CAAC;AAAA,EAErC;AAGD,WAASE,EAAiBH,GAAGC,GAAG;AAC9B,QAAKH,EAAM,YAAYG,CAAC;AAEjB,UAAI,CAACH,EAAM,YAAYE,CAAC;AAC7B,eAAON,EAAe,QAAWM,CAAC;AAAA;AAFlC,aAAON,EAAe,QAAWO,CAAC;AAAA,EAIrC;AAGD,WAASG,EAAgBJ,GAAGC,GAAGI,GAAM;AACnC,QAAIA,KAAQb;AACV,aAAOE,EAAeM,GAAGC,CAAC;AACrB,QAAII,KAAQd;AACjB,aAAOG,EAAe,QAAWM,CAAC;AAAA,EAErC;AAED,QAAMM,IAAW;AAAA,IACf,KAAKJ;AAAA,IACL,QAAQA;AAAA,IACR,MAAMA;AAAA,IACN,SAASC;AAAA,IACT,kBAAkBA;AAAA,IAClB,mBAAmBA;AAAA,IACnB,kBAAkBA;AAAA,IAClB,SAASA;AAAA,IACT,gBAAgBA;AAAA,IAChB,iBAAiBA;AAAA,IACjB,eAAeA;AAAA,IACf,SAASA;AAAA,IACT,cAAcA;AAAA,IACd,gBAAgBA;AAAA,IAChB,gBAAgBA;AAAA,IAChB,kBAAkBA;AAAA,IAClB,oBAAoBA;AAAA,IACpB,YAAYA;AAAA,IACZ,kBAAkBA;AAAA,IAClB,eAAeA;AAAA,IACf,gBAAgBA;AAAA,IAChB,WAAWA;AAAA,IACX,WAAWA;AAAA,IACX,YAAYA;AAAA,IACZ,aAAaA;AAAA,IACb,YAAYA;AAAA,IACZ,kBAAkBA;AAAA,IAClB,gBAAgBC;AAAA,IAChB,SAAS,CAACJ,GAAGC,MAAMF,EAAoBZ,EAAgBa,CAAC,GAAGb,EAAgBc,CAAC,GAAG,EAAI;AAAA,EACvF;AAEE,SAAAH,EAAM,QAAQ,OAAO,KAAK,OAAO,OAAO,IAAIP,GAASC,CAAO,CAAC,GAAG,SAA4Ba,GAAM;AAChG,UAAME,IAAQD,EAASD,CAAI,KAAKN,GAC1BS,IAAcD,EAAMhB,EAAQc,CAAI,GAAGb,EAAQa,CAAI,GAAGA,CAAI;AAC5D,IAACP,EAAM,YAAYU,CAAW,KAAKD,MAAUH,MAAqBX,EAAOY,CAAI,IAAIG;AAAA,EACrF,CAAG,GAEMf;AACT;","x_google_ignoreList":[0]}