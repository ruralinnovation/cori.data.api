{"version":3,"file":"cori.data.api199.js","sources":["../../node_modules/arquero/src/arrow/builder/resolve-type.js"],"sourcesContent":["import {\n  Binary,\n  Bool,\n  DataType,\n  DateDay,\n  DateMillisecond,\n  Dictionary,\n  Float16,\n  Float32,\n  Float64,\n  Int16,\n  Int32,\n  Int64,\n  Int8,\n  IntervalDayTime,\n  IntervalYearMonth,\n  Null,\n  TimeMicrosecond,\n  TimeMillisecond,\n  TimeNanosecond,\n  TimeSecond,\n  Type,\n  Uint16,\n  Uint32,\n  Uint64,\n  Uint8,\n  Utf8\n} from 'apache-arrow';\nimport error from '../../util/error';\nimport toString from '../../util/to-string';\n\nexport default function(type) {\n  if (type instanceof DataType || type == null) {\n    return type;\n  }\n\n  switch (type) {\n    case Type.Binary:\n      return new Binary();\n    case Type.Bool:\n      return new Bool();\n    case Type.DateDay:\n      return new DateDay();\n    case Type.DateMillisecond:\n    case Type.Date:\n      return new DateMillisecond();\n    case Type.Dictionary:\n      return new Dictionary(new Utf8(), new Int32());\n    case Type.Float16:\n      return new Float16();\n    case Type.Float32:\n      return new Float32();\n    case Type.Float64:\n    case Type.Float:\n      return new Float64();\n    case Type.Int8:\n      return new Int8();\n    case Type.Int16:\n      return new Int16();\n    case Type.Int32:\n    case Type.Int:\n      return new Int32();\n    case Type.Int64:\n      return new Int64();\n    case Type.IntervalDayTime:\n      return new IntervalDayTime();\n    case Type.Interval:\n    case Type.IntervalYearMonth:\n      return new IntervalYearMonth();\n    case Type.Null:\n      return new Null();\n    case Type.TimeMicrosecond:\n      return new TimeMicrosecond();\n    case Type.TimeMillisecond:\n    case Type.Time:\n      return new TimeMillisecond();\n    case Type.TimeNanosecond:\n      return new TimeNanosecond();\n    case Type.TimeSecond:\n      return new TimeSecond();\n    case Type.Uint8:\n      return new Uint8();\n    case Type.Uint16:\n      return new Uint16();\n    case Type.Uint32:\n      return new Uint32();\n    case Type.Uint64:\n      return new Uint64();\n    case Type.Utf8:\n      return new Utf8();\n    default:\n      error(\n        `Unsupported type code: ${toString(type)}. ` +\n        'Use a data type constructor instead?'\n      );\n  }\n}"],"names":["resolveType","type","DataType","Type","Binary","Bool","DateDay","DateMillisecond","Dictionary","Utf8","Int32","Float16","Float32","Float64","Int8","Int16","Int64","IntervalDayTime","IntervalYearMonth","Null","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","Uint8","Uint16","Uint32","Uint64","error","toString"],"mappings":";;;;;;;;;;AA+Be,SAAQA,EAACC,GAAM;AAC5B,MAAIA,aAAgBC,KAAYD,KAAQ;AACtC,WAAOA;AAGT,UAAQA,GAAI;AAAA,IACV,KAAKE,EAAK;AACR,aAAO,IAAIC,EAAM;AAAA,IACnB,KAAKD,EAAK;AACR,aAAO,IAAIE,EAAI;AAAA,IACjB,KAAKF,EAAK;AACR,aAAO,IAAIG,EAAO;AAAA,IACpB,KAAKH,EAAK;AAAA,IACV,KAAKA,EAAK;AACR,aAAO,IAAII,EAAe;AAAA,IAC5B,KAAKJ,EAAK;AACR,aAAO,IAAIK,EAAW,IAAIC,EAAM,GAAE,IAAIC,EAAO,CAAA;AAAA,IAC/C,KAAKP,EAAK;AACR,aAAO,IAAIQ,EAAO;AAAA,IACpB,KAAKR,EAAK;AACR,aAAO,IAAIS,EAAO;AAAA,IACpB,KAAKT,EAAK;AAAA,IACV,KAAKA,EAAK;AACR,aAAO,IAAIU,EAAO;AAAA,IACpB,KAAKV,EAAK;AACR,aAAO,IAAIW,EAAI;AAAA,IACjB,KAAKX,EAAK;AACR,aAAO,IAAIY,EAAK;AAAA,IAClB,KAAKZ,EAAK;AAAA,IACV,KAAKA,EAAK;AACR,aAAO,IAAIO,EAAK;AAAA,IAClB,KAAKP,EAAK;AACR,aAAO,IAAIa,EAAK;AAAA,IAClB,KAAKb,EAAK;AACR,aAAO,IAAIc,EAAe;AAAA,IAC5B,KAAKd,EAAK;AAAA,IACV,KAAKA,EAAK;AACR,aAAO,IAAIe,EAAiB;AAAA,IAC9B,KAAKf,EAAK;AACR,aAAO,IAAIgB,EAAI;AAAA,IACjB,KAAKhB,EAAK;AACR,aAAO,IAAIiB,EAAe;AAAA,IAC5B,KAAKjB,EAAK;AAAA,IACV,KAAKA,EAAK;AACR,aAAO,IAAIkB,EAAe;AAAA,IAC5B,KAAKlB,EAAK;AACR,aAAO,IAAImB,EAAc;AAAA,IAC3B,KAAKnB,EAAK;AACR,aAAO,IAAIoB,EAAU;AAAA,IACvB,KAAKpB,EAAK;AACR,aAAO,IAAIqB,EAAK;AAAA,IAClB,KAAKrB,EAAK;AACR,aAAO,IAAIsB,EAAM;AAAA,IACnB,KAAKtB,EAAK;AACR,aAAO,IAAIuB,EAAM;AAAA,IACnB,KAAKvB,EAAK;AACR,aAAO,IAAIwB,EAAM;AAAA,IACnB,KAAKxB,EAAK;AACR,aAAO,IAAIM,EAAI;AAAA,IACjB;AACE,MAAAmB;AAAA,QACE,0BAA0BC,EAAS5B,CAAI,CAAC;AAAA,MAEhD;AAAA,EACG;AACH;","x_google_ignoreList":[0]}