{"version":3,"file":"derive.js","sources":["../../../../../../node_modules/arquero/src/engine/derive.js"],"sourcesContent":["import { window } from './window/window';\nimport { aggregate } from './reduce/util';\nimport { hasWindow } from '../op';\nimport columnSet from '../table/column-set';\nimport repeat from '../util/repeat';\n\nfunction isWindowed(op) {\n  return hasWindow(op.name) ||\n    op.frame && (\n      Number.isFinite(op.frame[0]) ||\n      Number.isFinite(op.frame[1])\n    );\n}\n\nexport default function(table, { names, exprs, ops }, options = {}) {\n  // instantiate output data\n  const total = table.totalRows();\n  const cols = columnSet(options.drop ? null : table);\n  const data = names.map(name => cols.add(name, Array(total)));\n\n  // analyze operations, compute non-windowed aggregates\n  const [ aggOps, winOps ] = segmentOps(ops);\n\n  const size = table.isGrouped() ? table.groups().size : 1;\n  const result = aggregate(\n    table, aggOps,\n    repeat(ops.length, () => Array(size))\n  );\n\n  // perform table scans to generate output values\n  winOps.length\n    ? window(table, data, exprs, result, winOps)\n    : output(table, data, exprs, result);\n\n  return table.create(cols);\n}\n\nfunction segmentOps(ops) {\n  const aggOps = [];\n  const winOps = [];\n  const n = ops.length;\n\n  for (let i = 0; i < n; ++i) {\n    const op = ops[i];\n    op.id = i;\n    (isWindowed(op) ? winOps : aggOps).push(op);\n  }\n\n  return [aggOps, winOps];\n}\n\nfunction output(table, cols, exprs, result) {\n  const bits = table.mask();\n  const data = table.data();\n  const { keys } = table.groups() || {};\n  const op = keys\n    ? (id, row) => result[id][keys[row]]\n    : id => result[id][0];\n\n  const m = cols.length;\n  for (let j = 0; j < m; ++j) {\n    const get = exprs[j];\n    const col = cols[j];\n\n    // inline the following for performance:\n    // table.scan((i, data) => col[i] = get(i, data, op));\n    if (bits) {\n      for (let i = bits.next(0); i >= 0; i = bits.next(i + 1)) {\n        col[i] = get(i, data, op);\n      }\n    } else {\n      const n = table.totalRows();\n      for (let i = 0; i < n; ++i) {\n        col[i] = get(i, data, op);\n      }\n    }\n  }\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}