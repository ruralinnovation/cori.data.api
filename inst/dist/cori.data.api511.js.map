{"version":3,"file":"cori.data.api511.js","sources":["../../node_modules/arquero/src/engine/derive.js"],"sourcesContent":["import { window } from './window/window';\nimport { aggregate } from './reduce/util';\nimport { hasWindow } from '../op';\nimport columnSet from '../table/column-set';\nimport repeat from '../util/repeat';\n\nfunction isWindowed(op) {\n  return hasWindow(op.name) ||\n    op.frame && (\n      Number.isFinite(op.frame[0]) ||\n      Number.isFinite(op.frame[1])\n    );\n}\n\nexport default function(table, { names, exprs, ops }, options = {}) {\n  // instantiate output data\n  const total = table.totalRows();\n  const cols = columnSet(options.drop ? null : table);\n  const data = names.map(name => cols.add(name, Array(total)));\n\n  // analyze operations, compute non-windowed aggregates\n  const [ aggOps, winOps ] = segmentOps(ops);\n\n  const size = table.isGrouped() ? table.groups().size : 1;\n  const result = aggregate(\n    table, aggOps,\n    repeat(ops.length, () => Array(size))\n  );\n\n  // perform table scans to generate output values\n  winOps.length\n    ? window(table, data, exprs, result, winOps)\n    : output(table, data, exprs, result);\n\n  return table.create(cols);\n}\n\nfunction segmentOps(ops) {\n  const aggOps = [];\n  const winOps = [];\n  const n = ops.length;\n\n  for (let i = 0; i < n; ++i) {\n    const op = ops[i];\n    op.id = i;\n    (isWindowed(op) ? winOps : aggOps).push(op);\n  }\n\n  return [aggOps, winOps];\n}\n\nfunction output(table, cols, exprs, result) {\n  const bits = table.mask();\n  const data = table.data();\n  const { keys } = table.groups() || {};\n  const op = keys\n    ? (id, row) => result[id][keys[row]]\n    : id => result[id][0];\n\n  const m = cols.length;\n  for (let j = 0; j < m; ++j) {\n    const get = exprs[j];\n    const col = cols[j];\n\n    // inline the following for performance:\n    // table.scan((i, data) => col[i] = get(i, data, op));\n    if (bits) {\n      for (let i = bits.next(0); i >= 0; i = bits.next(i + 1)) {\n        col[i] = get(i, data, op);\n      }\n    } else {\n      const n = table.totalRows();\n      for (let i = 0; i < n; ++i) {\n        col[i] = get(i, data, op);\n      }\n    }\n  }\n}"],"names":["isWindowed","op","hasWindow","_derive","table","names","exprs","ops","options","total","cols","columnSet","data","name","aggOps","winOps","segmentOps","size","result","aggregate","repeat","window","output","n","i","bits","keys","id","row","m","j","get","col"],"mappings":";;;;;;;;;;;AAMA,SAASA,EAAWC,GAAI;AACtB,SAAOC,EAAUD,EAAG,IAAI,KACtBA,EAAG,UACD,OAAO,SAASA,EAAG,MAAM,CAAC,CAAC,KAC3B,OAAO,SAASA,EAAG,MAAM,CAAC,CAAC;AAEjC;AAEe,SAAAE,EAASC,GAAO,EAAE,OAAAC,GAAO,OAAAC,GAAO,KAAAC,EAAK,GAAEC,IAAU,IAAI;AAElE,QAAMC,IAAQL,EAAM,aACdM,IAAOC,EAAUH,EAAQ,OAAO,OAAOJ,CAAK,GAC5CQ,IAAOP,EAAM,IAAI,CAAAQ,MAAQH,EAAK,IAAIG,GAAM,MAAMJ,CAAK,CAAC,CAAC,GAGrD,CAAEK,GAAQC,CAAQ,IAAGC,EAAWT,CAAG,GAEnCU,IAAOb,EAAM,UAAW,IAAGA,EAAM,OAAQ,EAAC,OAAO,GACjDc,IAASC;AAAA,IACbf;AAAA,IAAOU;AAAA,IACPM,EAAOb,EAAI,QAAQ,MAAM,MAAMU,CAAI,CAAC;AAAA,EACxC;AAGE,SAAAF,EAAO,SACHM,EAAOjB,GAAOQ,GAAMN,GAAOY,GAAQH,CAAM,IACzCO,EAAOlB,GAAOQ,GAAMN,GAAOY,CAAM,GAE9Bd,EAAM,OAAOM,CAAI;AAC1B;AAEA,SAASM,EAAWT,GAAK;AACvB,QAAMO,IAAS,CAAA,GACTC,IAAS,CAAA,GACTQ,IAAIhB,EAAI;AAEd,WAASiB,IAAI,GAAGA,IAAID,GAAG,EAAEC,GAAG;AAC1B,UAAMvB,IAAKM,EAAIiB,CAAC;AAChB,IAAAvB,EAAG,KAAKuB,IACPxB,EAAWC,CAAE,IAAIc,IAASD,GAAQ,KAAKb,CAAE;AAAA,EAC3C;AAED,SAAO,CAACa,GAAQC,CAAM;AACxB;AAEA,SAASO,EAAOlB,GAAOM,GAAMJ,GAAOY,GAAQ;AAC1C,QAAMO,IAAOrB,EAAM,QACbQ,IAAOR,EAAM,QACb,EAAE,MAAAsB,EAAM,IAAGtB,EAAM,OAAM,KAAM,CAAA,GAC7BH,IAAKyB,IACP,CAACC,GAAIC,MAAQV,EAAOS,CAAE,EAAED,EAAKE,CAAG,CAAC,IACjC,CAAAD,MAAMT,EAAOS,CAAE,EAAE,CAAC,GAEhBE,IAAInB,EAAK;AACf,WAASoB,IAAI,GAAGA,IAAID,GAAG,EAAEC,GAAG;AAC1B,UAAMC,IAAMzB,EAAMwB,CAAC,GACbE,IAAMtB,EAAKoB,CAAC;AAIlB,QAAIL;AACF,eAASD,IAAIC,EAAK,KAAK,CAAC,GAAGD,KAAK,GAAGA,IAAIC,EAAK,KAAKD,IAAI,CAAC;AACpD,QAAAQ,EAAIR,CAAC,IAAIO,EAAIP,GAAGZ,GAAMX,CAAE;AAAA,SAErB;AACL,YAAMsB,IAAInB,EAAM;AAChB,eAASoB,IAAI,GAAGA,IAAID,GAAG,EAAEC;AACvB,QAAAQ,EAAIR,CAAC,IAAIO,EAAIP,GAAGZ,GAAMX,CAAE;AAAA,IAE3B;AAAA,EACF;AACH;","x_google_ignoreList":[0]}