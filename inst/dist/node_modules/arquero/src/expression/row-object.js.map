{"version":3,"file":"row-object.js","sources":["../../../../../../node_modules/arquero/src/expression/row-object.js"],"sourcesContent":["import { Literal, ObjectExpression, Property } from './ast/constants';\nimport codegen from './codegen';\nimport compile from './compile';\nimport rewrite from './rewrite';\nimport entries from '../util/entries';\nimport isArray from '../util/is-array';\nimport toString from '../util/to-string';\n\nexport const ROW_OBJECT = 'row_object';\n\nexport function rowObjectExpression(node, props) {\n  node.type = ObjectExpression;\n\n  const p = node.properties = [];\n  for (const prop of entries(props)) {\n    const [name, key] = isArray(prop) ? prop : [prop, prop];\n    p.push({\n      type: Property,\n      key: { type: Literal, raw: toString(key) },\n      value: rewrite({ computed: true }, name)\n    });\n  }\n\n  return node;\n}\n\nexport function rowObjectCode(props) {\n  return codegen(rowObjectExpression({}, props));\n}\n\nexport function rowObjectBuilder(props) {\n  return compile.expr(rowObjectCode(props));\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAQY,MAAC,UAAU,GAAG,aAAa;AACvC;AACO,SAAS,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE;AACjD,EAAE,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC/B;AACA,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACjC,EAAE,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AACrC,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5D,IAAI,CAAC,CAAC,IAAI,CAAC;AACX,MAAM,IAAI,EAAE,QAAQ;AACpB,MAAM,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE;AAChD,MAAM,KAAK,EAAE,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC;AAC9C,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACO,SAAS,aAAa,CAAC,KAAK,EAAE;AACrC,EAAE,OAAO,OAAO,CAAC,mBAAmB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,CAAC;AACD;AACO,SAAS,gBAAgB,CAAC,KAAK,EAAE;AACxC,EAAE,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C;;;;","x_google_ignoreList":[0]}