{"version":3,"file":"cori.data.api23.js","sources":["../../node_modules/react-markdown/lib/index.js"],"sourcesContent":["// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","options","allowedElements","allowElement","children","className","components","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","unified","remarkParse","remarkRehype","file","VFile","deprecation","unreachable","mdastTree","hastTree","visit","transform","toJsxRuntime","Fragment","jsx","jsxs","node","index","parent","key","urlAttributes","value","test","remove","colon","questionMark","numberSign","slash"],"mappings":"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","x_google_ignoreList":[0]}