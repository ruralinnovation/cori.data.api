{"version":3,"file":"groupby.js","sources":["../../../../../../node_modules/arquero/src/engine/groupby.js"],"sourcesContent":["import { aggregateGet } from './reduce/util';\nimport keyFunction from '../util/key-function';\n\nexport default function(table, exprs) {\n  return table.create({\n    groups: createGroups(table, exprs)\n  });\n}\n\nfunction createGroups(table, { names = [], exprs = [], ops = [] }) {\n  const n = names.length;\n  if (n === 0) return null;\n\n  // check for optimized path when grouping by a single field\n  // use pre-calculated groups if available\n  if (n === 1 && !table.isFiltered() && exprs[0].field) {\n    const col = table.column(exprs[0].field);\n    if (col.groups) return col.groups(names);\n  }\n\n  let get = aggregateGet(table, ops, exprs);\n  const getKey = keyFunction(get);\n  const nrows = table.totalRows();\n  const keys = new Uint32Array(nrows);\n  const index = {};\n  const rows = [];\n\n  // inline table scan for performance\n  const data = table.data();\n  const bits = table.mask();\n  if (bits) {\n    for (let i = bits.next(0); i >= 0; i = bits.next(i + 1)) {\n      const key = getKey(i, data) + '';\n      const val = index[key];\n      keys[i] = val != null ? val : (index[key] = rows.push(i) - 1);\n    }\n  } else {\n    for (let i = 0; i < nrows; ++i) {\n      const key = getKey(i, data) + '';\n      const val = index[key];\n      keys[i] = val != null ? val : (index[key] = rows.push(i) - 1);\n    }\n  }\n\n  if (!ops.length) {\n    // capture data in closure, so no interaction with select\n    get = get.map(f => row => f(row, data));\n  }\n\n  return { keys, get, names, rows, size: rows.length };\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}