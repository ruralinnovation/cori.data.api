{"version":3,"file":"cori.data.api531.js","sources":["../../node_modules/arquero/src/engine/sample.js"],"sourcesContent":["import sample from '../util/sample';\nimport _shuffle from '../util/shuffle';\n\nexport default function(table, size, weight, options = {}) {\n  const { replace, shuffle } = options;\n  const parts = table.partitions(false);\n\n  let total = 0;\n  size = parts.map((idx, group) => {\n    let s = size(group);\n    total += (s = (replace ? s : Math.min(idx.length, s)));\n    return s;\n  });\n\n  const samples = new Uint32Array(total);\n  let curr = 0;\n\n  parts.forEach((idx, group) => {\n    const sz = size[group];\n    const buf = samples.subarray(curr, curr += sz);\n\n    if (!replace && sz === idx.length) {\n      // sample size === data size, no replacement\n      // no need to sample, just copy indices\n      buf.set(idx);\n    } else {\n      sample(buf, replace, idx, weight);\n    }\n  });\n\n  if (shuffle !== false && (parts.length > 1 || !replace)) {\n    // sampling with replacement methods shuffle, so in\n    // that case a single partition is already good to go\n    _shuffle(samples);\n  }\n\n  return table.reify(samples);\n}"],"names":["_sample","table","size","weight","options","replace","shuffle","parts","total","idx","group","s","samples","curr","sz","buf","sample","_shuffle"],"mappings":";;;;;;;;AAGe,SAAQA,EAACC,GAAOC,GAAMC,GAAQC,IAAU,CAAA,GAAI;AACzD,QAAM,EAAE,SAAAC,GAAS,SAAAC,EAAS,IAAGF,GACvBG,IAAQN,EAAM,WAAW,EAAK;AAEpC,MAAIO,IAAQ;AACZ,EAAAN,IAAOK,EAAM,IAAI,CAACE,GAAKC,MAAU;AAC/B,QAAIC,IAAIT,EAAKQ,CAAK;AAClB,WAAAF,KAAUG,IAAKN,IAAUM,IAAI,KAAK,IAAIF,EAAI,QAAQE,CAAC,GAC5CA;AAAA,EACX,CAAG;AAED,QAAMC,IAAU,IAAI,YAAYJ,CAAK;AACrC,MAAIK,IAAO;AAEX,SAAAN,EAAM,QAAQ,CAACE,GAAKC,MAAU;AAC5B,UAAMI,IAAKZ,EAAKQ,CAAK,GACfK,IAAMH,EAAQ,SAASC,GAAMA,KAAQC,CAAE;AAE7C,IAAI,CAACT,KAAWS,MAAOL,EAAI,SAGzBM,EAAI,IAAIN,CAAG,IAEXO,EAAOD,GAAKV,GAASI,GAAKN,CAAM;AAAA,EAEtC,CAAG,GAEGG,MAAY,OAAUC,EAAM,SAAS,KAAK,CAACF,MAG7CY,EAASL,CAAO,GAGXX,EAAM,MAAMW,CAAO;AAC5B;","x_google_ignoreList":[0]}