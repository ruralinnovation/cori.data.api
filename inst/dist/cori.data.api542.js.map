{"version":3,"file":"cori.data.api542.js","sources":["../../node_modules/apache-arrow/visitor/set.mjs"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { bigIntToNumber } from '../util/bigint.mjs';\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { float64ToUint16 } from '../util/math.mjs';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.mjs';\n/** @ignore */\nexport class SetVisitor extends Visitor {\n}\n/** @ignore */\nfunction wrapSet(fn) {\n    return (data, _1, _2) => {\n        if (data.setValid(_1, _2 != null)) {\n            return fn(data, _1, _2);\n        }\n    };\n}\n/** @ignore */\nexport const setEpochMsToDays = (data, index, epochMs) => { data[index] = Math.trunc(epochMs / 86400000); };\n/** @ignore */\nexport const setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc(epochMs % 4294967296);\n    data[index + 1] = Math.trunc(epochMs / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc((epochMs * 1000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000) / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc((epochMs * 1000000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000000) / 4294967296);\n};\n/** @ignore */\nexport const setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    if (index + 1 < valueOffsets.length) {\n        const x = bigIntToNumber(valueOffsets[index]);\n        const y = bigIntToNumber(valueOffsets[index + 1]);\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nexport const setInt = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setFloat = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setFloat16 = ({ values }, index, value) => { values[index] = float64ToUint16(value); };\n/* istanbul ignore next */\n/** @ignore */\nexport const setAnyFloat = (data, index, value) => {\n    switch (data.type.precision) {\n        case Precision.HALF:\n            return setFloat16(data, index, value);\n        case Precision.SINGLE:\n        case Precision.DOUBLE:\n            return setFloat(data, index, value);\n    }\n};\n/** @ignore */\nexport const setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nexport const setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nexport const setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n/* istanbul ignore next */\nexport const setDate = (data, index, value) => {\n    data.type.unit === DateUnit.DAY\n        ? setDateDay(data, index, value)\n        : setDateMillisecond(data, index, value);\n};\n/** @ignore */\nexport const setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nexport const setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nexport const setTimestamp = (data, index, value) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(data, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(data, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(data, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(data, index, value);\n    }\n};\n/** @ignore */\nexport const setTimeSecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setTimeMillisecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setTimeMicrosecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setTimeNanosecond = ({ values }, index, value) => { values[index] = value; };\n/* istanbul ignore next */\n/** @ignore */\nexport const setTime = (data, index, value) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(data, index, value);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(data, index, value);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(data, index, value);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(data, index, value);\n    }\n};\n/** @ignore */\nexport const setDecimal = ({ values, stride }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setList = (data, index, value) => {\n    const values = data.children[0];\n    const valueOffsets = data.valueOffsets;\n    const set = instance.getVisitFn(values);\n    if (Array.isArray(value)) {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value[++idx]);\n        }\n    }\n    else {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value.get(++idx));\n        }\n    }\n};\n/** @ignore */\nconst setMap = (data, index, value) => {\n    const values = data.children[0];\n    const { valueOffsets } = data;\n    const set = instance.getVisitFn(values);\n    let { [index]: idx, [index + 1]: end } = valueOffsets;\n    const entries = value instanceof Map ? value.entries() : Object.entries(value);\n    for (const val of entries) {\n        set(values, idx, val);\n        if (++idx >= end)\n            break;\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (set, c, _, i) => c && set(c, o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (set, c, _, i) => c && set(c, o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (set, c, f, _) => c && set(c, o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (set, c, f, _) => c && set(c, o, v[f.name]);\n/** @ignore */\nconst setStruct = (data, index, value) => {\n    const childSetters = data.type.children.map((f) => instance.getVisitFn(f.type));\n    const set = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    // eslint-disable-next-line unicorn/no-array-for-each\n    data.type.children.forEach((f, i) => set(childSetters[i], data.children[i], f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (data, index, value) => {\n    data.type.mode === UnionMode.Dense ?\n        setDenseUnion(data, index, value) :\n        setSparseUnion(data, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (data, index, value) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, data.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (data, index, value) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, index, value);\n};\n/** @ignore */\nconst setDictionary = (data, index, value) => {\n    var _a;\n    (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.set(data.values[index], value);\n};\n/* istanbul ignore next */\n/** @ignore */\nexport const setIntervalValue = (data, index, value) => {\n    (data.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(data, index, value)\n        : setIntervalYearMonth(data, index, value);\n};\n/** @ignore */\nexport const setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nexport const setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nexport const setDurationSecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setDurationMillisecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setDurationMicrosecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setDurationNanosecond = ({ values }, index, value) => { values[index] = value; };\n/* istanbul ignore next */\n/** @ignore */\nexport const setDuration = (data, index, value) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setDurationSecond(data, index, value);\n        case TimeUnit.MILLISECOND: return setDurationMillisecond(data, index, value);\n        case TimeUnit.MICROSECOND: return setDurationMicrosecond(data, index, value);\n        case TimeUnit.NANOSECOND: return setDurationNanosecond(data, index, value);\n    }\n};\n/** @ignore */\nconst setFixedSizeList = (data, index, value) => {\n    const { stride } = data;\n    const child = data.children[0];\n    const set = instance.getVisitFn(child);\n    if (Array.isArray(value)) {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value[idx]);\n        }\n    }\n    else {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value.get(idx));\n        }\n    }\n};\nSetVisitor.prototype.visitBool = wrapSet(setBool);\nSetVisitor.prototype.visitInt = wrapSet(setInt);\nSetVisitor.prototype.visitInt8 = wrapSet(setInt);\nSetVisitor.prototype.visitInt16 = wrapSet(setInt);\nSetVisitor.prototype.visitInt32 = wrapSet(setInt);\nSetVisitor.prototype.visitInt64 = wrapSet(setInt);\nSetVisitor.prototype.visitUint8 = wrapSet(setInt);\nSetVisitor.prototype.visitUint16 = wrapSet(setInt);\nSetVisitor.prototype.visitUint32 = wrapSet(setInt);\nSetVisitor.prototype.visitUint64 = wrapSet(setInt);\nSetVisitor.prototype.visitFloat = wrapSet(setAnyFloat);\nSetVisitor.prototype.visitFloat16 = wrapSet(setFloat16);\nSetVisitor.prototype.visitFloat32 = wrapSet(setFloat);\nSetVisitor.prototype.visitFloat64 = wrapSet(setFloat);\nSetVisitor.prototype.visitUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitLargeUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitLargeBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitFixedSizeBinary = wrapSet(setFixedSizeBinary);\nSetVisitor.prototype.visitDate = wrapSet(setDate);\nSetVisitor.prototype.visitDateDay = wrapSet(setDateDay);\nSetVisitor.prototype.visitDateMillisecond = wrapSet(setDateMillisecond);\nSetVisitor.prototype.visitTimestamp = wrapSet(setTimestamp);\nSetVisitor.prototype.visitTimestampSecond = wrapSet(setTimestampSecond);\nSetVisitor.prototype.visitTimestampMillisecond = wrapSet(setTimestampMillisecond);\nSetVisitor.prototype.visitTimestampMicrosecond = wrapSet(setTimestampMicrosecond);\nSetVisitor.prototype.visitTimestampNanosecond = wrapSet(setTimestampNanosecond);\nSetVisitor.prototype.visitTime = wrapSet(setTime);\nSetVisitor.prototype.visitTimeSecond = wrapSet(setTimeSecond);\nSetVisitor.prototype.visitTimeMillisecond = wrapSet(setTimeMillisecond);\nSetVisitor.prototype.visitTimeMicrosecond = wrapSet(setTimeMicrosecond);\nSetVisitor.prototype.visitTimeNanosecond = wrapSet(setTimeNanosecond);\nSetVisitor.prototype.visitDecimal = wrapSet(setDecimal);\nSetVisitor.prototype.visitList = wrapSet(setList);\nSetVisitor.prototype.visitStruct = wrapSet(setStruct);\nSetVisitor.prototype.visitUnion = wrapSet(setUnion);\nSetVisitor.prototype.visitDenseUnion = wrapSet(setDenseUnion);\nSetVisitor.prototype.visitSparseUnion = wrapSet(setSparseUnion);\nSetVisitor.prototype.visitDictionary = wrapSet(setDictionary);\nSetVisitor.prototype.visitInterval = wrapSet(setIntervalValue);\nSetVisitor.prototype.visitIntervalDayTime = wrapSet(setIntervalDayTime);\nSetVisitor.prototype.visitIntervalYearMonth = wrapSet(setIntervalYearMonth);\nSetVisitor.prototype.visitDuration = wrapSet(setDuration);\nSetVisitor.prototype.visitDurationSecond = wrapSet(setDurationSecond);\nSetVisitor.prototype.visitDurationMillisecond = wrapSet(setDurationMillisecond);\nSetVisitor.prototype.visitDurationMicrosecond = wrapSet(setDurationMicrosecond);\nSetVisitor.prototype.visitDurationNanosecond = wrapSet(setDurationNanosecond);\nSetVisitor.prototype.visitFixedSizeList = wrapSet(setFixedSizeList);\nSetVisitor.prototype.visitMap = wrapSet(setMap);\n/** @ignore */\nexport const instance = new SetVisitor();\n\n//# sourceMappingURL=set.mjs.map\n"],"names":["SetVisitor","Visitor","wrapSet","fn","data","_1","_2","setEpochMsToDays","index","epochMs","setEpochMsToMillisecondsLong","setEpochMsToMicrosecondsLong","setEpochMsToNanosecondsLong","setVariableWidthBytes","values","valueOffsets","value","x","bigIntToNumber","y","setBool","offset","val","idx","setInt","setFloat","setFloat16","float64ToUint16","setAnyFloat","Precision","setDateDay","setDateMillisecond","setFixedSizeBinary","stride","setBinary","setUtf8","encodeUtf8","setDate","DateUnit","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setTimestampNanosecond","setTimestamp","TimeUnit","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setTime","setDecimal","setList","set","instance","itr","end","setMap","entries","_setStructArrayValue","o","v","c","_","i","_setStructVectorValue","_setStructMapValue","f","_setStructObjectValue","setStruct","childSetters","Vector","setUnion","UnionMode","setDenseUnion","setSparseUnion","childIndex","child","setDictionary","_a","setIntervalValue","IntervalUnit","setIntervalDayTime","setIntervalYearMonth","setDurationSecond","setDurationMillisecond","setDurationMicrosecond","setDurationNanosecond","setDuration","setFixedSizeList"],"mappings":"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","x_google_ignoreList":[0]}